2025-08-22T11:26:51.525+03:00  INFO 7032 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 7032 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:26:51.547+03:00  INFO 7032 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:26:54.497+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:26:54.502+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:26:54.591+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.595+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.599+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.603+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.608+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.613+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.618+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.630+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.638+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.644+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:26:54.647+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 128 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:26:54.658+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:26:54.660+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:26:54.679+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.680+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.681+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.683+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.685+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.687+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.688+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.689+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.690+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.692+03:00  INFO 7032 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:26:54.693+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:26:54.710+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:26:54.712+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:26:55.077+03:00  INFO 7032 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 350 ms. Found 10 JPA repository interfaces.
2025-08-22T11:26:55.829+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T11:26:58.808+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:26:59.175+03:00  INFO 7032 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:26:59.274+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:26:59.472+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@54f4734e
2025-08-22T11:26:59.473+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@54f4734e
2025-08-22T11:26:59.473+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@54f4734e
2025-08-22T11:26:59.474+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6a26eee6
2025-08-22T11:26:59.474+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6a26eee6
2025-08-22T11:26:59.475+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4be1c797
2025-08-22T11:26:59.475+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4be1c797
2025-08-22T11:26:59.476+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@76bdfc19
2025-08-22T11:26:59.476+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@76bdfc19
2025-08-22T11:26:59.478+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1248f83
2025-08-22T11:26:59.478+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1248f83
2025-08-22T11:26:59.478+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1248f83
2025-08-22T11:26:59.479+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5c28009f
2025-08-22T11:26:59.480+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5c28009f
2025-08-22T11:26:59.481+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5c28009f
2025-08-22T11:26:59.481+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@25890ce3
2025-08-22T11:26:59.481+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@25890ce3
2025-08-22T11:26:59.482+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@39b9dc35
2025-08-22T11:26:59.482+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@25da1dc9
2025-08-22T11:26:59.482+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@25da1dc9
2025-08-22T11:26:59.482+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3976910
2025-08-22T11:26:59.483+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6e149395
2025-08-22T11:26:59.483+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@19bbb216
2025-08-22T11:26:59.483+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@19bbb216
2025-08-22T11:26:59.484+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@19bbb216
2025-08-22T11:26:59.484+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6cfac0bd
2025-08-22T11:26:59.484+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6cfac0bd
2025-08-22T11:26:59.484+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6cfac0bd
2025-08-22T11:26:59.485+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@549debdb
2025-08-22T11:26:59.485+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@549debdb
2025-08-22T11:26:59.485+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@549debdb
2025-08-22T11:26:59.486+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1edf52e6
2025-08-22T11:26:59.486+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1edf52e6
2025-08-22T11:26:59.486+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1edf52e6
2025-08-22T11:26:59.486+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5ab06829
2025-08-22T11:26:59.487+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5ab06829
2025-08-22T11:26:59.487+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5ab06829
2025-08-22T11:26:59.487+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6075a4ea
2025-08-22T11:26:59.488+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6075a4ea
2025-08-22T11:26:59.491+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5b0d480c
2025-08-22T11:26:59.493+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5b0d480c
2025-08-22T11:26:59.495+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3f2169e9
2025-08-22T11:26:59.496+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3f2169e9
2025-08-22T11:26:59.496+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3f2169e9
2025-08-22T11:26:59.497+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6689bf04
2025-08-22T11:26:59.497+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@2b9615cb
2025-08-22T11:26:59.497+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b9615cb
2025-08-22T11:26:59.498+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1aea759d
2025-08-22T11:26:59.499+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2eb03908
2025-08-22T11:26:59.500+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2eb03908
2025-08-22T11:26:59.502+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2eb03908
2025-08-22T11:26:59.502+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5ead245
2025-08-22T11:26:59.503+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1e49a77e
2025-08-22T11:26:59.503+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57466fb7
2025-08-22T11:26:59.504+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7891742e
2025-08-22T11:26:59.504+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7891742e
2025-08-22T11:26:59.505+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2bbaf983
2025-08-22T11:26:59.505+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2bbaf983
2025-08-22T11:26:59.505+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@781bd9dd
2025-08-22T11:26:59.505+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1cc42abe
2025-08-22T11:26:59.506+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6f071d0c
2025-08-22T11:26:59.506+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@138d978e
2025-08-22T11:26:59.506+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@357e7113
2025-08-22T11:26:59.506+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@8d23cd8
2025-08-22T11:26:59.507+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5feaafb3
2025-08-22T11:26:59.507+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5feaafb3
2025-08-22T11:26:59.507+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@20a46227
2025-08-22T11:26:59.507+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@20a46227
2025-08-22T11:26:59.508+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@669469c9
2025-08-22T11:26:59.508+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@669469c9
2025-08-22T11:26:59.508+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7f39ad3f
2025-08-22T11:26:59.508+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7f39ad3f
2025-08-22T11:26:59.509+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7524125c
2025-08-22T11:26:59.509+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7524125c
2025-08-22T11:26:59.510+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7612f385
2025-08-22T11:26:59.511+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@330d16af
2025-08-22T11:26:59.512+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@16f15a4
2025-08-22T11:26:59.513+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@16f15a4
2025-08-22T11:26:59.514+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@548c5127
2025-08-22T11:26:59.515+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35630ee8
2025-08-22T11:26:59.516+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e80de85
2025-08-22T11:26:59.521+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@173b24c4
2025-08-22T11:26:59.522+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@173b24c4
2025-08-22T11:26:59.522+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21084a6d
2025-08-22T11:26:59.523+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c3114ea
2025-08-22T11:26:59.523+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@642d971f
2025-08-22T11:26:59.523+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@642d971f
2025-08-22T11:26:59.524+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2afe825a
2025-08-22T11:26:59.524+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2afe825a
2025-08-22T11:26:59.524+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@49c6ee4a
2025-08-22T11:26:59.524+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@49c6ee4a
2025-08-22T11:26:59.525+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@49c6ee4a
2025-08-22T11:26:59.526+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4dd425dc
2025-08-22T11:26:59.527+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4dd425dc
2025-08-22T11:26:59.527+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4dd425dc
2025-08-22T11:26:59.528+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4549d616
2025-08-22T11:26:59.528+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1bfb60b7
2025-08-22T11:26:59.528+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@65b1693c
2025-08-22T11:26:59.529+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@65b1693c
2025-08-22T11:26:59.529+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@9a74a93
2025-08-22T11:26:59.529+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@9a74a93
2025-08-22T11:26:59.530+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@9a74a93
2025-08-22T11:26:59.530+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@255d4d7
2025-08-22T11:26:59.530+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@426bf2f2
2025-08-22T11:26:59.530+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2cfd9b0a
2025-08-22T11:26:59.530+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2cfd9b0a
2025-08-22T11:26:59.531+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1f3dafd4
2025-08-22T11:26:59.531+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1f3dafd4
2025-08-22T11:26:59.531+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1f3dafd4
2025-08-22T11:26:59.531+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@33622388
2025-08-22T11:26:59.532+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@33622388
2025-08-22T11:26:59.532+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2e03bb74
2025-08-22T11:26:59.532+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2e03bb74
2025-08-22T11:26:59.532+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6e664075
2025-08-22T11:26:59.532+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6e664075
2025-08-22T11:26:59.533+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1c571162
2025-08-22T11:26:59.533+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1c571162
2025-08-22T11:26:59.533+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@3e0b1f03
2025-08-22T11:26:59.533+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3e0b1f03
2025-08-22T11:26:59.534+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@d60cbad
2025-08-22T11:26:59.535+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@51d9479c
2025-08-22T11:26:59.535+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@752180c4
2025-08-22T11:26:59.535+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@13346a64
2025-08-22T11:26:59.537+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1802f60c
2025-08-22T11:26:59.559+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37dc7661
2025-08-22T11:26:59.560+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37dc7661
2025-08-22T11:26:59.563+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@458704ee
2025-08-22T11:26:59.564+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@45b2d17b
2025-08-22T11:26:59.564+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5243d730
2025-08-22T11:26:59.564+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@15afebcc
2025-08-22T11:26:59.565+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68722de3
2025-08-22T11:26:59.565+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b18009f
2025-08-22T11:26:59.565+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77aeba9b
2025-08-22T11:26:59.565+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1db5de29
2025-08-22T11:26:59.566+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@64d1f549
2025-08-22T11:26:59.677+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:26:59.741+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:27:00.115+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e9d203e
2025-08-22T11:27:00.120+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:27:00.396+03:00  INFO 7032 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:27:00.440+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1ebb36df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1f4de96e)
2025-08-22T11:27:00.442+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46c61d1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c194c4e)
2025-08-22T11:27:00.451+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:27:00.451+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:27:00.496+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3b60be3
2025-08-22T11:27:00.497+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3b60be3
2025-08-22T11:27:00.499+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@37dc7661`
2025-08-22T11:27:00.550+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:27:00.550+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:27:00.550+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:27:00.558+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:27:00.559+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:27:00.559+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:27:00.560+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:27:00.560+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:27:00.560+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:27:00.562+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:27:00.562+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:27:00.563+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:27:00.567+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3514df8d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b0e6d4e]
2025-08-22T11:27:03.241+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:27:03.242+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3514df8d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@bf2f2ce]
2025-08-22T11:27:03.442+03:00 TRACE 7032 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@bf2f2ce] for TypeConfiguration
2025-08-22T11:27:03.443+03:00  INFO 7032 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:27:04.024+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:27:04.040+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:04.236+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:04.258+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:27:04.314+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:04.345+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:27:04.347+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:04.392+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:27:04.393+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:04.457+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:27:04.457+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:04.461+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:27:04.462+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:04.463+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:27:04.463+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:04.529+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:04.573+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:27:05.468+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:05.481+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:27:05.482+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.484+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:27:05.484+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.485+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:27:05.486+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.487+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:27:05.488+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.516+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:05.758+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:05.784+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:27:05.784+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.787+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:27:05.787+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.788+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:27:05.788+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.788+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:27:05.789+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.790+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:27:05.791+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.823+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:27:05.823+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.836+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:27:05.836+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.847+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:27:05.848+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.850+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:27:05.850+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:05.850+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:27:05.851+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:27:06.132+03:00  WARN 7032 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:27:07.653+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:27:07.721+03:00  INFO 7032 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:27:10.056+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2065/0x000001d6d1cab848@54cf024c with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:27:10.081+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:27:11.135+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:11.145+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:11.149+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:11.286+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:27:11.288+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:27:11.292+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T11:27:11.486+03:00  INFO 7032 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:27:11.566+03:00  WARN 7032 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:27:11.701+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:27:11.766+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:27:11.777+03:00  INFO 7032 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:27:11.800+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:27:11.800+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:27:11.800+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:27:11.801+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:27:11.801+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:27:11.801+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:27:11.802+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:27:12.408+03:00  INFO 7032 --- [DataStoreService] [Test worker] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:162)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:410)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:378)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:373)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:177)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:375)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:405)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:394)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:586)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:364)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:310)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 167 more

2025-08-22T11:27:12.413+03:00  WARN 7032 --- [DataStoreService] [Test worker] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 failed: Connection refused: no further information
2025-08-22T11:27:12.417+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:410)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:378)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:373)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:177)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:375)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:405)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:394)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:586)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:364)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:310)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)

2025-08-22T11:27:12.418+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from primary servers failed
2025-08-22T11:27:12.419+03:00  WARN 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
2025-08-22T11:27:12.425+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from backup servers failed
2025-08-22T11:27:12.433+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:27:12.448+03:00  INFO 7032 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:27:12.458+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755851232451 with initial instances count: 0
2025-08-22T11:27:12.472+03:00  INFO 7032 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:27:12.482+03:00  INFO 7032 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851232482, current=UP, previous=STARTING]
2025-08-22T11:27:12.491+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:27:12.642+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(ScheduledThreadPoolExecutor.java:215)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:561)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:715)
	at com.netflix.discovery.InstanceInfoReplicator.onDemandUpdate(InstanceInfoReplicator.java:94)
	at com.netflix.discovery.DiscoveryClient$6.notify(DiscoveryClient.java:1298)
	at com.netflix.appinfo.ApplicationInfoManager.setInstanceStatus(ApplicationInfoManager.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.netflix.appinfo.ApplicationInfoManager$$SpringCGLIB$$0.setInstanceStatus(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:74)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:405)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:394)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:586)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:364)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:310)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 151 more

2025-08-22T11:27:12.644+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information
2025-08-22T11:27:12.645+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:27:12.674+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:27:12.906+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 63ms, rows: 1
2025-08-22T11:27:12.939+03:00  INFO 7032 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    840900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    352800 nanoseconds spent preparing 1 JDBC statements;
    7375500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    20672400 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    56300 nanoseconds spent executing 1 pre-partial-flushes;
    15300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:27:12.946+03:00  INFO 7032 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 22.294 seconds (process running for 25.557)
2025-08-22T11:27:16.715+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T11:27:16.806+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T11:27:16.808+03:00 DEBUG 7032 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T11:27:46.868+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:27:46.869+03:00  WARN 7032 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46s636ms312µs100ns).
2025-08-22T11:27:46.872+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:27:46.874+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:27:46.874+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:27:46.874+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:27:46.874+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:27:46.874+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:27:46.874+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:27:56.887+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(ScheduledThreadPoolExecutor.java:215)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:561)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:131)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(ScheduledThreadPoolExecutor.java:215)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:561)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:715)
	at com.netflix.discovery.InstanceInfoReplicator.onDemandUpdate(InstanceInfoReplicator.java:94)
	at com.netflix.discovery.DiscoveryClient$6.notify(DiscoveryClient.java:1298)
	at com.netflix.appinfo.ApplicationInfoManager.setInstanceStatus(ApplicationInfoManager.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.netflix.appinfo.ApplicationInfoManager$$SpringCGLIB$$0.setInstanceStatus(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:74)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:405)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:394)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:586)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:364)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:310)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 159 more

2025-08-22T11:27:56.890+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information
2025-08-22T11:27:56.890+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:27:56.901+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:27:56.914+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:162)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.AbstractExecutorService.newTaskFor(AbstractExecutorService.java:98)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:122)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(ScheduledThreadPoolExecutor.java:215)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:561)
	at com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1258)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:445)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:378)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:373)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:177)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:375)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:405)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:394)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:586)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:364)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:310)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 185 more

2025-08-22T11:27:56.916+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 failed: Connection refused: no further information
2025-08-22T11:27:56.917+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-CacheRefreshExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.AbstractExecutorService.newTaskFor(AbstractExecutorService.java:98)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:122)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(ScheduledThreadPoolExecutor.java:215)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:561)
	at com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1258)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:445)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:378)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:373)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:177)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:375)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:405)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:394)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:586)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:364)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:310)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)

2025-08-22T11:27:56.947+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for "http://localhost:8761/eureka/apps/DATASTORESERVICE/Admin:DataStoreService:8080": Connect to http://localhost:8761 failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://localhost:8761/eureka/apps/DATASTORESERVICE/Admin:DataStoreService:8080": Connect to http://localhost:8761 failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.AbstractExecutorService.newTaskFor(AbstractExecutorService.java:98)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:122)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:63)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(ScheduledThreadPoolExecutor.java:215)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:561)
	at com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1278)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:445)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:172)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:169)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:378)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:373)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:177)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:375)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:405)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:394)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:586)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:364)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:310)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 182 more

2025-08-22T11:27:56.964+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on PUT request for "http://localhost:8761/eureka/apps/DATASTORESERVICE/Admin:DataStoreService:8080": Connect to http://localhost:8761 failed: Connection refused: no further information
2025-08-22T11:27:56.965+03:00 ERROR 7032 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - was unable to send heartbeat!

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:27:57.080+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:27:57.082+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851277081, current=DOWN, previous=UP]
2025-08-22T11:27:57.088+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:27:57.129+03:00  INFO 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
	at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:151)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>(ScheduledThreadPoolExecutor.java:215)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:561)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:715)
	at com.netflix.discovery.InstanceInfoReplicator.onDemandUpdate(InstanceInfoReplicator.java:94)
	at com.netflix.discovery.DiscoveryClient$6.notify(DiscoveryClient.java:1298)
	at com.netflix.appinfo.ApplicationInfoManager.setInstanceStatus(ApplicationInfoManager.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:480)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.netflix.appinfo.ApplicationInfoManager$$SpringCGLIB$$0.setInstanceStatus(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:95)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:98)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:159)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:140)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1163)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 51 more

2025-08-22T11:27:57.130+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/DATASTORESERVICE": Connect to http://localhost:8761 failed: Connection refused: no further information
2025-08-22T11:27:57.132+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:27:57.135+03:00  WARN 7032 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:27:57.146+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:27:57.148+03:00 TRACE 7032 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@bf2f2ce] for TypeConfiguration
2025-08-22T11:27:57.149+03:00 DEBUG 7032 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b0aff92] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@bf2f2ce]
2025-08-22T11:27:57.153+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:27:57.189+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:27:57.193+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:28:00.199+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:28:00.232+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/DATASTORESERVICE/Admin:DataStoreService:8080": Connect to http://localhost:8761 failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/DATASTORESERVICE/Admin:DataStoreService:8080": Connect to http://localhost:8761 failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:387)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:134)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:798)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:748)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:707)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1467)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 39 more

2025-08-22T11:28:00.232+03:00  WARN 7032 --- [DataStoreService] [SpringApplicationShutdownHook] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/DATASTORESERVICE/Admin:DataStoreService:8080": Connect to http://localhost:8761 failed: Connection refused: no further information
2025-08-22T11:28:00.232+03:00 ERROR 7032 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:387) ~[spring-cloud-context-4.3.0.jar:4.3.0]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:134) ~[spring-cloud-context-4.3.0.jar:4.3.0]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:798) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:748) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1474) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:707) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1467) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147) ~[spring-boot-3.5.4.jar:3.5.4]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116) ~[spring-boot-3.5.4.jar:3.5.4]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T11:28:00.235+03:00  INFO 7032 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T11:30:23.408+03:00  INFO 18184 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 18184 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:30:23.411+03:00  INFO 18184 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:30:25.041+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:30:25.048+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:30:25.100+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.103+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.105+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.108+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.111+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.113+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.117+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.119+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.122+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.125+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:30:25.126+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 69 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:30:25.132+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:30:25.133+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:30:25.143+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.144+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.144+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.145+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.146+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.147+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.147+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.148+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.148+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.149+03:00  INFO 18184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:30:25.149+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:30:25.164+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:30:25.165+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:30:25.373+03:00  INFO 18184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 195 ms. Found 10 JPA repository interfaces.
2025-08-22T11:30:25.827+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T11:30:27.928+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:30:28.055+03:00  INFO 18184 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:30:28.153+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:30:28.400+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c261c74
2025-08-22T11:30:28.401+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c261c74
2025-08-22T11:30:28.402+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c261c74
2025-08-22T11:30:28.402+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6d38a81d
2025-08-22T11:30:28.403+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6d38a81d
2025-08-22T11:30:28.404+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41f61188
2025-08-22T11:30:28.404+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41f61188
2025-08-22T11:30:28.405+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@d7c4fcb
2025-08-22T11:30:28.406+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@d7c4fcb
2025-08-22T11:30:28.406+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@61d527ac
2025-08-22T11:30:28.407+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@61d527ac
2025-08-22T11:30:28.407+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@61d527ac
2025-08-22T11:30:28.408+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@498503cb
2025-08-22T11:30:28.409+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@498503cb
2025-08-22T11:30:28.410+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@498503cb
2025-08-22T11:30:28.410+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1fc386f8
2025-08-22T11:30:28.411+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1fc386f8
2025-08-22T11:30:28.411+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7eb94590
2025-08-22T11:30:28.412+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3777fc44
2025-08-22T11:30:28.413+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3777fc44
2025-08-22T11:30:28.413+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79454d8e
2025-08-22T11:30:28.413+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ab2e018
2025-08-22T11:30:28.414+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4e13af1b
2025-08-22T11:30:28.414+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4e13af1b
2025-08-22T11:30:28.416+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4e13af1b
2025-08-22T11:30:28.417+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@468eff41
2025-08-22T11:30:28.418+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@468eff41
2025-08-22T11:30:28.418+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@468eff41
2025-08-22T11:30:28.418+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1574f323
2025-08-22T11:30:28.419+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1574f323
2025-08-22T11:30:28.420+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1574f323
2025-08-22T11:30:28.420+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@78ab63b5
2025-08-22T11:30:28.420+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@78ab63b5
2025-08-22T11:30:28.421+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@78ab63b5
2025-08-22T11:30:28.421+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2b9370cc
2025-08-22T11:30:28.422+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2b9370cc
2025-08-22T11:30:28.422+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2b9370cc
2025-08-22T11:30:28.423+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1a56f608
2025-08-22T11:30:28.424+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1a56f608
2025-08-22T11:30:28.425+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2809e38a
2025-08-22T11:30:28.425+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2809e38a
2025-08-22T11:30:28.426+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:30:28.427+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:30:28.427+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:30:28.427+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3b399f5a
2025-08-22T11:30:28.428+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@16f2d883
2025-08-22T11:30:28.428+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@16f2d883
2025-08-22T11:30:28.428+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71806c64
2025-08-22T11:30:28.429+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@1e2c0292
2025-08-22T11:30:28.429+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1e2c0292
2025-08-22T11:30:28.430+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@1e2c0292
2025-08-22T11:30:28.430+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@69988d42
2025-08-22T11:30:28.430+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@69ae7632
2025-08-22T11:30:28.431+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1bbfd42f
2025-08-22T11:30:28.431+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@65f96d58
2025-08-22T11:30:28.432+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@65f96d58
2025-08-22T11:30:28.432+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@48a61e38
2025-08-22T11:30:28.432+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@48a61e38
2025-08-22T11:30:28.433+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@52a3eef8
2025-08-22T11:30:28.433+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@37d8562f
2025-08-22T11:30:28.434+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@19656e21
2025-08-22T11:30:28.435+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@614ae4eb
2025-08-22T11:30:28.436+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2cd31214
2025-08-22T11:30:28.437+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@594f508f
2025-08-22T11:30:28.438+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6b6939e1
2025-08-22T11:30:28.439+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6b6939e1
2025-08-22T11:30:28.439+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5d32f5db
2025-08-22T11:30:28.440+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5d32f5db
2025-08-22T11:30:28.440+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69c51fdb
2025-08-22T11:30:28.441+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69c51fdb
2025-08-22T11:30:28.442+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:30:28.442+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:30:28.443+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@68a97fc1
2025-08-22T11:30:28.444+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@68a97fc1
2025-08-22T11:30:28.444+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@227fc322
2025-08-22T11:30:28.445+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63053b71
2025-08-22T11:30:28.446+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4687c184
2025-08-22T11:30:28.446+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4687c184
2025-08-22T11:30:28.446+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@65f3f9e2
2025-08-22T11:30:28.447+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@394950ad
2025-08-22T11:30:28.447+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@73dd3a46
2025-08-22T11:30:28.447+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bae5e58
2025-08-22T11:30:28.448+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bae5e58
2025-08-22T11:30:28.450+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71e89a26
2025-08-22T11:30:28.450+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@257708e
2025-08-22T11:30:28.450+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@18c26588
2025-08-22T11:30:28.451+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@18c26588
2025-08-22T11:30:28.451+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6167a456
2025-08-22T11:30:28.451+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6167a456
2025-08-22T11:30:28.452+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@54eb2bf6
2025-08-22T11:30:28.452+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@54eb2bf6
2025-08-22T11:30:28.452+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@54eb2bf6
2025-08-22T11:30:28.453+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6d01f2e5
2025-08-22T11:30:28.453+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6d01f2e5
2025-08-22T11:30:28.453+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6d01f2e5
2025-08-22T11:30:28.454+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@66e434e8
2025-08-22T11:30:28.454+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3a7d6976
2025-08-22T11:30:28.454+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@37c45154
2025-08-22T11:30:28.455+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37c45154
2025-08-22T11:30:28.455+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55300b93
2025-08-22T11:30:28.456+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55300b93
2025-08-22T11:30:28.456+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55300b93
2025-08-22T11:30:28.456+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@123426a9
2025-08-22T11:30:28.457+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4353db40
2025-08-22T11:30:28.457+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@56887c8f
2025-08-22T11:30:28.457+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@56887c8f
2025-08-22T11:30:28.457+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3b1895e
2025-08-22T11:30:28.458+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3b1895e
2025-08-22T11:30:28.458+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3b1895e
2025-08-22T11:30:28.458+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3083e6ef
2025-08-22T11:30:28.459+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3083e6ef
2025-08-22T11:30:28.459+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d57b264
2025-08-22T11:30:28.459+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d57b264
2025-08-22T11:30:28.460+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@782ed745
2025-08-22T11:30:28.460+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@782ed745
2025-08-22T11:30:28.460+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@775a5a67
2025-08-22T11:30:28.461+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@775a5a67
2025-08-22T11:30:28.461+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@58c16efd
2025-08-22T11:30:28.461+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@58c16efd
2025-08-22T11:30:28.461+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@8d52313
2025-08-22T11:30:28.462+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@64f49b3
2025-08-22T11:30:28.462+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@23e3a27f
2025-08-22T11:30:28.463+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@70869678
2025-08-22T11:30:28.463+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@51eafec0
2025-08-22T11:30:28.481+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@7da6d695
2025-08-22T11:30:28.482+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7da6d695
2025-08-22T11:30:28.485+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@68c47cf9
2025-08-22T11:30:28.486+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@ecb8b3e
2025-08-22T11:30:28.487+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7e764e5c
2025-08-22T11:30:28.487+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@42457891
2025-08-22T11:30:28.488+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@92de794
2025-08-22T11:30:28.488+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5bed0ff4
2025-08-22T11:30:28.488+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@17a5ae7b
2025-08-22T11:30:28.489+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7e4dddee
2025-08-22T11:30:28.490+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@183a84f4
2025-08-22T11:30:28.643+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:30:28.728+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:30:29.068+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52afcdd8
2025-08-22T11:30:29.072+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:30:29.222+03:00  INFO 18184 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:30:29.245+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@46bff388) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5183131d)
2025-08-22T11:30:29.246+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b3da23f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69c263f8)
2025-08-22T11:30:29.253+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:30:29.254+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:30:29.275+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@784c74e
2025-08-22T11:30:29.276+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@784c74e
2025-08-22T11:30:29.276+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7da6d695`
2025-08-22T11:30:29.290+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:30:29.290+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:30:29.291+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:30:29.304+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:30:29.305+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:30:29.305+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:30:29.306+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:30:29.306+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:30:29.306+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:30:29.308+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:30:29.309+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:30:29.309+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:30:29.312+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dcf6026] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@930911e]
2025-08-22T11:30:31.602+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:30:31.603+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dcf6026] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@753b6846]
2025-08-22T11:30:31.830+03:00 TRACE 18184 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@753b6846] for TypeConfiguration
2025-08-22T11:30:31.831+03:00  INFO 18184 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:30:32.696+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:30:32.712+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:32.887+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:32.903+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:30:32.936+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:32.956+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:30:32.956+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:32.992+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:30:32.993+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:33.054+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:30:33.056+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:33.059+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:30:33.060+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:33.118+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:33.144+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:30:34.073+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:34.085+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:30:34.085+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.087+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:30:34.088+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.088+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:30:34.089+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.089+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:30:34.089+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.127+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:34.384+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:34.411+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:30:34.412+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.414+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:30:34.414+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.415+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:30:34.415+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.415+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:30:34.416+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.417+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:30:34.418+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.453+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:30:34.454+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.467+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:30:34.468+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.486+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:30:34.486+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.488+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:30:34.488+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.489+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:30:34.489+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:30:34.799+03:00  WARN 18184 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:30:36.286+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:30:36.349+03:00  INFO 18184 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:30:38.751+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2061/0x0000015481c3ad70@630d7bce with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:30:38.779+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:30:39.848+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:39.854+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:39.857+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:39.974+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:30:39.975+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:30:39.979+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-08-22T11:30:40.192+03:00  INFO 18184 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:30:40.268+03:00  WARN 18184 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:30:40.382+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:30:40.444+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:30:40.452+03:00  INFO 18184 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:30:40.472+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:30:40.473+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:30:40.473+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:30:40.473+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:30:40.473+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:30:40.473+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:30:40.474+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:30:41.156+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:30:41.159+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:30:41.161+03:00  INFO 18184 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:30:41.164+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755851441163 with initial instances count: 1
2025-08-22T11:30:41.170+03:00  INFO 18184 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:30:41.171+03:00  INFO 18184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851441171, current=UP, previous=STARTING]
2025-08-22T11:30:41.174+03:00  INFO 18184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:30:41.297+03:00  INFO 18184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:30:41.548+03:00 DEBUG 18184 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 80ms, rows: 1
2025-08-22T11:30:41.572+03:00  INFO 18184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    710900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    199900 nanoseconds spent preparing 1 JDBC statements;
    3461200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    14028400 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    31200 nanoseconds spent executing 1 pre-partial-flushes;
    12900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:30:41.579+03:00  INFO 18184 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 18.725 seconds (process running for 20.502)
2025-08-22T11:30:41.851+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:30:41.851+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851441851, current=DOWN, previous=UP]
2025-08-22T11:30:41.853+03:00  INFO 18184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:30:41.865+03:00  INFO 18184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:30:41.923+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:30:41.925+03:00 TRACE 18184 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@753b6846] for TypeConfiguration
2025-08-22T11:30:41.925+03:00 DEBUG 18184 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@62fd6bdc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@753b6846]
2025-08-22T11:30:41.931+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:30:41.941+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:30:41.943+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:30:44.950+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:30:44.971+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T11:30:44.971+03:00  INFO 18184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T11:30:57.875+03:00  INFO 19184 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 19184 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:30:57.880+03:00  INFO 19184 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:31:00.153+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:31:00.156+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:31:00.237+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.240+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.245+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.249+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.252+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.256+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.260+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.263+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.267+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.271+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:31:00.272+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 105 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:31:00.282+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:31:00.284+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:31:00.298+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.299+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.300+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.300+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.301+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.302+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.302+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.303+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.303+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.304+03:00  INFO 19184 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:31:00.305+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:31:00.319+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:31:00.322+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:31:00.643+03:00  INFO 19184 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 311 ms. Found 10 JPA repository interfaces.
2025-08-22T11:31:01.153+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T11:31:03.412+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:31:03.517+03:00  INFO 19184 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:31:03.602+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:31:03.755+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ea40c9f
2025-08-22T11:31:03.756+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ea40c9f
2025-08-22T11:31:03.756+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ea40c9f
2025-08-22T11:31:03.757+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5d782a4a
2025-08-22T11:31:03.757+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5d782a4a
2025-08-22T11:31:03.758+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@cc91fe3
2025-08-22T11:31:03.758+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@cc91fe3
2025-08-22T11:31:03.759+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@481c1e92
2025-08-22T11:31:03.759+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@481c1e92
2025-08-22T11:31:03.759+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@66f223fa
2025-08-22T11:31:03.760+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@66f223fa
2025-08-22T11:31:03.761+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@66f223fa
2025-08-22T11:31:03.762+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@7ac47f14
2025-08-22T11:31:03.763+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7ac47f14
2025-08-22T11:31:03.763+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@7ac47f14
2025-08-22T11:31:03.763+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@61ec2cb5
2025-08-22T11:31:03.764+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@61ec2cb5
2025-08-22T11:31:03.764+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3889c343
2025-08-22T11:31:03.765+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@34be7efb
2025-08-22T11:31:03.765+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@34be7efb
2025-08-22T11:31:03.765+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@136cad3e
2025-08-22T11:31:03.766+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13e5b262
2025-08-22T11:31:03.766+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6500e886
2025-08-22T11:31:03.767+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6500e886
2025-08-22T11:31:03.767+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6500e886
2025-08-22T11:31:03.767+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@220e1b7b
2025-08-22T11:31:03.768+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@220e1b7b
2025-08-22T11:31:03.768+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@220e1b7b
2025-08-22T11:31:03.768+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@54fd5759
2025-08-22T11:31:03.769+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@54fd5759
2025-08-22T11:31:03.769+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@54fd5759
2025-08-22T11:31:03.770+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6a358906
2025-08-22T11:31:03.770+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6a358906
2025-08-22T11:31:03.770+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6a358906
2025-08-22T11:31:03.771+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@893081e
2025-08-22T11:31:03.771+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@893081e
2025-08-22T11:31:03.771+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@893081e
2025-08-22T11:31:03.772+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a941fb4
2025-08-22T11:31:03.773+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a941fb4
2025-08-22T11:31:03.773+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@646ddc20
2025-08-22T11:31:03.774+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@646ddc20
2025-08-22T11:31:03.774+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T11:31:03.775+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T11:31:03.775+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T11:31:03.776+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@32153bbe
2025-08-22T11:31:03.776+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4806fbf7
2025-08-22T11:31:03.776+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4806fbf7
2025-08-22T11:31:03.777+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4280b20b
2025-08-22T11:31:03.777+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@50e4d8cd
2025-08-22T11:31:03.778+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@50e4d8cd
2025-08-22T11:31:03.778+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@50e4d8cd
2025-08-22T11:31:03.778+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4b37d1a4
2025-08-22T11:31:03.778+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@34114276
2025-08-22T11:31:03.779+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73c6ae15
2025-08-22T11:31:03.779+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5923210
2025-08-22T11:31:03.779+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5923210
2025-08-22T11:31:03.779+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70dd79f7
2025-08-22T11:31:03.780+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70dd79f7
2025-08-22T11:31:03.780+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ee19768
2025-08-22T11:31:03.780+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@8113ea7
2025-08-22T11:31:03.780+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1c879f07
2025-08-22T11:31:03.781+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@78e4fa1
2025-08-22T11:31:03.781+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4516c2ef
2025-08-22T11:31:03.781+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@44f338ec
2025-08-22T11:31:03.781+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@64acf8d2
2025-08-22T11:31:03.782+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@64acf8d2
2025-08-22T11:31:03.782+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@112a50a1
2025-08-22T11:31:03.782+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@112a50a1
2025-08-22T11:31:03.783+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6258f9d1
2025-08-22T11:31:03.783+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6258f9d1
2025-08-22T11:31:03.783+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3f31892e
2025-08-22T11:31:03.783+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3f31892e
2025-08-22T11:31:03.784+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3cd89c72
2025-08-22T11:31:03.784+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3cd89c72
2025-08-22T11:31:03.784+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fb46c10
2025-08-22T11:31:03.785+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a079446
2025-08-22T11:31:03.785+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@694c0ed1
2025-08-22T11:31:03.786+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@694c0ed1
2025-08-22T11:31:03.786+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T11:31:03.787+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d071e4b
2025-08-22T11:31:03.787+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2b441609
2025-08-22T11:31:03.788+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@22f7bf36
2025-08-22T11:31:03.788+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@22f7bf36
2025-08-22T11:31:03.789+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a3404fa
2025-08-22T11:31:03.790+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fb4beb1
2025-08-22T11:31:03.790+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@34cb1310
2025-08-22T11:31:03.791+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@34cb1310
2025-08-22T11:31:03.791+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2b5a04b0
2025-08-22T11:31:03.791+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b5a04b0
2025-08-22T11:31:03.792+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T11:31:03.792+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T11:31:03.792+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T11:31:03.793+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5b78a946
2025-08-22T11:31:03.793+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5b78a946
2025-08-22T11:31:03.794+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5b78a946
2025-08-22T11:31:03.794+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@37c762aa
2025-08-22T11:31:03.794+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c438f66
2025-08-22T11:31:03.795+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@13087c75
2025-08-22T11:31:03.795+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@13087c75
2025-08-22T11:31:03.795+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@da4c5cb
2025-08-22T11:31:03.796+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@da4c5cb
2025-08-22T11:31:03.796+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@da4c5cb
2025-08-22T11:31:03.797+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1fa24e7
2025-08-22T11:31:03.797+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5192b301
2025-08-22T11:31:03.797+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1a99692
2025-08-22T11:31:03.798+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a99692
2025-08-22T11:31:03.798+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2a0881f1
2025-08-22T11:31:03.798+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2a0881f1
2025-08-22T11:31:03.798+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2a0881f1
2025-08-22T11:31:03.799+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7a85454b
2025-08-22T11:31:03.799+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7a85454b
2025-08-22T11:31:03.799+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3ecbfba1
2025-08-22T11:31:03.799+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3ecbfba1
2025-08-22T11:31:03.800+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@739be7ec
2025-08-22T11:31:03.800+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@739be7ec
2025-08-22T11:31:03.800+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1df2e767
2025-08-22T11:31:03.801+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1df2e767
2025-08-22T11:31:03.801+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4d0d568f
2025-08-22T11:31:03.801+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d0d568f
2025-08-22T11:31:03.801+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2c7aba7c
2025-08-22T11:31:03.802+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@729c98
2025-08-22T11:31:03.803+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@a319a2e
2025-08-22T11:31:03.803+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@2daf0cc9
2025-08-22T11:31:03.804+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@54fffa5a
2025-08-22T11:31:03.816+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4bc4ec43
2025-08-22T11:31:03.816+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4bc4ec43
2025-08-22T11:31:03.819+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3872867d
2025-08-22T11:31:03.820+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4f72078d
2025-08-22T11:31:03.821+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2e4d252
2025-08-22T11:31:03.821+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3555d804
2025-08-22T11:31:03.821+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19b8f1bd
2025-08-22T11:31:03.821+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@46a9c368
2025-08-22T11:31:03.822+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62fbefad
2025-08-22T11:31:03.822+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@79f59e0e
2025-08-22T11:31:03.822+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@279ebd94
2025-08-22T11:31:03.923+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:31:03.999+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:31:04.343+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11a0c708
2025-08-22T11:31:04.348+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:31:04.510+03:00  INFO 19184 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:31:04.525+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@19a4cdea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@434a2a10)
2025-08-22T11:31:04.526+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6debf1b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@701da311)
2025-08-22T11:31:04.531+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:31:04.531+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:31:04.551+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@643fed50
2025-08-22T11:31:04.551+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@643fed50
2025-08-22T11:31:04.552+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4bc4ec43`
2025-08-22T11:31:04.563+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:31:04.563+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:31:04.563+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:31:04.575+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:31:04.576+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:31:04.576+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:31:04.576+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:31:04.576+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:31:04.577+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:31:04.579+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:31:04.579+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:31:04.579+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:31:04.585+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@524b1e41] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2da8ed80]
2025-08-22T11:31:06.645+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:31:06.646+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@524b1e41] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@56957f08]
2025-08-22T11:31:06.842+03:00 TRACE 19184 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@56957f08] for TypeConfiguration
2025-08-22T11:31:06.843+03:00  INFO 19184 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:31:07.483+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:31:07.500+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:07.704+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:07.720+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:31:07.771+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:07.797+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:31:07.798+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:07.852+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:31:07.852+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:07.899+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:31:07.900+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:07.902+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:31:07.903+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:07.903+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:31:07.904+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:07.946+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:07.971+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:31:08.808+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:08.821+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:31:08.821+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; private static com.goglotek.frauddetector.datastoreservice.exception.ProviderLocalTransactionsNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.lambda$providerLocalTransactions$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:08.823+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:31:08.824+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:08.824+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:31:08.825+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:08.826+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:31:08.826+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:08.826+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:31:08.827+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:08.865+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:09.344+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:09.383+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:31:09.384+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.385+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:31:09.386+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.386+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:31:09.388+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.389+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:31:09.389+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.389+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:31:09.390+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.419+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:31:09.420+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.430+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:31:09.431+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.442+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:31:09.442+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.444+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:31:09.445+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.445+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:31:09.446+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:31:09.710+03:00  WARN 19184 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:31:11.257+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:31:11.320+03:00  INFO 19184 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:31:13.594+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2064/0x0000012dbdcdb3f0@285e483f with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:31:13.625+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:31:14.543+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:14.547+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:14.555+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:14.685+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:31:14.686+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:31:14.691+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-08-22T11:31:14.876+03:00  INFO 19184 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:31:14.962+03:00  WARN 19184 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:31:15.106+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:31:15.156+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:31:15.164+03:00  INFO 19184 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:31:15.181+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:31:15.181+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:31:15.181+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:31:15.181+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:31:15.181+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:31:15.182+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:31:15.182+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:31:15.714+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:31:15.718+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:31:15.722+03:00  INFO 19184 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:31:15.727+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755851475725 with initial instances count: 1
2025-08-22T11:31:15.735+03:00  INFO 19184 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:31:15.737+03:00  INFO 19184 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851475736, current=UP, previous=STARTING]
2025-08-22T11:31:15.740+03:00  INFO 19184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:31:15.820+03:00  INFO 19184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:31:16.042+03:00 DEBUG 19184 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 94ms, rows: 1
2025-08-22T11:31:16.070+03:00  INFO 19184 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    801700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    724400 nanoseconds spent preparing 1 JDBC statements;
    7931100 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    16990400 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    47100 nanoseconds spent executing 1 pre-partial-flushes;
    21100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:31:16.077+03:00  INFO 19184 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 18.994 seconds (process running for 21.108)
2025-08-22T11:31:55.717+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:31:55.718+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851515718, current=DOWN, previous=UP]
2025-08-22T11:31:55.719+03:00  INFO 19184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:31:55.726+03:00  INFO 19184 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:31:55.746+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:31:55.747+03:00 TRACE 19184 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@56957f08] for TypeConfiguration
2025-08-22T11:31:55.748+03:00 DEBUG 19184 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68b502d5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@56957f08]
2025-08-22T11:31:55.750+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:31:55.764+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:31:55.766+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:31:58.777+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:31:58.794+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T11:31:58.795+03:00  INFO 19184 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T11:33:46.077+03:00  INFO 24908 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 24908 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:33:46.082+03:00  INFO 24908 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:33:47.804+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:33:47.807+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:33:47.877+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.879+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.882+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.885+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.888+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.890+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.893+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.896+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.899+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.901+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:33:47.903+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 83 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:33:47.909+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:33:47.910+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:33:47.919+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.920+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.921+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.922+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.922+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.923+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.924+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.925+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.926+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.926+03:00  INFO 24908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:33:47.927+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:33:47.937+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:33:47.939+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:33:48.155+03:00  INFO 24908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 203 ms. Found 10 JPA repository interfaces.
2025-08-22T11:33:48.592+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T11:33:50.763+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:33:50.861+03:00  INFO 24908 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:33:50.937+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:33:51.086+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1574f323
2025-08-22T11:33:51.086+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1574f323
2025-08-22T11:33:51.087+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1574f323
2025-08-22T11:33:51.087+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@78ab63b5
2025-08-22T11:33:51.087+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@78ab63b5
2025-08-22T11:33:51.088+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b9370cc
2025-08-22T11:33:51.088+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b9370cc
2025-08-22T11:33:51.089+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a56f608
2025-08-22T11:33:51.089+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a56f608
2025-08-22T11:33:51.090+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2809e38a
2025-08-22T11:33:51.090+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2809e38a
2025-08-22T11:33:51.091+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2809e38a
2025-08-22T11:33:51.092+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:33:51.092+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:33:51.092+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:33:51.093+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@71806c64
2025-08-22T11:33:51.093+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@71806c64
2025-08-22T11:33:51.094+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@1e2c0292
2025-08-22T11:33:51.094+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@69988d42
2025-08-22T11:33:51.095+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@69988d42
2025-08-22T11:33:51.095+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ae7632
2025-08-22T11:33:51.095+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1bbfd42f
2025-08-22T11:33:51.096+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@65f96d58
2025-08-22T11:33:51.096+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@65f96d58
2025-08-22T11:33:51.096+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65f96d58
2025-08-22T11:33:51.097+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@48a61e38
2025-08-22T11:33:51.097+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@48a61e38
2025-08-22T11:33:51.097+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@48a61e38
2025-08-22T11:33:51.098+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52a3eef8
2025-08-22T11:33:51.098+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52a3eef8
2025-08-22T11:33:51.099+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@52a3eef8
2025-08-22T11:33:51.099+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@37d8562f
2025-08-22T11:33:51.099+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@37d8562f
2025-08-22T11:33:51.100+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37d8562f
2025-08-22T11:33:51.100+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@19656e21
2025-08-22T11:33:51.100+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@19656e21
2025-08-22T11:33:51.101+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@19656e21
2025-08-22T11:33:51.101+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@614ae4eb
2025-08-22T11:33:51.101+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@614ae4eb
2025-08-22T11:33:51.102+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2cd31214
2025-08-22T11:33:51.102+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2cd31214
2025-08-22T11:33:51.103+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@594f508f
2025-08-22T11:33:51.103+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@594f508f
2025-08-22T11:33:51.104+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@594f508f
2025-08-22T11:33:51.104+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b6939e1
2025-08-22T11:33:51.104+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@5d32f5db
2025-08-22T11:33:51.105+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5d32f5db
2025-08-22T11:33:51.105+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@69c51fdb
2025-08-22T11:33:51.105+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:33:51.106+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:33:51.106+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:33:51.107+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@68a97fc1
2025-08-22T11:33:51.107+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@227fc322
2025-08-22T11:33:51.107+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63053b71
2025-08-22T11:33:51.108+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4687c184
2025-08-22T11:33:51.108+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4687c184
2025-08-22T11:33:51.108+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@65f3f9e2
2025-08-22T11:33:51.109+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@65f3f9e2
2025-08-22T11:33:51.109+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@394950ad
2025-08-22T11:33:51.109+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@73dd3a46
2025-08-22T11:33:51.110+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bae5e58
2025-08-22T11:33:51.110+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71e89a26
2025-08-22T11:33:51.110+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@257708e
2025-08-22T11:33:51.111+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@18c26588
2025-08-22T11:33:51.111+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6167a456
2025-08-22T11:33:51.111+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6167a456
2025-08-22T11:33:51.112+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@54eb2bf6
2025-08-22T11:33:51.112+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@54eb2bf6
2025-08-22T11:33:51.112+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d01f2e5
2025-08-22T11:33:51.113+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d01f2e5
2025-08-22T11:33:51.113+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66e434e8
2025-08-22T11:33:51.113+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66e434e8
2025-08-22T11:33:51.114+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a7d6976
2025-08-22T11:33:51.114+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a7d6976
2025-08-22T11:33:51.115+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@37c45154
2025-08-22T11:33:51.115+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55300b93
2025-08-22T11:33:51.115+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@123426a9
2025-08-22T11:33:51.116+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@123426a9
2025-08-22T11:33:51.116+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4353db40
2025-08-22T11:33:51.116+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@56887c8f
2025-08-22T11:33:51.117+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b1895e
2025-08-22T11:33:51.117+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3083e6ef
2025-08-22T11:33:51.118+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3083e6ef
2025-08-22T11:33:51.118+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d57b264
2025-08-22T11:33:51.119+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@782ed745
2025-08-22T11:33:51.119+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@775a5a67
2025-08-22T11:33:51.119+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@775a5a67
2025-08-22T11:33:51.120+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@58c16efd
2025-08-22T11:33:51.120+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@58c16efd
2025-08-22T11:33:51.121+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@8d52313
2025-08-22T11:33:51.122+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@8d52313
2025-08-22T11:33:51.122+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@8d52313
2025-08-22T11:33:51.122+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@64f49b3
2025-08-22T11:33:51.123+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@64f49b3
2025-08-22T11:33:51.124+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@64f49b3
2025-08-22T11:33:51.124+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@23e3a27f
2025-08-22T11:33:51.124+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@70869678
2025-08-22T11:33:51.125+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@51eafec0
2025-08-22T11:33:51.126+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@51eafec0
2025-08-22T11:33:51.126+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2d94279f
2025-08-22T11:33:51.127+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2d94279f
2025-08-22T11:33:51.127+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2d94279f
2025-08-22T11:33:51.128+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@135a8808
2025-08-22T11:33:51.129+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@57abe94d
2025-08-22T11:33:51.129+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@51b11186
2025-08-22T11:33:51.130+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@51b11186
2025-08-22T11:33:51.131+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d957cf0
2025-08-22T11:33:51.131+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d957cf0
2025-08-22T11:33:51.131+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d957cf0
2025-08-22T11:33:51.132+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1a48a582
2025-08-22T11:33:51.132+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1a48a582
2025-08-22T11:33:51.133+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1221d607
2025-08-22T11:33:51.134+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1221d607
2025-08-22T11:33:51.134+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b45c8e4
2025-08-22T11:33:51.135+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b45c8e4
2025-08-22T11:33:51.135+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3dc14f80
2025-08-22T11:33:51.135+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3dc14f80
2025-08-22T11:33:51.136+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@627a890f
2025-08-22T11:33:51.137+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@627a890f
2025-08-22T11:33:51.137+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7ef7faa9
2025-08-22T11:33:51.137+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@1b901f7b
2025-08-22T11:33:51.138+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@2c9aeec6
2025-08-22T11:33:51.138+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@1a1e38ab
2025-08-22T11:33:51.139+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5bfdabf3
2025-08-22T11:33:51.147+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@92de794
2025-08-22T11:33:51.148+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@92de794
2025-08-22T11:33:51.150+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3bf52f8f
2025-08-22T11:33:51.151+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@57d7c511
2025-08-22T11:33:51.151+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@811d8d6
2025-08-22T11:33:51.152+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7f57a7a4
2025-08-22T11:33:51.152+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6dcc7696
2025-08-22T11:33:51.152+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@45ac973
2025-08-22T11:33:51.152+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@28b7646
2025-08-22T11:33:51.153+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@40239b34
2025-08-22T11:33:51.153+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4e553d60
2025-08-22T11:33:51.280+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:33:51.337+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:33:51.593+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a023e34
2025-08-22T11:33:51.596+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:33:51.703+03:00  INFO 24908 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:33:51.718+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1ae90cb9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3b62c51e)
2025-08-22T11:33:51.719+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7db679) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7dc9b41a)
2025-08-22T11:33:51.726+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:33:51.727+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:33:51.760+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@30259c61
2025-08-22T11:33:51.761+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@30259c61
2025-08-22T11:33:51.761+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@92de794`
2025-08-22T11:33:51.780+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:33:51.780+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:33:51.780+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:33:51.796+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:33:51.796+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:33:51.796+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:33:51.797+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:33:51.797+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:33:51.797+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:33:51.801+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:33:51.801+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:33:51.802+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:33:51.806+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e757f39] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e312811]
2025-08-22T11:33:53.715+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:33:53.716+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e757f39] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@33012e6f]
2025-08-22T11:33:53.944+03:00 TRACE 24908 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@33012e6f] for TypeConfiguration
2025-08-22T11:33:53.944+03:00  INFO 24908 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:33:54.760+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:33:54.779+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:33:54.986+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:33:55.004+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:33:55.046+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:55.078+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:33:55.079+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:55.118+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:33:55.119+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:55.158+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:33:55.158+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:55.160+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:33:55.160+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:55.161+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:33:55.161+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:55.206+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:33:55.231+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:33:56.143+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:33:56.157+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:33:56.157+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.159+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:33:56.159+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.160+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:33:56.160+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.161+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:33:56.161+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.186+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:33:56.382+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:33:56.410+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:33:56.411+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.413+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:33:56.413+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.413+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:33:56.414+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.414+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:33:56.414+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.415+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:33:56.416+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.448+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:33:56.449+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.462+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:33:56.462+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.474+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:33:56.474+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.476+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:33:56.476+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.477+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:33:56.477+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:33:56.759+03:00  WARN 24908 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:33:58.204+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:33:58.269+03:00  INFO 24908 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:34:00.448+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2061/0x0000020412c3b3f0@3c01d268 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:34:00.478+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:34:01.546+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:34:01.553+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:34:01.558+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:34:01.685+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:34:01.685+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:34:01.688+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T11:34:01.861+03:00  INFO 24908 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:34:01.934+03:00  WARN 24908 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:34:02.074+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:34:02.190+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:34:02.199+03:00  INFO 24908 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:34:02.217+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:34:02.218+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:34:02.218+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:34:02.218+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:34:02.218+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:34:02.218+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:34:02.218+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:34:02.819+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:34:02.822+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:34:02.825+03:00  INFO 24908 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:34:02.829+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755851642827 with initial instances count: 1
2025-08-22T11:34:02.836+03:00  INFO 24908 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:34:02.839+03:00  INFO 24908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851642839, current=UP, previous=STARTING]
2025-08-22T11:34:02.845+03:00  INFO 24908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:34:02.949+03:00  INFO 24908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:34:03.140+03:00 DEBUG 24908 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 60ms, rows: 1
2025-08-22T11:34:03.163+03:00  INFO 24908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    746800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    203600 nanoseconds spent preparing 1 JDBC statements;
    3719900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    14243300 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    30200 nanoseconds spent executing 1 pre-partial-flushes;
    12700 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:34:03.169+03:00  INFO 24908 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.683 seconds (process running for 19.45)
2025-08-22T11:34:03.485+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:34:03.487+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851643487, current=DOWN, previous=UP]
2025-08-22T11:34:03.488+03:00  INFO 24908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:34:03.498+03:00  INFO 24908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:34:03.517+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:34:03.523+03:00 TRACE 24908 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@33012e6f] for TypeConfiguration
2025-08-22T11:34:03.524+03:00 DEBUG 24908 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@60d3a048] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@33012e6f]
2025-08-22T11:34:03.529+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:34:03.550+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:34:03.552+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:34:06.562+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:34:06.581+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T11:34:06.581+03:00  INFO 24908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T11:39:20.721+03:00  INFO 4048 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 4048 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:39:20.725+03:00  INFO 4048 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:39:22.393+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:39:22.396+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:39:22.466+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.468+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.470+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.473+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.475+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.478+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.480+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.483+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.486+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.489+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:39:22.491+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:39:22.497+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:39:22.498+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:39:22.508+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.508+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.508+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.509+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.509+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.510+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.510+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.511+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.512+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.512+03:00  INFO 4048 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:39:22.512+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:39:22.524+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:39:22.526+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:39:22.697+03:00  INFO 4048 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 162 ms. Found 10 JPA repository interfaces.
2025-08-22T11:39:23.131+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T11:39:25.214+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:39:25.305+03:00  INFO 4048 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:39:25.381+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:39:25.528+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7b6b99c5
2025-08-22T11:39:25.529+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7b6b99c5
2025-08-22T11:39:25.529+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7b6b99c5
2025-08-22T11:39:25.529+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2e1c8027
2025-08-22T11:39:25.529+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2e1c8027
2025-08-22T11:39:25.530+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@72d7afff
2025-08-22T11:39:25.531+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@72d7afff
2025-08-22T11:39:25.531+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5c41f6a0
2025-08-22T11:39:25.532+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5c41f6a0
2025-08-22T11:39:25.532+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b43f95c
2025-08-22T11:39:25.533+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b43f95c
2025-08-22T11:39:25.533+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7b43f95c
2025-08-22T11:39:25.534+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@311453ab
2025-08-22T11:39:25.535+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@311453ab
2025-08-22T11:39:25.535+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@311453ab
2025-08-22T11:39:25.536+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@49392256
2025-08-22T11:39:25.536+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@49392256
2025-08-22T11:39:25.537+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5a23b9d1
2025-08-22T11:39:25.537+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3962b216
2025-08-22T11:39:25.537+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3962b216
2025-08-22T11:39:25.538+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3183a37c
2025-08-22T11:39:25.538+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@31a80c88
2025-08-22T11:39:25.538+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7602c65d
2025-08-22T11:39:25.539+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7602c65d
2025-08-22T11:39:25.539+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7602c65d
2025-08-22T11:39:25.540+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a5c2889
2025-08-22T11:39:25.540+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@5a5c2889
2025-08-22T11:39:25.540+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a5c2889
2025-08-22T11:39:25.541+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7668f8fd
2025-08-22T11:39:25.541+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7668f8fd
2025-08-22T11:39:25.542+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7668f8fd
2025-08-22T11:39:25.542+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@75566f4
2025-08-22T11:39:25.542+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@75566f4
2025-08-22T11:39:25.543+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@75566f4
2025-08-22T11:39:25.544+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6785786d
2025-08-22T11:39:25.544+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6785786d
2025-08-22T11:39:25.544+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6785786d
2025-08-22T11:39:25.545+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c261c74
2025-08-22T11:39:25.545+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c261c74
2025-08-22T11:39:25.545+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d38a81d
2025-08-22T11:39:25.545+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d38a81d
2025-08-22T11:39:25.546+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@41f61188
2025-08-22T11:39:25.546+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@41f61188
2025-08-22T11:39:25.547+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@41f61188
2025-08-22T11:39:25.547+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d7c4fcb
2025-08-22T11:39:25.547+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@61d527ac
2025-08-22T11:39:25.548+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@61d527ac
2025-08-22T11:39:25.548+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@498503cb
2025-08-22T11:39:25.549+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@380e3122
2025-08-22T11:39:25.549+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@380e3122
2025-08-22T11:39:25.549+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@380e3122
2025-08-22T11:39:25.550+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@576323ff
2025-08-22T11:39:25.550+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1fc386f8
2025-08-22T11:39:25.550+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7eb94590
2025-08-22T11:39:25.551+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@3777fc44
2025-08-22T11:39:25.551+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3777fc44
2025-08-22T11:39:25.552+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@79454d8e
2025-08-22T11:39:25.552+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@79454d8e
2025-08-22T11:39:25.552+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ab2e018
2025-08-22T11:39:25.553+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4e13af1b
2025-08-22T11:39:25.553+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@468eff41
2025-08-22T11:39:25.554+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1574f323
2025-08-22T11:39:25.554+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78ab63b5
2025-08-22T11:39:25.554+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2b9370cc
2025-08-22T11:39:25.555+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1a56f608
2025-08-22T11:39:25.555+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1a56f608
2025-08-22T11:39:25.555+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2809e38a
2025-08-22T11:39:25.556+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2809e38a
2025-08-22T11:39:25.556+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:39:25.557+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@b9c9bf5
2025-08-22T11:39:25.557+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3b399f5a
2025-08-22T11:39:25.557+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3b399f5a
2025-08-22T11:39:25.558+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@16f2d883
2025-08-22T11:39:25.558+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@16f2d883
2025-08-22T11:39:25.558+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71806c64
2025-08-22T11:39:25.559+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1e2c0292
2025-08-22T11:39:25.559+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@69988d42
2025-08-22T11:39:25.559+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@69988d42
2025-08-22T11:39:25.560+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@69ae7632
2025-08-22T11:39:25.560+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1bbfd42f
2025-08-22T11:39:25.561+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65f96d58
2025-08-22T11:39:25.561+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@48a61e38
2025-08-22T11:39:25.561+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@48a61e38
2025-08-22T11:39:25.562+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52a3eef8
2025-08-22T11:39:25.562+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@37d8562f
2025-08-22T11:39:25.562+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@19656e21
2025-08-22T11:39:25.563+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@19656e21
2025-08-22T11:39:25.563+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@614ae4eb
2025-08-22T11:39:25.563+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@614ae4eb
2025-08-22T11:39:25.564+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2cd31214
2025-08-22T11:39:25.564+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2cd31214
2025-08-22T11:39:25.565+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2cd31214
2025-08-22T11:39:25.565+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@594f508f
2025-08-22T11:39:25.565+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@594f508f
2025-08-22T11:39:25.566+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@594f508f
2025-08-22T11:39:25.566+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6b6939e1
2025-08-22T11:39:25.566+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5d32f5db
2025-08-22T11:39:25.567+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@69c51fdb
2025-08-22T11:39:25.567+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@69c51fdb
2025-08-22T11:39:25.568+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:39:25.568+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:39:25.568+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4aadf144
2025-08-22T11:39:25.569+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68a97fc1
2025-08-22T11:39:25.569+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@227fc322
2025-08-22T11:39:25.570+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@63053b71
2025-08-22T11:39:25.570+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@63053b71
2025-08-22T11:39:25.571+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4687c184
2025-08-22T11:39:25.571+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4687c184
2025-08-22T11:39:25.572+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4687c184
2025-08-22T11:39:25.572+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@65f3f9e2
2025-08-22T11:39:25.573+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@65f3f9e2
2025-08-22T11:39:25.573+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@394950ad
2025-08-22T11:39:25.573+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@394950ad
2025-08-22T11:39:25.574+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@73dd3a46
2025-08-22T11:39:25.574+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@73dd3a46
2025-08-22T11:39:25.574+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@bae5e58
2025-08-22T11:39:25.574+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@bae5e58
2025-08-22T11:39:25.575+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@71e89a26
2025-08-22T11:39:25.575+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@71e89a26
2025-08-22T11:39:25.575+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@257708e
2025-08-22T11:39:25.576+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@18c26588
2025-08-22T11:39:25.576+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@6167a456
2025-08-22T11:39:25.577+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@54eb2bf6
2025-08-22T11:39:25.577+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d01f2e5
2025-08-22T11:39:25.585+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1e34840f
2025-08-22T11:39:25.585+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e34840f
2025-08-22T11:39:25.588+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@28d97205
2025-08-22T11:39:25.589+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7e58b0f6
2025-08-22T11:39:25.589+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@367fbb28
2025-08-22T11:39:25.589+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@54ddd7e4
2025-08-22T11:39:25.590+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@37f7ce20
2025-08-22T11:39:25.590+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@c931728
2025-08-22T11:39:25.591+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@477e5b69
2025-08-22T11:39:25.591+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7da6d695
2025-08-22T11:39:25.591+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@74a991cf
2025-08-22T11:39:25.704+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:39:25.771+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:39:26.029+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3eb8057c
2025-08-22T11:39:26.031+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:39:26.135+03:00  INFO 4048 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:39:26.151+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7d381eae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@47800bd7)
2025-08-22T11:39:26.152+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c57ca10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@212be8c)
2025-08-22T11:39:26.158+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:39:26.159+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:39:26.181+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@389a9ff6
2025-08-22T11:39:26.181+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@389a9ff6
2025-08-22T11:39:26.181+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1e34840f`
2025-08-22T11:39:26.195+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:39:26.196+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:39:26.196+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:39:26.203+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:39:26.204+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:39:26.204+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:39:26.204+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:39:26.204+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:39:26.205+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:39:26.208+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:39:26.209+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:39:26.209+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:39:26.213+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ee1c29a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@28d1b2f]
2025-08-22T11:39:28.362+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:39:28.364+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ee1c29a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@40ef1198]
2025-08-22T11:39:28.604+03:00 TRACE 4048 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@40ef1198] for TypeConfiguration
2025-08-22T11:39:28.604+03:00  INFO 4048 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:39:29.374+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:39:29.388+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:29.624+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:29.643+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:39:29.674+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:29.692+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:39:29.693+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:29.750+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:39:29.751+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:29.811+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:39:29.812+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:29.814+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:39:29.815+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:29.815+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:39:29.816+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:29.862+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:29.888+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:39:30.865+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:30.880+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:39:30.880+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:30.882+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:39:30.882+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:30.883+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:39:30.883+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:30.883+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:39:30.884+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:30.908+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:31.127+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:31.151+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:39:31.152+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.154+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:39:31.155+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.156+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:39:31.156+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.157+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:39:31.157+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.158+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:39:31.159+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.195+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:39:31.195+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.207+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:39:31.208+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.221+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:39:31.221+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.223+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:39:31.224+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.224+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:39:31.224+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:39:31.562+03:00  WARN 4048 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:39:33.048+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:39:33.109+03:00  INFO 4048 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:39:35.377+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2061/0x000001af81c5c7d0@4b6a7362 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:39:35.409+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:39:36.363+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:36.370+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:36.374+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:36.499+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:39:36.499+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:39:36.503+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T11:39:36.664+03:00  INFO 4048 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:39:36.734+03:00  WARN 4048 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:39:36.857+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:39:36.910+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:39:36.921+03:00  INFO 4048 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:39:36.951+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:39:36.951+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:39:36.951+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:39:36.951+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:39:36.951+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:39:36.951+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:39:36.952+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:39:37.539+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:39:37.542+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:39:37.545+03:00  INFO 4048 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:39:37.548+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755851977547 with initial instances count: 1
2025-08-22T11:39:37.555+03:00  INFO 4048 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:39:37.557+03:00  INFO 4048 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851977557, current=UP, previous=STARTING]
2025-08-22T11:39:37.560+03:00  INFO 4048 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:39:37.667+03:00  INFO 4048 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:39:37.862+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 81ms, rows: 1
2025-08-22T11:39:37.906+03:00  INFO 4048 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    709200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    288700 nanoseconds spent preparing 1 JDBC statements;
    3458400 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    29916400 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    32200 nanoseconds spent executing 1 pre-partial-flushes;
    19300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:39:37.913+03:00  INFO 4048 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.78 seconds (process running for 19.546)
2025-08-22T11:39:38.155+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T11:39:38.177+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T11:39:38.178+03:00 DEBUG 4048 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T11:39:38.300+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:39:38.302+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755851978302, current=DOWN, previous=UP]
2025-08-22T11:39:38.315+03:00  INFO 4048 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:39:38.346+03:00  INFO 4048 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:39:38.358+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:39:38.361+03:00 TRACE 4048 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@40ef1198] for TypeConfiguration
2025-08-22T11:39:38.361+03:00 DEBUG 4048 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2b175ab3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@40ef1198]
2025-08-22T11:39:38.371+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:39:38.434+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:39:38.438+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:39:41.454+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:39:41.471+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T11:39:41.471+03:00  INFO 4048 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T11:41:13.194+03:00  INFO 19820 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 19820 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:41:13.197+03:00  INFO 19820 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:41:14.694+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:41:14.698+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:41:14.757+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.760+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.763+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.766+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.769+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.771+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.774+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.776+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.779+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.781+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:41:14.783+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:41:14.788+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:41:14.789+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:41:14.800+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.801+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.801+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.802+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.803+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.803+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.804+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.804+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.805+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.805+03:00  INFO 19820 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:41:14.806+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:41:14.815+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:41:14.817+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:41:15.026+03:00  INFO 19820 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 202 ms. Found 10 JPA repository interfaces.
2025-08-22T11:41:15.434+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T11:41:17.242+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:41:17.332+03:00  INFO 19820 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:41:17.394+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:41:17.514+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71689ee2
2025-08-22T11:41:17.514+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71689ee2
2025-08-22T11:41:17.515+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@71689ee2
2025-08-22T11:41:17.515+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@f2b4303
2025-08-22T11:41:17.516+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@f2b4303
2025-08-22T11:41:17.516+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@23dda7a3
2025-08-22T11:41:17.516+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@23dda7a3
2025-08-22T11:41:17.517+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2d399e88
2025-08-22T11:41:17.517+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2d399e88
2025-08-22T11:41:17.517+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@18139a43
2025-08-22T11:41:17.518+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@18139a43
2025-08-22T11:41:17.518+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@18139a43
2025-08-22T11:41:17.519+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4df5f119
2025-08-22T11:41:17.520+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4df5f119
2025-08-22T11:41:17.520+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4df5f119
2025-08-22T11:41:17.521+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6632eb19
2025-08-22T11:41:17.521+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6632eb19
2025-08-22T11:41:17.522+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@42db3ff
2025-08-22T11:41:17.522+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a95aaae
2025-08-22T11:41:17.522+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a95aaae
2025-08-22T11:41:17.523+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@519e67e
2025-08-22T11:41:17.523+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7402bfe7
2025-08-22T11:41:17.524+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1d5958d3
2025-08-22T11:41:17.524+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1d5958d3
2025-08-22T11:41:17.524+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d5958d3
2025-08-22T11:41:17.525+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6a6e410c
2025-08-22T11:41:17.525+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6a6e410c
2025-08-22T11:41:17.525+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6a6e410c
2025-08-22T11:41:17.526+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@200e6029
2025-08-22T11:41:17.526+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@200e6029
2025-08-22T11:41:17.526+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@200e6029
2025-08-22T11:41:17.527+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@41120e48
2025-08-22T11:41:17.527+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@41120e48
2025-08-22T11:41:17.527+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@41120e48
2025-08-22T11:41:17.528+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@165a5979
2025-08-22T11:41:17.528+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@165a5979
2025-08-22T11:41:17.528+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@165a5979
2025-08-22T11:41:17.528+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@ea40c9f
2025-08-22T11:41:17.529+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@ea40c9f
2025-08-22T11:41:17.529+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5d782a4a
2025-08-22T11:41:17.529+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5d782a4a
2025-08-22T11:41:17.530+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@cc91fe3
2025-08-22T11:41:17.530+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@cc91fe3
2025-08-22T11:41:17.530+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@cc91fe3
2025-08-22T11:41:17.531+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@481c1e92
2025-08-22T11:41:17.531+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@66f223fa
2025-08-22T11:41:17.531+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@66f223fa
2025-08-22T11:41:17.532+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7ac47f14
2025-08-22T11:41:17.532+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb641a8
2025-08-22T11:41:17.532+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb641a8
2025-08-22T11:41:17.533+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb641a8
2025-08-22T11:41:17.533+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@16f62062
2025-08-22T11:41:17.533+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@61ec2cb5
2025-08-22T11:41:17.534+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3889c343
2025-08-22T11:41:17.534+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@34be7efb
2025-08-22T11:41:17.534+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@34be7efb
2025-08-22T11:41:17.536+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@136cad3e
2025-08-22T11:41:17.536+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@136cad3e
2025-08-22T11:41:17.536+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@13e5b262
2025-08-22T11:41:17.536+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6500e886
2025-08-22T11:41:17.537+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@220e1b7b
2025-08-22T11:41:17.537+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@54fd5759
2025-08-22T11:41:17.538+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6a358906
2025-08-22T11:41:17.538+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@893081e
2025-08-22T11:41:17.539+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5a941fb4
2025-08-22T11:41:17.539+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5a941fb4
2025-08-22T11:41:17.540+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@646ddc20
2025-08-22T11:41:17.540+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@646ddc20
2025-08-22T11:41:17.540+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T11:41:17.540+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T11:41:17.541+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32153bbe
2025-08-22T11:41:17.541+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32153bbe
2025-08-22T11:41:17.541+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4806fbf7
2025-08-22T11:41:17.542+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4806fbf7
2025-08-22T11:41:17.542+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4280b20b
2025-08-22T11:41:17.542+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50e4d8cd
2025-08-22T11:41:17.542+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b37d1a4
2025-08-22T11:41:17.543+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b37d1a4
2025-08-22T11:41:17.543+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@34114276
2025-08-22T11:41:17.543+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73c6ae15
2025-08-22T11:41:17.544+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5923210
2025-08-22T11:41:17.544+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@70dd79f7
2025-08-22T11:41:17.544+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@70dd79f7
2025-08-22T11:41:17.545+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ee19768
2025-08-22T11:41:17.545+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8113ea7
2025-08-22T11:41:17.545+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@1c879f07
2025-08-22T11:41:17.545+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1c879f07
2025-08-22T11:41:17.546+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@78e4fa1
2025-08-22T11:41:17.546+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@78e4fa1
2025-08-22T11:41:17.546+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4516c2ef
2025-08-22T11:41:17.547+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4516c2ef
2025-08-22T11:41:17.547+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4516c2ef
2025-08-22T11:41:17.547+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@44f338ec
2025-08-22T11:41:17.548+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@44f338ec
2025-08-22T11:41:17.548+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@44f338ec
2025-08-22T11:41:17.548+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@64acf8d2
2025-08-22T11:41:17.549+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@112a50a1
2025-08-22T11:41:17.549+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6258f9d1
2025-08-22T11:41:17.549+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6258f9d1
2025-08-22T11:41:17.549+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3f31892e
2025-08-22T11:41:17.550+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3f31892e
2025-08-22T11:41:17.550+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3f31892e
2025-08-22T11:41:17.550+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3cd89c72
2025-08-22T11:41:17.550+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fb46c10
2025-08-22T11:41:17.550+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5a079446
2025-08-22T11:41:17.551+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5a079446
2025-08-22T11:41:17.551+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@694c0ed1
2025-08-22T11:41:17.551+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@694c0ed1
2025-08-22T11:41:17.552+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@694c0ed1
2025-08-22T11:41:17.552+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T11:41:17.552+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T11:41:17.553+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d071e4b
2025-08-22T11:41:17.553+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d071e4b
2025-08-22T11:41:17.553+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2b441609
2025-08-22T11:41:17.553+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2b441609
2025-08-22T11:41:17.554+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@22f7bf36
2025-08-22T11:41:17.554+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@22f7bf36
2025-08-22T11:41:17.555+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4a3404fa
2025-08-22T11:41:17.555+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4a3404fa
2025-08-22T11:41:17.555+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@3fb4beb1
2025-08-22T11:41:17.555+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@34cb1310
2025-08-22T11:41:17.555+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@2b5a04b0
2025-08-22T11:41:17.556+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T11:41:17.556+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5b78a946
2025-08-22T11:41:17.565+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@66b62ebd
2025-08-22T11:41:17.566+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@66b62ebd
2025-08-22T11:41:17.568+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@7dcc0296
2025-08-22T11:41:17.569+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b8f87dc
2025-08-22T11:41:17.570+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4c25201
2025-08-22T11:41:17.570+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4faaff61
2025-08-22T11:41:17.571+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@526f8cb0
2025-08-22T11:41:17.571+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@45494046
2025-08-22T11:41:17.571+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@530d40b4
2025-08-22T11:41:17.571+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4bc4ec43
2025-08-22T11:41:17.572+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6560f387
2025-08-22T11:41:17.652+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:41:17.705+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:41:17.953+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c3836b6
2025-08-22T11:41:17.957+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:41:18.057+03:00  INFO 19820 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:41:18.073+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@60e5db1d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1f3f0d25)
2025-08-22T11:41:18.074+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32eac39b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ef0bc5b)
2025-08-22T11:41:18.080+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:41:18.081+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:41:18.098+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@642b71d6
2025-08-22T11:41:18.101+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@642b71d6
2025-08-22T11:41:18.101+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@66b62ebd`
2025-08-22T11:41:18.110+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:41:18.110+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:41:18.110+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:41:18.117+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:41:18.118+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:41:18.118+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:41:18.118+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:41:18.119+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:41:18.119+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:41:18.121+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:41:18.121+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:41:18.121+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:41:18.124+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5345552f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ba4bff]
2025-08-22T11:41:19.688+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:41:19.689+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5345552f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7f1e946f]
2025-08-22T11:41:19.885+03:00 TRACE 19820 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7f1e946f] for TypeConfiguration
2025-08-22T11:41:19.886+03:00  INFO 19820 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:41:20.538+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:41:20.552+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:20.753+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:20.771+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:41:20.814+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:20.836+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:41:20.838+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:20.886+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:41:20.886+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:20.929+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:41:20.930+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:20.931+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:41:20.932+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:20.933+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:41:20.933+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:20.977+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:21.001+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:41:22.029+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:22.047+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:41:22.047+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.049+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:41:22.050+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.050+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:41:22.051+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.051+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:41:22.052+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.096+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:22.543+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:22.565+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:41:22.565+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.567+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:41:22.567+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.568+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:41:22.568+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.569+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:41:22.569+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.570+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:41:22.570+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.605+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:41:22.605+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.617+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:41:22.617+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.630+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:41:22.631+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.633+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:41:22.633+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.633+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:41:22.634+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:41:22.913+03:00  WARN 19820 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:41:24.373+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:41:24.438+03:00  INFO 19820 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:41:26.791+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2064/0x0000021220cb62e0@61f5ee9d with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:41:26.821+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:41:27.777+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:27.782+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:27.785+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:27.898+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:41:27.899+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:41:27.903+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T11:41:28.075+03:00  INFO 19820 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:41:28.183+03:00  WARN 19820 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:41:28.319+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:41:28.386+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:41:28.393+03:00  INFO 19820 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:41:28.410+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:41:28.410+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:41:28.411+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:41:28.411+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:41:28.411+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:41:28.411+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:41:28.411+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:41:28.912+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:41:28.916+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:41:28.922+03:00  INFO 19820 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:41:28.926+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755852088924 with initial instances count: 1
2025-08-22T11:41:28.933+03:00  INFO 19820 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:41:28.934+03:00  INFO 19820 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852088934, current=UP, previous=STARTING]
2025-08-22T11:41:28.938+03:00  INFO 19820 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:41:29.010+03:00  INFO 19820 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:41:29.190+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 73ms, rows: 1
2025-08-22T11:41:29.221+03:00  INFO 19820 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    694800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    328900 nanoseconds spent preparing 1 JDBC statements;
    3872200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    18422800 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    58400 nanoseconds spent executing 1 pre-partial-flushes;
    14600 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:41:29.229+03:00  INFO 19820 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.612 seconds (process running for 18.475)
2025-08-22T11:41:32.577+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T11:41:32.679+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T11:41:32.681+03:00 DEBUG 19820 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T11:43:14.810+03:00  INFO 9112 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 9112 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:43:14.813+03:00  INFO 9112 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:43:16.361+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:43:16.363+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:43:16.423+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.426+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.429+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.432+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.434+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.437+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.440+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.442+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.445+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.447+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:43:16.449+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 75 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:43:16.454+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:43:16.455+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:43:16.467+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.467+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.468+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.468+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.469+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.469+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.470+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.470+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.471+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.471+03:00  INFO 9112 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:43:16.472+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:43:16.484+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:43:16.486+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:43:16.702+03:00  INFO 9112 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 203 ms. Found 10 JPA repository interfaces.
2025-08-22T11:43:17.055+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T11:43:18.907+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:43:18.996+03:00  INFO 9112 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:43:19.054+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:43:19.173+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1fb61db4
2025-08-22T11:43:19.173+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1fb61db4
2025-08-22T11:43:19.174+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1fb61db4
2025-08-22T11:43:19.174+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1d4e06bb
2025-08-22T11:43:19.174+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1d4e06bb
2025-08-22T11:43:19.174+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2eb9c7ad
2025-08-22T11:43:19.175+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2eb9c7ad
2025-08-22T11:43:19.175+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4529048e
2025-08-22T11:43:19.175+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4529048e
2025-08-22T11:43:19.176+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6addfa22
2025-08-22T11:43:19.176+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6addfa22
2025-08-22T11:43:19.176+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6addfa22
2025-08-22T11:43:19.177+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@74b521c
2025-08-22T11:43:19.178+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@74b521c
2025-08-22T11:43:19.178+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@74b521c
2025-08-22T11:43:19.179+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6f26e775
2025-08-22T11:43:19.179+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6f26e775
2025-08-22T11:43:19.179+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3220833f
2025-08-22T11:43:19.180+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@2e5c245d
2025-08-22T11:43:19.180+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2e5c245d
2025-08-22T11:43:19.180+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c862522
2025-08-22T11:43:19.181+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@64c37088
2025-08-22T11:43:19.181+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@524c3e54
2025-08-22T11:43:19.181+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@524c3e54
2025-08-22T11:43:19.181+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@524c3e54
2025-08-22T11:43:19.182+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1d7d968c
2025-08-22T11:43:19.182+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1d7d968c
2025-08-22T11:43:19.182+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1d7d968c
2025-08-22T11:43:19.183+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@10df1f34
2025-08-22T11:43:19.183+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@10df1f34
2025-08-22T11:43:19.183+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@10df1f34
2025-08-22T11:43:19.184+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6fe77a97
2025-08-22T11:43:19.184+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6fe77a97
2025-08-22T11:43:19.184+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6fe77a97
2025-08-22T11:43:19.184+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5cea47a1
2025-08-22T11:43:19.185+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5cea47a1
2025-08-22T11:43:19.185+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5cea47a1
2025-08-22T11:43:19.185+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2d527346
2025-08-22T11:43:19.185+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2d527346
2025-08-22T11:43:19.185+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@451cef67
2025-08-22T11:43:19.186+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@451cef67
2025-08-22T11:43:19.186+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@11fb1691
2025-08-22T11:43:19.186+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@11fb1691
2025-08-22T11:43:19.186+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@11fb1691
2025-08-22T11:43:19.187+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1f229c40
2025-08-22T11:43:19.187+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@215404a1
2025-08-22T11:43:19.187+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@215404a1
2025-08-22T11:43:19.187+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@391b03b
2025-08-22T11:43:19.187+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@4a977146
2025-08-22T11:43:19.188+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4a977146
2025-08-22T11:43:19.188+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@4a977146
2025-08-22T11:43:19.188+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@41dc34c8
2025-08-22T11:43:19.188+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@402c415e
2025-08-22T11:43:19.189+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4e322108
2025-08-22T11:43:19.189+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@3f5e64c9
2025-08-22T11:43:19.189+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3f5e64c9
2025-08-22T11:43:19.189+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1f847d9e
2025-08-22T11:43:19.190+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1f847d9e
2025-08-22T11:43:19.190+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3d00e981
2025-08-22T11:43:19.190+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6265a548
2025-08-22T11:43:19.190+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e51ede1
2025-08-22T11:43:19.191+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@12051d38
2025-08-22T11:43:19.191+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@28f3a218
2025-08-22T11:43:19.191+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67730dab
2025-08-22T11:43:19.192+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@466cca41
2025-08-22T11:43:19.192+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@466cca41
2025-08-22T11:43:19.192+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7c3ae369
2025-08-22T11:43:19.192+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7c3ae369
2025-08-22T11:43:19.193+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@496c6d94
2025-08-22T11:43:19.193+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@496c6d94
2025-08-22T11:43:19.193+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@360d3f47
2025-08-22T11:43:19.193+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@360d3f47
2025-08-22T11:43:19.193+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1693d505
2025-08-22T11:43:19.194+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1693d505
2025-08-22T11:43:19.194+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d195d15
2025-08-22T11:43:19.194+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17b387ef
2025-08-22T11:43:19.195+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@489b7559
2025-08-22T11:43:19.195+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@489b7559
2025-08-22T11:43:19.195+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4028aab2
2025-08-22T11:43:19.195+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@37aea657
2025-08-22T11:43:19.196+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ca9d3b2
2025-08-22T11:43:19.196+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f8b48c3
2025-08-22T11:43:19.196+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f8b48c3
2025-08-22T11:43:19.196+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2af31aba
2025-08-22T11:43:19.197+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@682d8dad
2025-08-22T11:43:19.197+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@1aebe759
2025-08-22T11:43:19.197+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1aebe759
2025-08-22T11:43:19.197+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6fd37997
2025-08-22T11:43:19.198+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6fd37997
2025-08-22T11:43:19.198+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5dc7881d
2025-08-22T11:43:19.198+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5dc7881d
2025-08-22T11:43:19.198+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5dc7881d
2025-08-22T11:43:19.199+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@590336ed
2025-08-22T11:43:19.199+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@590336ed
2025-08-22T11:43:19.199+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@590336ed
2025-08-22T11:43:19.199+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1c97c3bb
2025-08-22T11:43:19.200+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@68fc1e7f
2025-08-22T11:43:19.200+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@99af41d
2025-08-22T11:43:19.200+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@99af41d
2025-08-22T11:43:19.200+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@496e0f9d
2025-08-22T11:43:19.201+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@496e0f9d
2025-08-22T11:43:19.201+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@496e0f9d
2025-08-22T11:43:19.201+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6b468710
2025-08-22T11:43:19.201+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63c163e1
2025-08-22T11:43:19.201+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@3da55998
2025-08-22T11:43:19.201+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3da55998
2025-08-22T11:43:19.202+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@40ebb56
2025-08-22T11:43:19.202+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@40ebb56
2025-08-22T11:43:19.202+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@40ebb56
2025-08-22T11:43:19.203+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@5b2fc2c0
2025-08-22T11:43:19.203+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5b2fc2c0
2025-08-22T11:43:19.203+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@33197c2f
2025-08-22T11:43:19.204+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@33197c2f
2025-08-22T11:43:19.204+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@24e79a4d
2025-08-22T11:43:19.204+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@24e79a4d
2025-08-22T11:43:19.205+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5542418c
2025-08-22T11:43:19.205+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5542418c
2025-08-22T11:43:19.205+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@705eb026
2025-08-22T11:43:19.205+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@705eb026
2025-08-22T11:43:19.206+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@8de4206
2025-08-22T11:43:19.206+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@10f384a2
2025-08-22T11:43:19.206+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@57fae911
2025-08-22T11:43:19.207+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@52a0bc48
2025-08-22T11:43:19.207+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@28941a68
2025-08-22T11:43:19.217+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1f6d3a81
2025-08-22T11:43:19.217+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1f6d3a81
2025-08-22T11:43:19.220+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3a225534
2025-08-22T11:43:19.220+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@44d6f9cf
2025-08-22T11:43:19.220+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@34f32575
2025-08-22T11:43:19.221+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@54224125
2025-08-22T11:43:19.221+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c013560
2025-08-22T11:43:19.221+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@feab3ae
2025-08-22T11:43:19.221+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@229fe7ab
2025-08-22T11:43:19.222+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@64f2b1b4
2025-08-22T11:43:19.222+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@11ad327f
2025-08-22T11:43:19.308+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:43:19.362+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:43:19.578+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22f0e329
2025-08-22T11:43:19.581+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:43:19.684+03:00  INFO 9112 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:43:19.701+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@341141ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1773faf8)
2025-08-22T11:43:19.701+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ef4a8fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30f99ca1)
2025-08-22T11:43:19.706+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:43:19.707+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:43:19.725+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@36a25457
2025-08-22T11:43:19.725+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@36a25457
2025-08-22T11:43:19.726+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1f6d3a81`
2025-08-22T11:43:19.733+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:43:19.734+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:43:19.734+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:43:19.740+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:43:19.740+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:43:19.740+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:43:19.741+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:43:19.741+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:43:19.741+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:43:19.743+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:43:19.743+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:43:19.743+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:43:19.746+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6debf1b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@701da311]
2025-08-22T11:43:21.380+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:43:21.381+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6debf1b8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25f3207e]
2025-08-22T11:43:21.561+03:00 TRACE 9112 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@25f3207e] for TypeConfiguration
2025-08-22T11:43:21.562+03:00  INFO 9112 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:43:22.218+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:43:22.236+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:22.427+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:22.444+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:43:22.478+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:22.498+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:43:22.498+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:22.543+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:43:22.544+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:22.590+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:43:22.590+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:22.592+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:43:22.593+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:22.655+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:22.687+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:43:23.585+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:23.617+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:43:23.618+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.621+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:43:23.625+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.626+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:43:23.629+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.630+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:43:23.631+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.663+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:23.960+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:23.988+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:43:23.989+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.991+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:43:23.992+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.992+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:43:23.993+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.994+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:43:23.994+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:23.995+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:43:23.995+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:24.038+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:43:24.038+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:24.050+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:43:24.051+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:24.065+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:43:24.066+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:24.068+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:43:24.069+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:24.070+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:43:24.071+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:43:24.427+03:00  WARN 9112 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:43:26.006+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:43:26.091+03:00  INFO 9112 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:43:28.882+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2055/0x0000021301cb4780@396d5c73 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:43:28.915+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:43:29.949+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:29.955+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:29.958+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:30.190+03:00  INFO 9112 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:43:30.271+03:00  WARN 9112 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:43:30.401+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:43:30.462+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:43:30.470+03:00  INFO 9112 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:43:30.494+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:43:30.494+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:43:30.495+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:43:30.495+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:43:30.495+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:43:30.495+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:43:30.496+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:43:31.157+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:43:31.161+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:43:31.165+03:00  INFO 9112 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:43:31.168+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755852211167 with initial instances count: 1
2025-08-22T11:43:31.177+03:00  INFO 9112 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:43:31.178+03:00  INFO 9112 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852211178, current=UP, previous=STARTING]
2025-08-22T11:43:31.181+03:00  INFO 9112 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:43:31.264+03:00  INFO 9112 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:43:31.445+03:00 DEBUG 9112 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 63ms, rows: 1
2025-08-22T11:43:31.481+03:00  INFO 9112 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    700600 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    312200 nanoseconds spent preparing 1 JDBC statements;
    3753300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    21313700 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    46400 nanoseconds spent executing 1 pre-partial-flushes;
    19100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:43:31.488+03:00  INFO 9112 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.217 seconds (process running for 19.1)
2025-08-22T11:43:31.599+03:00  WARN 9112 --- [DataStoreService] [Test worker] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests@5e615573]

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests': Unsatisfied dependency expressed through field 'mvc': No qualifying bean of type 'org.springframework.test.web.servlet.MockMvc' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:405) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:156) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.test.web.servlet.MockMvc' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:2284) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1708) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.9.jar:6.2.9]
	... 97 common frames omitted

2025-08-22T11:43:31.754+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:43:31.754+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852211754, current=DOWN, previous=UP]
2025-08-22T11:43:31.755+03:00  INFO 9112 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:43:31.762+03:00  INFO 9112 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:43:31.789+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:43:31.790+03:00 TRACE 9112 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@25f3207e] for TypeConfiguration
2025-08-22T11:43:31.790+03:00 DEBUG 9112 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2aca0549] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25f3207e]
2025-08-22T11:43:31.793+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:43:31.809+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:43:31.815+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:43:34.820+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:43:34.841+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T11:43:34.842+03:00  INFO 9112 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T11:45:34.313+03:00  INFO 20648 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 20648 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:45:34.316+03:00  INFO 20648 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:45:35.985+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:45:35.989+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:45:36.066+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.069+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.072+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.075+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.077+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.079+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.081+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.084+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.087+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.090+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:45:36.092+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 86 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:45:36.099+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:45:36.100+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:45:36.116+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.117+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.118+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.119+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.120+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.121+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.122+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.123+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.123+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.124+03:00  INFO 20648 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:45:36.125+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:45:36.142+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:45:36.144+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:45:36.370+03:00  INFO 20648 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 218 ms. Found 10 JPA repository interfaces.
2025-08-22T11:45:36.734+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T11:45:38.732+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:45:38.827+03:00  INFO 20648 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:45:38.906+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:45:39.046+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3f2d2f22
2025-08-22T11:45:39.047+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3f2d2f22
2025-08-22T11:45:39.047+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3f2d2f22
2025-08-22T11:45:39.048+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@61c3d7ac
2025-08-22T11:45:39.048+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@61c3d7ac
2025-08-22T11:45:39.049+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4bc9389
2025-08-22T11:45:39.049+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4bc9389
2025-08-22T11:45:39.050+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@30221cfa
2025-08-22T11:45:39.050+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@30221cfa
2025-08-22T11:45:39.051+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@662061e3
2025-08-22T11:45:39.051+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@662061e3
2025-08-22T11:45:39.051+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@662061e3
2025-08-22T11:45:39.052+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1921b43c
2025-08-22T11:45:39.053+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1921b43c
2025-08-22T11:45:39.053+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1921b43c
2025-08-22T11:45:39.054+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3c4e17ea
2025-08-22T11:45:39.055+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3c4e17ea
2025-08-22T11:45:39.055+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@285ac40b
2025-08-22T11:45:39.056+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5b2ade46
2025-08-22T11:45:39.056+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5b2ade46
2025-08-22T11:45:39.057+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2087c939
2025-08-22T11:45:39.057+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c3a7b84
2025-08-22T11:45:39.057+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@123e9094
2025-08-22T11:45:39.058+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@123e9094
2025-08-22T11:45:39.058+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@123e9094
2025-08-22T11:45:39.059+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1f6ba47b
2025-08-22T11:45:39.059+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1f6ba47b
2025-08-22T11:45:39.059+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1f6ba47b
2025-08-22T11:45:39.060+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1bb78ae
2025-08-22T11:45:39.060+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1bb78ae
2025-08-22T11:45:39.061+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1bb78ae
2025-08-22T11:45:39.061+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3ee2d546
2025-08-22T11:45:39.061+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3ee2d546
2025-08-22T11:45:39.062+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ee2d546
2025-08-22T11:45:39.062+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@58be583e
2025-08-22T11:45:39.062+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@58be583e
2025-08-22T11:45:39.062+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@58be583e
2025-08-22T11:45:39.063+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1a34772e
2025-08-22T11:45:39.063+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1a34772e
2025-08-22T11:45:39.064+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@401002ce
2025-08-22T11:45:39.064+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@401002ce
2025-08-22T11:45:39.064+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@6870a76f
2025-08-22T11:45:39.065+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@6870a76f
2025-08-22T11:45:39.065+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6870a76f
2025-08-22T11:45:39.066+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@42257df7
2025-08-22T11:45:39.066+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7b11ff9a
2025-08-22T11:45:39.066+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7b11ff9a
2025-08-22T11:45:39.067+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3bd79444
2025-08-22T11:45:39.067+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5671078e
2025-08-22T11:45:39.067+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5671078e
2025-08-22T11:45:39.067+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5671078e
2025-08-22T11:45:39.068+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3fd21272
2025-08-22T11:45:39.068+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@4b4bc73d
2025-08-22T11:45:39.068+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4cb91fa4
2025-08-22T11:45:39.069+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@12aa2cca
2025-08-22T11:45:39.069+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@12aa2cca
2025-08-22T11:45:39.069+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3dc4ed6f
2025-08-22T11:45:39.070+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3dc4ed6f
2025-08-22T11:45:39.070+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2823b7c5
2025-08-22T11:45:39.071+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2ce3d95a
2025-08-22T11:45:39.071+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6f6c6c70
2025-08-22T11:45:39.071+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@75d95b67
2025-08-22T11:45:39.072+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f15786
2025-08-22T11:45:39.073+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@72ea6fcb
2025-08-22T11:45:39.073+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ee9920a
2025-08-22T11:45:39.074+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ee9920a
2025-08-22T11:45:39.074+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4154ecd3
2025-08-22T11:45:39.075+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4154ecd3
2025-08-22T11:45:39.075+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@b53ce18
2025-08-22T11:45:39.076+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@b53ce18
2025-08-22T11:45:39.076+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a666c8e
2025-08-22T11:45:39.077+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a666c8e
2025-08-22T11:45:39.077+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@18adc20a
2025-08-22T11:45:39.078+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@18adc20a
2025-08-22T11:45:39.078+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e7987b8
2025-08-22T11:45:39.078+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6bcfb561
2025-08-22T11:45:39.079+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7254a68a
2025-08-22T11:45:39.079+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7254a68a
2025-08-22T11:45:39.080+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@49f9758
2025-08-22T11:45:39.080+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36e98434
2025-08-22T11:45:39.080+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@209b4b35
2025-08-22T11:45:39.081+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@77acc95a
2025-08-22T11:45:39.081+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@77acc95a
2025-08-22T11:45:39.081+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff1a5a0
2025-08-22T11:45:39.082+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@75c3584e
2025-08-22T11:45:39.082+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@f7b7720
2025-08-22T11:45:39.082+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@f7b7720
2025-08-22T11:45:39.082+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1e0c898c
2025-08-22T11:45:39.083+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1e0c898c
2025-08-22T11:45:39.083+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1cd2e348
2025-08-22T11:45:39.083+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1cd2e348
2025-08-22T11:45:39.084+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1cd2e348
2025-08-22T11:45:39.084+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@73bcd9b4
2025-08-22T11:45:39.084+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@73bcd9b4
2025-08-22T11:45:39.085+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@73bcd9b4
2025-08-22T11:45:39.085+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@27aa7294
2025-08-22T11:45:39.085+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5d10df04
2025-08-22T11:45:39.086+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@56d3af4d
2025-08-22T11:45:39.086+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56d3af4d
2025-08-22T11:45:39.086+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@43b7bd5a
2025-08-22T11:45:39.086+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@43b7bd5a
2025-08-22T11:45:39.087+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@43b7bd5a
2025-08-22T11:45:39.087+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@37fd496a
2025-08-22T11:45:39.087+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6c4e486e
2025-08-22T11:45:39.087+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@27ac3b6d
2025-08-22T11:45:39.088+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@27ac3b6d
2025-08-22T11:45:39.088+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@598f1faf
2025-08-22T11:45:39.088+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@598f1faf
2025-08-22T11:45:39.088+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@598f1faf
2025-08-22T11:45:39.089+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@464abed
2025-08-22T11:45:39.090+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@464abed
2025-08-22T11:45:39.090+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1af78e37
2025-08-22T11:45:39.090+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1af78e37
2025-08-22T11:45:39.091+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5c46a957
2025-08-22T11:45:39.091+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5c46a957
2025-08-22T11:45:39.091+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7d95a717
2025-08-22T11:45:39.091+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7d95a717
2025-08-22T11:45:39.092+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5c0f508b
2025-08-22T11:45:39.092+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5c0f508b
2025-08-22T11:45:39.092+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7a2ffb0b
2025-08-22T11:45:39.093+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@13cae908
2025-08-22T11:45:39.093+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@43b74979
2025-08-22T11:45:39.093+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@659ac28c
2025-08-22T11:45:39.093+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@60688a97
2025-08-22T11:45:39.102+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@f0d01c9
2025-08-22T11:45:39.103+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@f0d01c9
2025-08-22T11:45:39.106+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@70940cb8
2025-08-22T11:45:39.107+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@47fce2c4
2025-08-22T11:45:39.108+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3810806c
2025-08-22T11:45:39.108+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b76ecd5
2025-08-22T11:45:39.108+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7bd7c4cf
2025-08-22T11:45:39.109+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5b9df3b3
2025-08-22T11:45:39.109+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@67b20b4c
2025-08-22T11:45:39.109+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7bbe532b
2025-08-22T11:45:39.110+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e0a112f
2025-08-22T11:45:39.205+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:45:39.271+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:45:39.543+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5aefdb9e
2025-08-22T11:45:39.546+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:45:39.661+03:00  INFO 20648 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:45:39.682+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1cb73a92) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7d3faf1d)
2025-08-22T11:45:39.683+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36017835) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7207f3c2)
2025-08-22T11:45:39.689+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:45:39.689+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:45:39.704+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2d093067
2025-08-22T11:45:39.705+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2d093067
2025-08-22T11:45:39.705+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@f0d01c9`
2025-08-22T11:45:39.713+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:45:39.714+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:45:39.714+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:45:39.721+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:45:39.721+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:45:39.721+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:45:39.721+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:45:39.721+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:45:39.722+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:45:39.725+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:45:39.725+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:45:39.725+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:45:39.729+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11a29c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fc4b8d6]
2025-08-22T11:45:41.285+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:45:41.287+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11a29c0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4870d2e1]
2025-08-22T11:45:41.459+03:00 TRACE 20648 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4870d2e1] for TypeConfiguration
2025-08-22T11:45:41.460+03:00  INFO 20648 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:45:41.987+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:45:42.006+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:42.166+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:42.177+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:45:42.203+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:42.229+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:45:42.229+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:42.265+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:45:42.265+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:42.297+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:45:42.298+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:42.299+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:45:42.300+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:42.338+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:42.358+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:45:43.028+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:43.038+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:45:43.038+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.041+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:45:43.041+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.041+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:45:43.041+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.041+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:45:43.041+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.064+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:43.349+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:43.377+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:45:43.377+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.379+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:45:43.379+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.380+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:45:43.380+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.381+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:45:43.382+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.382+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:45:43.383+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.415+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:45:43.416+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.428+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:45:43.429+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.443+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:45:43.443+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.444+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:45:43.445+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.445+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:45:43.446+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:45:43.732+03:00  WARN 20648 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:45:45.292+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:45:45.362+03:00  INFO 20648 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:45:47.636+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2052/0x0000020981c5c780@17778985 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:45:47.663+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:45:48.678+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:48.684+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:48.689+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:48.903+03:00  INFO 20648 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:45:48.973+03:00  WARN 20648 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:45:49.123+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:45:49.190+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:45:49.199+03:00  INFO 20648 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:45:49.225+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:45:49.225+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:45:49.225+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:45:49.226+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:45:49.226+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:45:49.226+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:45:49.226+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:45:49.877+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:45:49.879+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:45:49.882+03:00  INFO 20648 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:45:49.884+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755852349883 with initial instances count: 1
2025-08-22T11:45:49.890+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:45:49.891+03:00  INFO 20648 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852349891, current=UP, previous=STARTING]
2025-08-22T11:45:49.896+03:00  INFO 20648 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:45:49.989+03:00  INFO 20648 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:45:50.294+03:00 DEBUG 20648 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 49ms, rows: 1
2025-08-22T11:45:50.325+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    669800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    6840300 nanoseconds spent preparing 1 JDBC statements;
    7446000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    16319900 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    34900 nanoseconds spent executing 1 pre-partial-flushes;
    19800 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:50.332+03:00  INFO 20648 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.603 seconds (process running for 18.486)
2025-08-22T11:45:50.477+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:45:50.477+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:45:50.479+03:00  INFO 20648 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T11:45:50.627+03:00  INFO 20648 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:45:50.677+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:45:50.677+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852350677, current=DOWN, previous=UP]
2025-08-22T11:45:50.677+03:00  INFO 20648 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:45:50.682+03:00  INFO 20648 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:45:50.696+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:45:50.697+03:00 TRACE 20648 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4870d2e1] for TypeConfiguration
2025-08-22T11:45:50.698+03:00 DEBUG 20648 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@69377d15] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4870d2e1]
2025-08-22T11:45:50.701+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:45:50.714+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:45:50.719+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:45:53.731+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:45:53.747+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T11:45:53.748+03:00  INFO 20648 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T11:46:05.745+03:00  INFO 22484 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 22484 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:46:05.750+03:00  INFO 22484 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:46:07.746+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:46:07.750+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:46:07.832+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.835+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.840+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.845+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.848+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.851+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.854+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.857+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.860+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.863+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:46:07.865+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 102 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:46:07.874+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:46:07.875+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:46:07.893+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.894+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.894+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.895+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.896+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.897+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.898+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.899+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.900+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.901+03:00  INFO 22484 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:46:07.902+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:46:07.915+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:46:07.917+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:46:08.205+03:00  INFO 22484 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 279 ms. Found 10 JPA repository interfaces.
2025-08-22T11:46:08.673+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T11:46:10.929+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:46:11.026+03:00  INFO 22484 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:46:11.100+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:46:11.257+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@458704ee
2025-08-22T11:46:11.258+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@458704ee
2025-08-22T11:46:11.258+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@458704ee
2025-08-22T11:46:11.259+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@45b2d17b
2025-08-22T11:46:11.259+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@45b2d17b
2025-08-22T11:46:11.260+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5243d730
2025-08-22T11:46:11.260+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5243d730
2025-08-22T11:46:11.261+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@15afebcc
2025-08-22T11:46:11.261+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@15afebcc
2025-08-22T11:46:11.261+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@68722de3
2025-08-22T11:46:11.262+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@68722de3
2025-08-22T11:46:11.263+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@68722de3
2025-08-22T11:46:11.264+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3b18009f
2025-08-22T11:46:11.264+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3b18009f
2025-08-22T11:46:11.265+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3b18009f
2025-08-22T11:46:11.265+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@64d1f549
2025-08-22T11:46:11.265+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@64d1f549
2025-08-22T11:46:11.266+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@1fb61db4
2025-08-22T11:46:11.267+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1d4e06bb
2025-08-22T11:46:11.268+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1d4e06bb
2025-08-22T11:46:11.269+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2eb9c7ad
2025-08-22T11:46:11.269+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4529048e
2025-08-22T11:46:11.270+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6addfa22
2025-08-22T11:46:11.270+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6addfa22
2025-08-22T11:46:11.271+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6addfa22
2025-08-22T11:46:11.273+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@74b521c
2025-08-22T11:46:11.274+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@74b521c
2025-08-22T11:46:11.275+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@74b521c
2025-08-22T11:46:11.276+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@672f69f7
2025-08-22T11:46:11.277+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@672f69f7
2025-08-22T11:46:11.277+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@672f69f7
2025-08-22T11:46:11.278+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6aaf1ce8
2025-08-22T11:46:11.279+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6aaf1ce8
2025-08-22T11:46:11.282+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6aaf1ce8
2025-08-22T11:46:11.288+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6f26e775
2025-08-22T11:46:11.289+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6f26e775
2025-08-22T11:46:11.290+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6f26e775
2025-08-22T11:46:11.290+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3220833f
2025-08-22T11:46:11.291+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3220833f
2025-08-22T11:46:11.291+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e5c245d
2025-08-22T11:46:11.292+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e5c245d
2025-08-22T11:46:11.293+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3c862522
2025-08-22T11:46:11.293+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3c862522
2025-08-22T11:46:11.294+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c862522
2025-08-22T11:46:11.294+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@64c37088
2025-08-22T11:46:11.294+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@524c3e54
2025-08-22T11:46:11.295+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@524c3e54
2025-08-22T11:46:11.295+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1d7d968c
2025-08-22T11:46:11.295+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@10df1f34
2025-08-22T11:46:11.296+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@10df1f34
2025-08-22T11:46:11.296+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@10df1f34
2025-08-22T11:46:11.296+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6fe77a97
2025-08-22T11:46:11.297+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5cea47a1
2025-08-22T11:46:11.297+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2d527346
2025-08-22T11:46:11.298+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@451cef67
2025-08-22T11:46:11.298+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@451cef67
2025-08-22T11:46:11.298+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11fb1691
2025-08-22T11:46:11.299+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11fb1691
2025-08-22T11:46:11.299+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1f229c40
2025-08-22T11:46:11.300+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@215404a1
2025-08-22T11:46:11.300+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@391b03b
2025-08-22T11:46:11.301+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4a977146
2025-08-22T11:46:11.302+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@41dc34c8
2025-08-22T11:46:11.303+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@402c415e
2025-08-22T11:46:11.303+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e322108
2025-08-22T11:46:11.304+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e322108
2025-08-22T11:46:11.304+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f5e64c9
2025-08-22T11:46:11.305+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f5e64c9
2025-08-22T11:46:11.305+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1f847d9e
2025-08-22T11:46:11.306+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1f847d9e
2025-08-22T11:46:11.306+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3d00e981
2025-08-22T11:46:11.306+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3d00e981
2025-08-22T11:46:11.307+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6265a548
2025-08-22T11:46:11.307+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6265a548
2025-08-22T11:46:11.307+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e51ede1
2025-08-22T11:46:11.308+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12051d38
2025-08-22T11:46:11.308+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@28f3a218
2025-08-22T11:46:11.308+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@28f3a218
2025-08-22T11:46:11.309+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@67730dab
2025-08-22T11:46:11.309+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@466cca41
2025-08-22T11:46:11.309+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c3ae369
2025-08-22T11:46:11.309+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@496c6d94
2025-08-22T11:46:11.310+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@496c6d94
2025-08-22T11:46:11.310+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@360d3f47
2025-08-22T11:46:11.310+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1693d505
2025-08-22T11:46:11.310+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d195d15
2025-08-22T11:46:11.311+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d195d15
2025-08-22T11:46:11.311+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@17b387ef
2025-08-22T11:46:11.311+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@17b387ef
2025-08-22T11:46:11.311+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@489b7559
2025-08-22T11:46:11.312+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@489b7559
2025-08-22T11:46:11.312+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@489b7559
2025-08-22T11:46:11.312+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4028aab2
2025-08-22T11:46:11.312+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4028aab2
2025-08-22T11:46:11.313+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4028aab2
2025-08-22T11:46:11.313+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@37aea657
2025-08-22T11:46:11.313+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3ca9d3b2
2025-08-22T11:46:11.313+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2f8b48c3
2025-08-22T11:46:11.314+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2f8b48c3
2025-08-22T11:46:11.315+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2af31aba
2025-08-22T11:46:11.316+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2af31aba
2025-08-22T11:46:11.316+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2af31aba
2025-08-22T11:46:11.320+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@682d8dad
2025-08-22T11:46:11.321+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1aebe759
2025-08-22T11:46:11.321+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@6fd37997
2025-08-22T11:46:11.322+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6fd37997
2025-08-22T11:46:11.323+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@5dc7881d
2025-08-22T11:46:11.325+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5dc7881d
2025-08-22T11:46:11.325+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5dc7881d
2025-08-22T11:46:11.326+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@590336ed
2025-08-22T11:46:11.327+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@590336ed
2025-08-22T11:46:11.327+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1c97c3bb
2025-08-22T11:46:11.328+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1c97c3bb
2025-08-22T11:46:11.329+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@68fc1e7f
2025-08-22T11:46:11.330+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@68fc1e7f
2025-08-22T11:46:11.331+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@99af41d
2025-08-22T11:46:11.331+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@99af41d
2025-08-22T11:46:11.332+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@496e0f9d
2025-08-22T11:46:11.332+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@496e0f9d
2025-08-22T11:46:11.332+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@6b468710
2025-08-22T11:46:11.332+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@63c163e1
2025-08-22T11:46:11.333+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@3da55998
2025-08-22T11:46:11.333+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@40ebb56
2025-08-22T11:46:11.333+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5b2fc2c0
2025-08-22T11:46:11.346+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@6b9fc5c7
2025-08-22T11:46:11.346+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b9fc5c7
2025-08-22T11:46:11.349+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@52667676
2025-08-22T11:46:11.350+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@75559cd9
2025-08-22T11:46:11.350+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@39a09c0
2025-08-22T11:46:11.351+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3dbf3bc
2025-08-22T11:46:11.351+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@626ff077
2025-08-22T11:46:11.351+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b850bb7
2025-08-22T11:46:11.352+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6802c10e
2025-08-22T11:46:11.352+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@341889a1
2025-08-22T11:46:11.352+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@29693b1d
2025-08-22T11:46:11.454+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:46:11.519+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:46:11.862+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6484364f
2025-08-22T11:46:11.866+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:46:12.025+03:00  INFO 22484 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:46:12.040+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@36bd07ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@85b9f9c)
2025-08-22T11:46:12.040+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26a004ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b6a4da7)
2025-08-22T11:46:12.046+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:46:12.047+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:46:12.075+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@44103266
2025-08-22T11:46:12.075+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@44103266
2025-08-22T11:46:12.075+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6b9fc5c7`
2025-08-22T11:46:12.084+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:46:12.085+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:46:12.085+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:46:12.092+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:46:12.093+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:46:12.093+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:46:12.093+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:46:12.093+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:46:12.094+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:46:12.096+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:46:12.097+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:46:12.097+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:46:12.100+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24d7c365] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26b150cd]
2025-08-22T11:46:14.111+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:46:14.113+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24d7c365] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@44f86613]
2025-08-22T11:46:14.322+03:00 TRACE 22484 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@44f86613] for TypeConfiguration
2025-08-22T11:46:14.323+03:00  INFO 22484 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:46:14.881+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:46:14.897+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:15.104+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:15.119+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:46:15.149+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:15.169+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:46:15.170+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:15.212+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:46:15.213+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:15.247+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:46:15.247+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:15.249+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:46:15.250+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:15.251+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:46:15.251+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:15.300+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:15.335+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:46:16.063+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:16.075+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:46:16.076+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.078+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:46:16.079+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.079+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:46:16.080+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.080+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:46:16.081+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.106+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:16.325+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:16.346+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:46:16.347+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.348+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:46:16.349+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.349+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:46:16.349+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.350+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:46:16.350+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.351+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:46:16.352+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.383+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:46:16.384+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.399+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:46:16.399+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.413+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:46:16.414+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.415+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:46:16.416+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.416+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:46:16.417+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:46:16.695+03:00  WARN 22484 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:46:18.186+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:46:18.266+03:00  INFO 22484 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:46:20.717+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2055/0x000002c020cb47d0@24d84d1e with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:46:20.751+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:46:21.749+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:21.756+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:21.759+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:22.015+03:00  INFO 22484 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:46:22.084+03:00  WARN 22484 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:46:22.207+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:46:22.263+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:46:22.271+03:00  INFO 22484 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:46:22.295+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:46:22.295+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:46:22.295+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:46:22.296+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:46:22.296+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:46:22.296+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:46:22.296+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:46:22.832+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:46:22.836+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:46:22.840+03:00  INFO 22484 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:46:22.844+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755852382842 with initial instances count: 1
2025-08-22T11:46:22.853+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:46:22.854+03:00  INFO 22484 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852382854, current=UP, previous=STARTING]
2025-08-22T11:46:22.858+03:00  INFO 22484 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:46:22.936+03:00  INFO 22484 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:46:23.134+03:00 DEBUG 22484 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 64ms, rows: 1
2025-08-22T11:46:23.168+03:00  INFO 22484 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    745000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    365400 nanoseconds spent preparing 1 JDBC statements;
    3246900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    23561100 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    52200 nanoseconds spent executing 1 pre-partial-flushes;
    13900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:46:23.174+03:00  INFO 22484 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.955 seconds (process running for 19.892)
2025-08-22T11:46:23.355+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:46:23.356+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:46:23.359+03:00  INFO 22484 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T11:51:58.519+03:00  INFO 8992 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 8992 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T11:51:58.522+03:00  INFO 8992 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T11:52:00.217+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:52:00.220+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:52:00.278+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.281+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.284+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.286+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.289+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.292+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.295+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.297+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.304+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.307+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T11:52:00.308+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T11:52:00.314+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:52:00.315+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T11:52:00.326+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.326+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.327+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.328+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.328+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.329+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.330+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.331+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.332+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.332+03:00  INFO 8992 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T11:52:00.333+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T11:52:00.341+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T11:52:00.342+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T11:52:00.529+03:00  INFO 8992 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 180 ms. Found 10 JPA repository interfaces.
2025-08-22T11:52:00.881+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T11:52:03.163+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T11:52:03.258+03:00  INFO 8992 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T11:52:03.331+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T11:52:03.473+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d1c8f35
2025-08-22T11:52:03.474+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d1c8f35
2025-08-22T11:52:03.474+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3d1c8f35
2025-08-22T11:52:03.475+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@498f5728
2025-08-22T11:52:03.475+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@498f5728
2025-08-22T11:52:03.475+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@39451d92
2025-08-22T11:52:03.476+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@39451d92
2025-08-22T11:52:03.476+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@46610fc9
2025-08-22T11:52:03.477+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@46610fc9
2025-08-22T11:52:03.478+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fdd5517
2025-08-22T11:52:03.478+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fdd5517
2025-08-22T11:52:03.478+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fdd5517
2025-08-22T11:52:03.479+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2cd877d3
2025-08-22T11:52:03.480+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2cd877d3
2025-08-22T11:52:03.480+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2cd877d3
2025-08-22T11:52:03.480+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6318ff9
2025-08-22T11:52:03.481+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6318ff9
2025-08-22T11:52:03.481+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@69b80603
2025-08-22T11:52:03.482+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5655278d
2025-08-22T11:52:03.482+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5655278d
2025-08-22T11:52:03.482+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2dd46693
2025-08-22T11:52:03.483+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27107a97
2025-08-22T11:52:03.483+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@eb1e868
2025-08-22T11:52:03.483+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@eb1e868
2025-08-22T11:52:03.483+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@eb1e868
2025-08-22T11:52:03.484+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@71a7cf7c
2025-08-22T11:52:03.485+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@71a7cf7c
2025-08-22T11:52:03.485+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@71a7cf7c
2025-08-22T11:52:03.486+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7f49df25
2025-08-22T11:52:03.486+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7f49df25
2025-08-22T11:52:03.487+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7f49df25
2025-08-22T11:52:03.487+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5b29d699
2025-08-22T11:52:03.487+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5b29d699
2025-08-22T11:52:03.488+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5b29d699
2025-08-22T11:52:03.488+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5a5a973c
2025-08-22T11:52:03.489+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5a5a973c
2025-08-22T11:52:03.489+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a5a973c
2025-08-22T11:52:03.490+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@15c96f24
2025-08-22T11:52:03.490+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@15c96f24
2025-08-22T11:52:03.491+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@24482a4f
2025-08-22T11:52:03.491+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@24482a4f
2025-08-22T11:52:03.491+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3140ad41
2025-08-22T11:52:03.492+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3140ad41
2025-08-22T11:52:03.492+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3140ad41
2025-08-22T11:52:03.492+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3f2d2f22
2025-08-22T11:52:03.493+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@61c3d7ac
2025-08-22T11:52:03.493+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@61c3d7ac
2025-08-22T11:52:03.493+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4bc9389
2025-08-22T11:52:03.494+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@30221cfa
2025-08-22T11:52:03.494+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@30221cfa
2025-08-22T11:52:03.494+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@30221cfa
2025-08-22T11:52:03.495+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@662061e3
2025-08-22T11:52:03.495+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1921b43c
2025-08-22T11:52:03.496+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@79e15c4a
2025-08-22T11:52:03.496+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@59845a40
2025-08-22T11:52:03.496+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@59845a40
2025-08-22T11:52:03.496+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3c4e17ea
2025-08-22T11:52:03.497+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3c4e17ea
2025-08-22T11:52:03.497+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@285ac40b
2025-08-22T11:52:03.498+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5b2ade46
2025-08-22T11:52:03.498+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2087c939
2025-08-22T11:52:03.498+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c3a7b84
2025-08-22T11:52:03.498+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@123e9094
2025-08-22T11:52:03.499+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1f6ba47b
2025-08-22T11:52:03.499+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1bb78ae
2025-08-22T11:52:03.499+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1bb78ae
2025-08-22T11:52:03.500+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3ee2d546
2025-08-22T11:52:03.500+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3ee2d546
2025-08-22T11:52:03.500+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@58be583e
2025-08-22T11:52:03.500+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@58be583e
2025-08-22T11:52:03.501+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a34772e
2025-08-22T11:52:03.501+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a34772e
2025-08-22T11:52:03.501+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@401002ce
2025-08-22T11:52:03.502+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@401002ce
2025-08-22T11:52:03.502+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6870a76f
2025-08-22T11:52:03.502+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@42257df7
2025-08-22T11:52:03.502+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b11ff9a
2025-08-22T11:52:03.503+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b11ff9a
2025-08-22T11:52:03.503+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3bd79444
2025-08-22T11:52:03.503+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5671078e
2025-08-22T11:52:03.504+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fd21272
2025-08-22T11:52:03.504+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b4bc73d
2025-08-22T11:52:03.504+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b4bc73d
2025-08-22T11:52:03.505+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4cb91fa4
2025-08-22T11:52:03.505+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12aa2cca
2025-08-22T11:52:03.505+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3dc4ed6f
2025-08-22T11:52:03.505+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3dc4ed6f
2025-08-22T11:52:03.506+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2823b7c5
2025-08-22T11:52:03.506+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2823b7c5
2025-08-22T11:52:03.506+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2ce3d95a
2025-08-22T11:52:03.506+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2ce3d95a
2025-08-22T11:52:03.507+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2ce3d95a
2025-08-22T11:52:03.507+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6f6c6c70
2025-08-22T11:52:03.507+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6f6c6c70
2025-08-22T11:52:03.508+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6f6c6c70
2025-08-22T11:52:03.508+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@75d95b67
2025-08-22T11:52:03.508+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@40f15786
2025-08-22T11:52:03.508+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@72ea6fcb
2025-08-22T11:52:03.509+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@72ea6fcb
2025-08-22T11:52:03.509+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ee9920a
2025-08-22T11:52:03.510+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ee9920a
2025-08-22T11:52:03.510+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ee9920a
2025-08-22T11:52:03.510+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4154ecd3
2025-08-22T11:52:03.510+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b53ce18
2025-08-22T11:52:03.511+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2a666c8e
2025-08-22T11:52:03.511+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a666c8e
2025-08-22T11:52:03.512+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@18adc20a
2025-08-22T11:52:03.512+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18adc20a
2025-08-22T11:52:03.512+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18adc20a
2025-08-22T11:52:03.512+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7e7987b8
2025-08-22T11:52:03.513+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7e7987b8
2025-08-22T11:52:03.513+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6bcfb561
2025-08-22T11:52:03.513+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6bcfb561
2025-08-22T11:52:03.513+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7254a68a
2025-08-22T11:52:03.515+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7254a68a
2025-08-22T11:52:03.519+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@49f9758
2025-08-22T11:52:03.519+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@49f9758
2025-08-22T11:52:03.519+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@36e98434
2025-08-22T11:52:03.520+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36e98434
2025-08-22T11:52:03.520+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@209b4b35
2025-08-22T11:52:03.520+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@77acc95a
2025-08-22T11:52:03.521+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@ff1a5a0
2025-08-22T11:52:03.521+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@75c3584e
2025-08-22T11:52:03.521+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@f7b7720
2025-08-22T11:52:03.532+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@7804a783
2025-08-22T11:52:03.533+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7804a783
2025-08-22T11:52:03.535+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5c13534a
2025-08-22T11:52:03.536+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4d7f9b33
2025-08-22T11:52:03.537+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@782e0844
2025-08-22T11:52:03.537+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@608c7b5b
2025-08-22T11:52:03.537+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2643ed03
2025-08-22T11:52:03.537+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@17d45cfb
2025-08-22T11:52:03.538+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1fb00a6d
2025-08-22T11:52:03.538+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c65ec63
2025-08-22T11:52:03.538+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25f73119
2025-08-22T11:52:03.643+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T11:52:03.726+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T11:52:03.970+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c24639e
2025-08-22T11:52:03.973+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T11:52:04.072+03:00  INFO 8992 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T11:52:04.085+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@c7b100b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@99774ec)
2025-08-22T11:52:04.085+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ec176da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33d2f9d3)
2025-08-22T11:52:04.090+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T11:52:04.090+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T11:52:04.115+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@11d0bff5
2025-08-22T11:52:04.115+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@11d0bff5
2025-08-22T11:52:04.115+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7804a783`
2025-08-22T11:52:04.127+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T11:52:04.128+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:52:04.128+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T11:52:04.141+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:52:04.141+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:52:04.141+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T11:52:04.142+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:52:04.142+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:52:04.142+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T11:52:04.144+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:52:04.144+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:52:04.145+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T11:52:04.148+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b7b099b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5abc488d]
2025-08-22T11:52:05.769+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T11:52:05.770+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b7b099b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@76a90ecb]
2025-08-22T11:52:05.925+03:00 TRACE 8992 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@76a90ecb] for TypeConfiguration
2025-08-22T11:52:05.925+03:00  INFO 8992 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:52:06.495+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T11:52:06.510+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:06.679+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:06.690+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:52:06.722+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:06.740+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T11:52:06.740+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:06.769+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T11:52:06.769+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:06.808+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:52:06.809+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:06.810+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:52:06.811+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:06.811+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T11:52:06.811+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:06.860+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:06.887+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T11:52:07.684+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:07.696+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:52:07.697+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:07.698+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:52:07.698+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:07.699+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:52:07.699+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:07.700+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T11:52:07.700+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:07.730+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:08.009+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:08.034+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:52:08.034+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.036+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:52:08.036+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.037+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:52:08.037+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.038+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:52:08.038+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.039+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T11:52:08.039+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.076+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T11:52:08.077+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.089+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T11:52:08.090+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.108+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T11:52:08.109+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.110+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T11:52:08.110+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.111+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T11:52:08.111+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T11:52:08.437+03:00  WARN 8992 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T11:52:09.927+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T11:52:09.994+03:00  INFO 8992 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T11:52:12.140+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2052/0x000001df81c5e2e0@1b406bc2 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T11:52:12.170+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T11:52:13.183+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:13.189+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:13.194+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:13.394+03:00  INFO 8992 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T11:52:13.460+03:00  WARN 8992 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T11:52:13.583+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T11:52:13.633+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T11:52:13.640+03:00  INFO 8992 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T11:52:13.654+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T11:52:13.654+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T11:52:13.655+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T11:52:13.655+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T11:52:13.655+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T11:52:13.655+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T11:52:13.655+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T11:52:14.259+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T11:52:14.265+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T11:52:14.272+03:00  INFO 8992 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T11:52:14.280+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755852734278 with initial instances count: 1
2025-08-22T11:52:14.288+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T11:52:14.290+03:00  INFO 8992 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852734290, current=UP, previous=STARTING]
2025-08-22T11:52:14.294+03:00  INFO 8992 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:52:14.395+03:00  INFO 8992 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:52:14.589+03:00 DEBUG 8992 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 44ms, rows: 1
2025-08-22T11:52:14.609+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    691800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    301600 nanoseconds spent preparing 1 JDBC statements;
    2890300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    12407000 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    31500 nanoseconds spent executing 1 pre-partial-flushes;
    13900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:14.614+03:00  INFO 8992 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.672 seconds (process running for 18.444)
2025-08-22T11:52:14.789+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T11:52:14.790+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T11:52:14.793+03:00  INFO 8992 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T11:52:14.937+03:00  INFO 8992 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T11:52:14.994+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T11:52:14.994+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755852734994, current=DOWN, previous=UP]
2025-08-22T11:52:14.994+03:00  INFO 8992 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T11:52:15.000+03:00  INFO 8992 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T11:52:15.020+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T11:52:15.022+03:00 TRACE 8992 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@76a90ecb] for TypeConfiguration
2025-08-22T11:52:15.022+03:00 DEBUG 8992 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@29bee916] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@76a90ecb]
2025-08-22T11:52:15.026+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T11:52:15.039+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T11:52:15.041+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T11:52:18.056+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T11:52:18.073+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T11:52:18.073+03:00  INFO 8992 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T12:37:40.074+03:00  INFO 9428 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 9428 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:37:40.078+03:00  INFO 9428 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:37:41.583+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:37:41.586+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:37:41.643+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.645+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.648+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.651+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.653+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.656+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.658+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.661+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.664+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.667+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:37:41.668+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 69 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:37:41.674+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:37:41.675+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:37:41.686+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.687+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.687+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.688+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.688+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.689+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.689+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.690+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.690+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.691+03:00  INFO 9428 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:37:41.692+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:37:41.700+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:37:41.701+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:37:41.904+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 195 ms. Found 10 JPA repository interfaces.
2025-08-22T12:37:42.253+03:00  INFO 9428 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:37:42.767+03:00  INFO 9428 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:37:42.845+03:00  INFO 9428 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:37:42.899+03:00  INFO 9428 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:37:43.024+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T12:37:43.024+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T12:37:43.024+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T12:37:43.025+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77f529a6
2025-08-22T12:37:43.025+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77f529a6
2025-08-22T12:37:43.026+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7d47b021
2025-08-22T12:37:43.026+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7d47b021
2025-08-22T12:37:43.026+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T12:37:43.026+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T12:37:43.027+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:37:43.028+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:37:43.028+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:37:43.029+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:37:43.030+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:37:43.030+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:37:43.030+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:37:43.030+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:37:43.031+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:37:43.031+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:37:43.031+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:37:43.032+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T12:37:43.032+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:37:43.033+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:37:43.033+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:37:43.034+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:37:43.036+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:37:43.036+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:37:43.037+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:37:43.037+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:37:43.037+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:37:43.037+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:37:43.038+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:37:43.038+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:37:43.038+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:37:43.039+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:37:43.039+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:37:43.039+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:37:43.040+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:37:43.040+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:37:43.040+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:37:43.040+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:37:43.040+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:37:43.041+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:37:43.041+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:37:43.041+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:37:43.041+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:37:43.041+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:37:43.042+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:37:43.042+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:37:43.042+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:37:43.042+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:37:43.043+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:37:43.043+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:37:43.043+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:37:43.043+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:37:43.044+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:37:43.044+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:37:43.044+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:37:43.044+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:37:43.044+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:37:43.045+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:37:43.045+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:37:43.045+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:37:43.045+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:37:43.046+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:37:43.046+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:37:43.046+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:37:43.046+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:37:43.046+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:37:43.047+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:37:43.047+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:37:43.047+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:37:43.047+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:37:43.048+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:37:43.048+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:37:43.048+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:37:43.048+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:37:43.049+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:37:43.049+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:37:43.049+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:37:43.050+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:37:43.050+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:37:43.050+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:37:43.050+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:37:43.051+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:37:43.051+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:37:43.051+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:37:43.052+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:37:43.052+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:37:43.052+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:37:43.052+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:37:43.053+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:37:43.053+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:37:43.053+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:37:43.053+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:37:43.053+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:37:43.054+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:37:43.054+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:37:43.054+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:37:43.054+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:37:43.055+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:37:43.055+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:37:43.055+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:37:43.055+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:37:43.056+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:37:43.056+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:37:43.056+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:37:43.056+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:37:43.056+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:37:43.057+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:37:43.057+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:37:43.057+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:37:43.057+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:37:43.057+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:37:43.058+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:37:43.058+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:37:43.058+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:37:43.059+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:37:43.059+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:37:43.059+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:37:43.059+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:37:43.060+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:37:43.060+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:37:43.060+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:37:43.070+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3ae91ab3
2025-08-22T12:37:43.071+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ae91ab3
2025-08-22T12:37:43.073+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3a4cb483
2025-08-22T12:37:43.073+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4d770bcd
2025-08-22T12:37:43.074+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@fe156f4
2025-08-22T12:37:43.074+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@79b4cff
2025-08-22T12:37:43.074+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@58ac0823
2025-08-22T12:37:43.074+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d705998
2025-08-22T12:37:43.074+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@28a3fc34
2025-08-22T12:37:43.074+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7582a16b
2025-08-22T12:37:43.075+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4dd752e8
2025-08-22T12:37:43.408+03:00  INFO 9428 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:37:43.460+03:00  INFO 9428 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:37:43.682+03:00  INFO 9428 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@511a307e
2025-08-22T12:37:43.685+03:00  INFO 9428 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:37:43.794+03:00  INFO 9428 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:37:43.808+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@32f45e15) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4e7151b3)
2025-08-22T12:37:43.809+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ef7ae2f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1bcf2c64)
2025-08-22T12:37:43.814+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:37:43.815+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:37:43.831+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1a22c1ba
2025-08-22T12:37:43.831+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1a22c1ba
2025-08-22T12:37:43.832+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3ae91ab3`
2025-08-22T12:37:43.840+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:37:43.840+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:37:43.841+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:37:43.848+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:37:43.848+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:37:43.848+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:37:43.848+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:37:43.849+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:37:43.849+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:37:43.850+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:37:43.851+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:37:43.851+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:37:43.854+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b30b627] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fa9971f]
2025-08-22T12:37:45.342+03:00  INFO 9428 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:37:45.343+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b30b627] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1fcb01f8]
2025-08-22T12:37:45.487+03:00 TRACE 9428 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1fcb01f8] for TypeConfiguration
2025-08-22T12:37:45.488+03:00  INFO 9428 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:37:45.509+03:00  WARN 9428 --- [DataStoreService] [Test worker] o.s.w.c.s.GenericWebApplicationContext   : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
2025-08-22T12:37:45.510+03:00  INFO 9428 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:37:45.511+03:00 TRACE 9428 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1fcb01f8] for TypeConfiguration
2025-08-22T12:37:45.511+03:00 DEBUG 9428 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@427c9a13] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1fcb01f8]
2025-08-22T12:37:45.513+03:00  INFO 9428 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T12:37:45.522+03:00  INFO 9428 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T12:37:45.586+03:00  INFO 9428 --- [DataStoreService] [Test worker] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-22T12:37:45.647+03:00 ERROR 9428 --- [DataStoreService] [Test worker] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:515) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.springframework.util.PlaceholderResolutionException: Could not resolve placeholder 'application.custom.jwt.test.clientSecret' in value "${application.custom.jwt.test.clientSecret}"
	at org.springframework.util.PlaceholderResolutionException.withValue(PlaceholderResolutionException.java:81) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser$ParsedValue.resolve(PlaceholderParser.java:423) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser.replacePlaceholders(PlaceholderParser.java:128) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:118) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:114) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:293) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:264) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:186) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:971) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1650) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.9.jar:6.2.9]
	... 117 common frames omitted

2025-08-22T12:37:45.673+03:00  WARN 9428 --- [DataStoreService] [Test worker] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.goglotek.frauddetector.datastoreservice.AbstractTest@19984625]

java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@669ae205 testClass = com.goglotek.frauddetector.datastoreservice.AbstractTest, locations = [], classes = [com.goglotek.frauddetector.datastoreservice.DataStoreServiceApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@eb6449b, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@5dbe30be, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1da881, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2f058b8a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@f9d87b, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@5e8f9e2d, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@3ebff828, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@cbfd06dd], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:515) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	... 93 common frames omitted
Caused by: org.springframework.util.PlaceholderResolutionException: Could not resolve placeholder 'application.custom.jwt.test.clientSecret' in value "${application.custom.jwt.test.clientSecret}"
	at org.springframework.util.PlaceholderResolutionException.withValue(PlaceholderResolutionException.java:81) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser$ParsedValue.resolve(PlaceholderParser.java:423) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser.replacePlaceholders(PlaceholderParser.java:128) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:118) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:114) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:293) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:264) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:186) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:971) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1650) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.9.jar:6.2.9]
	... 117 common frames omitted

2025-08-22T12:40:22.973+03:00  INFO 3708 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 3708 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:40:22.977+03:00  INFO 3708 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:40:24.547+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:40:24.549+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:40:24.602+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.605+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.608+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.610+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.613+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.615+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.618+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.620+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.624+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.626+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:40:24.627+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 69 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:40:24.633+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:40:24.634+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:40:24.649+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.649+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.650+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.651+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.651+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.652+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.652+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.653+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.654+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.654+03:00  INFO 3708 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:40:24.655+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:40:24.665+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:40:24.666+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:40:24.858+03:00  INFO 3708 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 185 ms. Found 10 JPA repository interfaces.
2025-08-22T12:40:25.197+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:40:25.719+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:40:25.793+03:00  INFO 3708 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:40:25.841+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:40:25.951+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:40:25.952+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:40:25.952+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:40:25.952+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:40:25.952+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:40:25.953+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:40:25.953+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:40:25.953+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:40:25.954+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:40:25.954+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:40:25.954+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:40:25.955+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:40:25.956+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:40:25.956+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:40:25.956+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:40:25.957+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:40:25.957+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:40:25.957+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:40:25.957+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:40:25.958+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:40:25.958+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:40:25.958+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:40:25.959+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:40:25.959+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:40:25.959+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:40:25.960+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:40:25.960+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:40:25.960+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:40:25.960+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:40:25.961+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:40:25.961+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:40:25.961+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:40:25.962+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:40:25.962+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:40:25.962+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:40:25.962+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:40:25.963+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:40:25.963+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:40:25.963+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:40:25.964+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:40:25.964+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:40:25.964+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:40:25.964+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:40:25.965+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:40:25.965+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:40:25.965+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:40:25.965+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:40:25.966+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:40:25.966+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:40:25.966+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:40:25.967+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:40:25.967+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:40:25.967+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:40:25.967+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:40:25.968+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:40:25.968+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:40:25.968+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:40:25.969+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:40:25.969+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:40:25.969+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:40:25.969+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:40:25.970+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:40:25.970+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:40:25.971+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:40:25.971+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:40:25.971+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:40:25.971+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:40:25.972+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:40:25.972+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:40:25.972+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:40:25.973+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:40:25.973+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:40:25.973+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:40:25.974+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:40:25.974+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:40:25.975+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:40:25.975+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:40:25.975+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:40:25.975+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:40:25.976+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:40:25.976+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:40:25.976+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:40:25.977+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:40:25.977+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:40:25.977+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:40:25.978+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:40:25.978+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:40:25.978+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:40:25.978+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:40:25.979+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:40:25.979+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:40:25.979+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:40:25.979+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:40:25.979+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:40:25.980+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:40:25.980+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:40:25.980+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:40:25.980+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:40:25.980+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:40:25.981+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:40:25.981+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:40:25.981+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:40:25.981+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:40:25.981+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:40:25.981+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:40:25.981+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:40:25.982+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:40:25.982+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:40:25.982+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:40:25.982+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:40:25.982+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:40:25.982+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:40:25.983+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:40:25.983+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:40:25.983+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:40:25.983+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:40:25.984+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@391e85df
2025-08-22T12:40:25.992+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@57867d96
2025-08-22T12:40:25.992+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@57867d96
2025-08-22T12:40:25.994+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@58ac0823
2025-08-22T12:40:25.995+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2d705998
2025-08-22T12:40:25.995+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@28a3fc34
2025-08-22T12:40:25.995+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7582a16b
2025-08-22T12:40:25.995+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4dd752e8
2025-08-22T12:40:25.996+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@62c46e53
2025-08-22T12:40:25.996+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@55317c63
2025-08-22T12:40:25.996+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35d81657
2025-08-22T12:40:25.996+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42ef5216
2025-08-22T12:40:26.324+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:40:26.365+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:40:26.593+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23cb8fcb
2025-08-22T12:40:26.598+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:40:26.694+03:00  INFO 3708 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:40:26.704+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b5bddfe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4fe3f9ef)
2025-08-22T12:40:26.705+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c86b0ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e481512)
2025-08-22T12:40:26.710+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:40:26.710+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:40:26.735+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2941631f
2025-08-22T12:40:26.736+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2941631f
2025-08-22T12:40:26.736+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@57867d96`
2025-08-22T12:40:26.744+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:40:26.745+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:40:26.745+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:40:26.750+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:40:26.750+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:40:26.750+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:40:26.750+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:40:26.750+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:40:26.751+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:40:26.752+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:40:26.753+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:40:26.753+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:40:26.755+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46eb2260] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@556944cd]
2025-08-22T12:40:28.247+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:40:28.249+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46eb2260] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4ee41c66]
2025-08-22T12:40:28.418+03:00 TRACE 3708 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4ee41c66] for TypeConfiguration
2025-08-22T12:40:28.419+03:00  INFO 3708 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:40:28.825+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T12:40:28.838+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:28.964+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:28.982+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T12:40:29.729+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:29.732+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:29.752+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:29.760+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:40:29.784+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.800+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:40:29.801+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.825+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T12:40:29.825+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.846+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:40:29.846+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.848+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:40:29.848+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.848+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:40:29.849+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.874+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:29.884+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:29.892+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:40:29.892+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.894+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:40:29.894+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.895+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:40:29.895+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.896+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:40:29.897+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.916+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:29.926+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:29.942+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:40:29.943+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.944+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:40:29.944+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.948+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:40:29.951+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.952+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:40:29.952+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.953+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:40:29.953+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.985+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T12:40:29.986+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:29.996+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T12:40:29.997+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:30.017+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T12:40:30.017+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:30.018+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T12:40:30.019+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:30.019+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T12:40:30.019+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:40:30.200+03:00  WARN 3708 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T12:40:31.267+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T12:40:31.319+03:00  INFO 3708 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T12:40:33.457+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2036/0x000001812ec4c2e8@2d7ee91c with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T12:40:33.485+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T12:40:34.595+03:00  INFO 3708 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T12:40:34.672+03:00  WARN 3708 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T12:40:34.782+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T12:40:34.836+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T12:40:34.843+03:00  INFO 3708 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T12:40:34.860+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T12:40:34.860+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T12:40:34.861+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T12:40:34.861+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T12:40:34.861+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T12:40:34.861+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T12:40:34.861+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T12:40:35.431+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T12:40:35.436+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T12:40:35.443+03:00  INFO 3708 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T12:40:35.448+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755855635445 with initial instances count: 1
2025-08-22T12:40:35.455+03:00  INFO 3708 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T12:40:35.457+03:00  INFO 3708 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755855635457, current=UP, previous=STARTING]
2025-08-22T12:40:35.460+03:00  INFO 3708 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:40:35.545+03:00  INFO 3708 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:40:35.749+03:00 DEBUG 3708 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 76ms, rows: 1
2025-08-22T12:40:35.787+03:00  INFO 3708 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    835000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    320400 nanoseconds spent preparing 1 JDBC statements;
    3491500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    23171300 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    50800 nanoseconds spent executing 1 pre-partial-flushes;
    23000 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:40:35.795+03:00  INFO 3708 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 13.366 seconds (process running for 15.315)
2025-08-22T12:41:10.606+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T12:41:10.607+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755855670607, current=DOWN, previous=UP]
2025-08-22T12:41:10.607+03:00  INFO 3708 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:41:10.623+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:41:10.625+03:00  INFO 3708 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:41:10.625+03:00 TRACE 3708 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4ee41c66] for TypeConfiguration
2025-08-22T12:41:10.625+03:00 DEBUG 3708 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@52686c44] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4ee41c66]
2025-08-22T12:41:10.627+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T12:41:10.633+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T12:41:10.635+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T12:41:13.640+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T12:41:13.658+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T12:41:13.659+03:00  INFO 3708 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T12:43:39.727+03:00  INFO 13296 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 13296 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:43:39.731+03:00  INFO 13296 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:43:41.292+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:43:41.295+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:43:41.351+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.354+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.356+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.359+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.362+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.364+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.367+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.370+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.374+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.378+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:43:41.380+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 74 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:43:41.387+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:43:41.388+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:43:41.397+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.398+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.398+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.399+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.400+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.400+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.401+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.401+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.402+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.402+03:00  INFO 13296 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:43:41.402+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:43:41.414+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:43:41.416+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:43:41.617+03:00  INFO 13296 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 195 ms. Found 10 JPA repository interfaces.
2025-08-22T12:43:41.957+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:43:42.503+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:43:42.604+03:00  INFO 13296 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:43:42.657+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:43:42.767+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:43:42.768+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:43:42.768+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:43:42.769+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:43:42.769+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:43:42.769+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:43:42.770+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:43:42.770+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:43:42.771+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:43:42.771+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:43:42.772+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:43:42.772+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:43:42.773+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:43:42.773+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:43:42.774+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:43:42.774+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:43:42.774+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:43:42.774+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:43:42.775+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:43:42.775+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:43:42.775+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:43:42.776+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:43:42.776+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:43:42.776+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:43:42.776+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:43:42.777+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:43:42.777+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:43:42.777+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:43:42.778+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:43:42.778+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:43:42.778+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:43:42.779+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:43:42.779+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:43:42.780+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:43:42.780+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:43:42.780+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:43:42.780+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:43:42.781+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:43:42.781+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:43:42.781+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:43:42.781+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:43:42.781+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:43:42.782+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:43:42.782+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:43:42.782+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:43:42.782+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:43:42.783+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:43:42.783+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:43:42.783+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:43:42.783+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:43:42.784+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:43:42.784+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:43:42.785+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:43:42.785+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:43:42.785+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:43:42.786+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:43:42.786+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:43:42.786+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:43:42.787+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:43:42.787+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:43:42.787+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:43:42.788+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:43:42.788+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:43:42.788+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:43:42.789+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:43:42.789+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:43:42.789+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:43:42.789+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:43:42.790+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:43:42.790+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:43:42.790+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:43:42.791+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:43:42.791+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:43:42.791+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:43:42.791+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:43:42.792+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:43:42.792+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:43:42.792+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:43:42.793+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:43:42.793+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:43:42.793+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:43:42.793+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:43:42.794+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:43:42.794+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:43:42.794+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:43:42.795+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:43:42.795+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:43:42.795+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:43:42.796+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:43:42.796+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:43:42.796+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:43:42.796+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:43:42.797+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:43:42.797+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:43:42.797+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:43:42.797+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:43:42.798+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:43:42.798+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:43:42.798+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:43:42.798+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:43:42.799+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:43:42.799+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:43:42.799+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:43:42.799+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:43:42.800+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:43:42.800+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:43:42.800+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:43:42.801+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:43:42.801+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:43:42.801+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:43:42.801+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:43:42.801+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:43:42.802+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:43:42.802+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:43:42.802+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:43:42.802+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:43:42.802+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:43:42.803+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:43:42.803+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:43:42.803+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T12:43:42.803+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T12:43:42.803+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:43:42.804+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@391e85df
2025-08-22T12:43:42.804+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@48c3a0ef
2025-08-22T12:43:42.811+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1a7a21d0
2025-08-22T12:43:42.811+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1a7a21d0
2025-08-22T12:43:42.813+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2d705998
2025-08-22T12:43:42.814+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@28a3fc34
2025-08-22T12:43:42.814+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7582a16b
2025-08-22T12:43:42.814+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4dd752e8
2025-08-22T12:43:42.814+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@62c46e53
2025-08-22T12:43:42.815+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@55317c63
2025-08-22T12:43:42.815+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@35d81657
2025-08-22T12:43:42.815+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@42ef5216
2025-08-22T12:43:42.816+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3180aee
2025-08-22T12:43:43.114+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:43:43.158+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:43:43.366+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25a2f432
2025-08-22T12:43:43.369+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:43:43.468+03:00  INFO 13296 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:43:43.484+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4fe3f9ef) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2c86b0ea)
2025-08-22T12:43:43.485+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e481512) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ba98508)
2025-08-22T12:43:43.490+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:43:43.491+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:43:43.505+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6130a6f5
2025-08-22T12:43:43.505+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6130a6f5
2025-08-22T12:43:43.505+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1a7a21d0`
2025-08-22T12:43:43.513+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:43:43.513+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:43:43.513+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:43:43.520+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:43:43.521+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:43:43.521+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:43:43.521+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:43:43.521+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:43:43.522+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:43:43.523+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:43:43.524+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:43:43.524+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:43:43.527+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@556944cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@370a935f]
2025-08-22T12:43:45.164+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:43:45.166+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@556944cd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@35fea0cd]
2025-08-22T12:43:45.344+03:00 TRACE 13296 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@35fea0cd] for TypeConfiguration
2025-08-22T12:43:45.345+03:00  INFO 13296 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:43:45.730+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T12:43:45.741+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:45.861+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:45.880+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T12:43:46.759+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:46.762+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:46.783+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:46.792+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:43:46.812+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.826+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:43:46.826+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.851+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T12:43:46.852+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.875+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:43:46.876+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.877+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:43:46.878+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.903+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:46.913+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:46.921+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:43:46.921+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.923+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:43:46.923+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.923+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:43:46.924+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.925+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:43:46.926+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.953+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:46.965+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:46.985+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:43:46.985+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.986+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:43:46.987+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.987+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:43:46.988+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.988+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:43:46.988+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:46.989+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:43:46.989+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:47.019+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T12:43:47.019+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:47.027+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T12:43:47.027+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:47.037+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T12:43:47.037+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:47.038+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T12:43:47.038+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:47.042+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T12:43:47.042+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:43:47.265+03:00  WARN 13296 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T12:43:48.496+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T12:43:48.561+03:00  INFO 13296 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T12:43:51.635+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2036/0x0000028a9ac45eb0@5c961ce9 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T12:43:51.660+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T12:43:52.722+03:00  INFO 13296 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T12:43:52.788+03:00  WARN 13296 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T12:43:52.903+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T12:43:52.950+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T12:43:52.957+03:00  INFO 13296 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T12:43:52.974+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T12:43:52.974+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T12:43:52.974+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T12:43:52.974+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T12:43:52.975+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T12:43:52.975+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T12:43:52.975+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T12:43:53.499+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T12:43:53.503+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T12:43:53.506+03:00  INFO 13296 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T12:43:53.511+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755855833509 with initial instances count: 1
2025-08-22T12:43:53.517+03:00  INFO 13296 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T12:43:53.518+03:00  INFO 13296 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755855833518, current=UP, previous=STARTING]
2025-08-22T12:43:53.521+03:00  INFO 13296 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:43:53.591+03:00  INFO 13296 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:43:53.787+03:00 DEBUG 13296 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 65ms, rows: 1
2025-08-22T12:43:53.815+03:00  INFO 13296 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    709800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    333100 nanoseconds spent preparing 1 JDBC statements;
    3284200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    17584600 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    35100 nanoseconds spent executing 1 pre-partial-flushes;
    14100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:43:53.821+03:00  INFO 13296 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 14.634 seconds (process running for 16.539)
2025-08-22T12:44:39.745+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T12:44:39.745+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755855879745, current=DOWN, previous=UP]
2025-08-22T12:44:39.745+03:00  INFO 13296 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:44:39.749+03:00  INFO 13296 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:44:39.757+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:44:39.760+03:00 TRACE 13296 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@35fea0cd] for TypeConfiguration
2025-08-22T12:44:39.760+03:00 DEBUG 13296 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3a5a3ec1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@35fea0cd]
2025-08-22T12:44:39.762+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T12:44:39.773+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T12:44:39.775+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T12:44:42.780+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T12:44:42.797+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T12:44:42.797+03:00  INFO 13296 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T12:49:04.042+03:00  INFO 18468 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 18468 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:49:04.046+03:00  INFO 18468 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:49:05.651+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:49:05.654+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:49:05.719+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.722+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.725+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.727+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.730+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.732+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.735+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.737+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.739+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.742+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:49:05.743+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 80 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:49:05.749+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:49:05.750+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:49:05.764+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.765+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.766+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.766+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.767+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.768+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.768+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.769+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.770+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.770+03:00  INFO 18468 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:49:05.771+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:49:05.781+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:49:05.783+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:49:05.985+03:00  INFO 18468 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 196 ms. Found 10 JPA repository interfaces.
2025-08-22T12:49:06.323+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:49:06.882+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:49:06.979+03:00  INFO 18468 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:49:07.033+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:49:07.144+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T12:49:07.145+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T12:49:07.145+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T12:49:07.145+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:49:07.146+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:49:07.146+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:49:07.147+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:49:07.147+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:49:07.147+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:49:07.148+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:49:07.148+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:49:07.149+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:49:07.149+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:49:07.150+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:49:07.150+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:49:07.150+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T12:49:07.151+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T12:49:07.151+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:49:07.151+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:49:07.152+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:49:07.152+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:49:07.152+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:49:07.153+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:49:07.153+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:49:07.153+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:49:07.153+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:49:07.154+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:49:07.154+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:49:07.154+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:49:07.154+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:49:07.155+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:49:07.155+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:49:07.155+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:49:07.155+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:49:07.156+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:49:07.156+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:49:07.156+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:49:07.156+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:49:07.156+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:49:07.157+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:49:07.157+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:49:07.157+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:49:07.157+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:49:07.158+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:49:07.158+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:49:07.158+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:49:07.158+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:49:07.159+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:49:07.159+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:49:07.159+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:49:07.159+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:49:07.160+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:49:07.160+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:49:07.160+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:49:07.160+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:49:07.161+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:49:07.161+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:49:07.161+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:49:07.161+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:49:07.162+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:49:07.162+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:49:07.162+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:49:07.162+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:49:07.163+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:49:07.163+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:49:07.163+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:49:07.164+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:49:07.164+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:49:07.164+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:49:07.164+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:49:07.165+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:49:07.165+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:49:07.165+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:49:07.165+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:49:07.165+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:49:07.166+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:49:07.166+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:49:07.166+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:49:07.167+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:49:07.167+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:49:07.167+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:49:07.167+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:49:07.168+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:49:07.168+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:49:07.168+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:49:07.169+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:49:07.169+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:49:07.169+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:49:07.170+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:49:07.170+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:49:07.170+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:49:07.171+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:49:07.171+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:49:07.171+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:49:07.171+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:49:07.172+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:49:07.172+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:49:07.172+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:49:07.172+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:49:07.173+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:49:07.173+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:49:07.173+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:49:07.173+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:49:07.173+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:49:07.173+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:49:07.174+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:49:07.174+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:49:07.174+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:49:07.174+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:49:07.174+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:49:07.175+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:49:07.175+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:49:07.175+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:49:07.175+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:49:07.176+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:49:07.176+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:49:07.176+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:49:07.176+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:49:07.177+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:49:07.177+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:49:07.177+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:49:07.177+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T12:49:07.177+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T12:49:07.177+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:49:07.183+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@25c8c71e
2025-08-22T12:49:07.184+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25c8c71e
2025-08-22T12:49:07.186+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@79b4cff
2025-08-22T12:49:07.186+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58ac0823
2025-08-22T12:49:07.186+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2d705998
2025-08-22T12:49:07.186+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@28a3fc34
2025-08-22T12:49:07.187+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7582a16b
2025-08-22T12:49:07.187+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4dd752e8
2025-08-22T12:49:07.187+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62c46e53
2025-08-22T12:49:07.187+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@55317c63
2025-08-22T12:49:07.187+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@35d81657
2025-08-22T12:49:07.521+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:49:07.566+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:49:07.801+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2352c21f
2025-08-22T12:49:07.803+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:49:07.892+03:00  INFO 18468 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:49:07.901+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1bcf2c64) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b5bddfe)
2025-08-22T12:49:07.902+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fe3f9ef) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c86b0ea)
2025-08-22T12:49:07.905+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:49:07.905+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:49:07.925+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@25e24908
2025-08-22T12:49:07.926+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25e24908
2025-08-22T12:49:07.926+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@25c8c71e`
2025-08-22T12:49:07.934+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:49:07.935+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:49:07.935+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:49:07.941+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:49:07.941+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:49:07.942+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:49:07.942+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:49:07.942+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:49:07.942+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:49:07.944+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:49:07.945+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:49:07.946+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:49:07.949+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684430c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46eb2260]
2025-08-22T12:49:09.697+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:49:09.699+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684430c1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@9670873]
2025-08-22T12:49:09.886+03:00 TRACE 18468 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@9670873] for TypeConfiguration
2025-08-22T12:49:09.886+03:00  INFO 18468 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:49:10.277+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T12:49:10.289+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:10.411+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:10.430+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T12:49:11.158+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:11.161+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:11.182+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:11.191+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:49:11.214+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.227+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:49:11.228+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.250+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T12:49:11.250+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.275+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:49:11.276+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.277+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:49:11.277+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.300+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:11.308+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:11.315+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:49:11.316+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.318+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:49:11.318+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.318+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:49:11.319+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.319+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:49:11.320+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.337+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:11.352+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:11.377+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:49:11.378+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.380+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:49:11.380+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.380+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:49:11.381+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.382+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:49:11.382+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.382+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:49:11.383+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.421+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T12:49:11.422+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.433+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T12:49:11.434+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.445+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T12:49:11.445+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.446+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T12:49:11.447+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.447+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T12:49:11.447+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:49:11.629+03:00  WARN 18468 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T12:49:12.840+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T12:49:12.894+03:00  INFO 18468 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T12:49:15.195+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2036/0x0000014c01c4ad70@7e4d2884 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T12:49:15.220+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T12:49:16.387+03:00  INFO 18468 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T12:49:16.468+03:00  WARN 18468 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T12:49:16.606+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T12:49:16.659+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T12:49:16.668+03:00  INFO 18468 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T12:49:16.689+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T12:49:16.689+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T12:49:16.690+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T12:49:16.690+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T12:49:16.690+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T12:49:16.690+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T12:49:16.691+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T12:49:17.233+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T12:49:17.236+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T12:49:17.241+03:00  INFO 18468 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T12:49:17.244+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755856157242 with initial instances count: 1
2025-08-22T12:49:17.252+03:00  INFO 18468 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T12:49:17.253+03:00  INFO 18468 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856157253, current=UP, previous=STARTING]
2025-08-22T12:49:17.257+03:00  INFO 18468 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:49:17.374+03:00  INFO 18468 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:49:17.581+03:00 DEBUG 18468 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 88ms, rows: 1
2025-08-22T12:49:17.612+03:00  INFO 18468 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    772400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    302200 nanoseconds spent preparing 1 JDBC statements;
    3517600 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    20613100 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    62400 nanoseconds spent executing 1 pre-partial-flushes;
    24400 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:49:17.620+03:00  INFO 18468 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 14.121 seconds (process running for 16.058)
2025-08-22T12:49:55.138+03:00  WARN 18468 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47s234ms546µs700ns).
2025-08-22T12:50:00.936+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T12:50:00.937+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856200937, current=DOWN, previous=UP]
2025-08-22T12:50:00.937+03:00  INFO 18468 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:50:00.945+03:00  INFO 18468 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:50:00.967+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:50:00.968+03:00 TRACE 18468 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@9670873] for TypeConfiguration
2025-08-22T12:50:00.968+03:00 DEBUG 18468 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@34915368] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9670873]
2025-08-22T12:50:00.972+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T12:50:00.978+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T12:50:00.979+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T12:50:03.981+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T12:50:03.999+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T12:50:03.999+03:00  INFO 18468 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T12:50:41.301+03:00  INFO 2612 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 2612 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:50:41.306+03:00  INFO 2612 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:50:42.899+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:50:42.902+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:50:42.962+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.965+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.968+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.970+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.973+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.976+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.978+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.981+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.983+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.985+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:50:42.987+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 74 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:50:42.994+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:50:42.995+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:50:43.008+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.008+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.009+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.010+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.010+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.011+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.012+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.012+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.013+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.014+03:00  INFO 2612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:50:43.014+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:50:43.025+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:50:43.031+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:50:43.227+03:00  INFO 2612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 187 ms. Found 10 JPA repository interfaces.
2025-08-22T12:50:43.579+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:50:44.129+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:50:44.205+03:00  INFO 2612 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:50:44.254+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:50:44.362+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4eb48298
2025-08-22T12:50:44.363+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4eb48298
2025-08-22T12:50:44.363+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4eb48298
2025-08-22T12:50:44.363+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2d3bb944
2025-08-22T12:50:44.364+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2d3bb944
2025-08-22T12:50:44.364+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1e429f56
2025-08-22T12:50:44.364+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1e429f56
2025-08-22T12:50:44.364+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6dbeaef8
2025-08-22T12:50:44.365+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6dbeaef8
2025-08-22T12:50:44.365+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T12:50:44.366+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T12:50:44.366+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T12:50:44.367+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@77f529a6
2025-08-22T12:50:44.368+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@77f529a6
2025-08-22T12:50:44.368+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@77f529a6
2025-08-22T12:50:44.368+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:50:44.369+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:50:44.369+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:50:44.369+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:50:44.369+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:50:44.370+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:50:44.370+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:50:44.370+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:50:44.371+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:50:44.371+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:50:44.371+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:50:44.372+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:50:44.372+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T12:50:44.372+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T12:50:44.372+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T12:50:44.373+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T12:50:44.373+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:50:44.373+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:50:44.373+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:50:44.374+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:50:44.374+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:50:44.374+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:50:44.375+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:50:44.375+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:50:44.376+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:50:44.376+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:50:44.376+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:50:44.376+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:50:44.377+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:50:44.377+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:50:44.377+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:50:44.378+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:50:44.378+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:50:44.378+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:50:44.378+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:50:44.379+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:50:44.379+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:50:44.379+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:50:44.379+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:50:44.380+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:50:44.380+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:50:44.380+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:50:44.380+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:50:44.380+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:50:44.381+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:50:44.381+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:50:44.381+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:50:44.382+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:50:44.382+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:50:44.382+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:50:44.383+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:50:44.383+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:50:44.383+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:50:44.383+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:50:44.383+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:50:44.384+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:50:44.384+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:50:44.384+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:50:44.385+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:50:44.385+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:50:44.386+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:50:44.386+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:50:44.386+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:50:44.387+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:50:44.387+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:50:44.387+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:50:44.387+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:50:44.387+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:50:44.388+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:50:44.388+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:50:44.388+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:50:44.388+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:50:44.389+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:50:44.389+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:50:44.389+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:50:44.389+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:50:44.389+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:50:44.390+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:50:44.390+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:50:44.390+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:50:44.390+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:50:44.391+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:50:44.391+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:50:44.391+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:50:44.391+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:50:44.391+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:50:44.392+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:50:44.392+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:50:44.392+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:50:44.393+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:50:44.393+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:50:44.393+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:50:44.393+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:50:44.393+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:50:44.394+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:50:44.394+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:50:44.394+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:50:44.394+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:50:44.394+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:50:44.395+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:50:44.395+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:50:44.395+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:50:44.395+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:50:44.396+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:50:44.396+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:50:44.396+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:50:44.396+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:50:44.397+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:50:44.397+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:50:44.403+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@2d3111a1
2025-08-22T12:50:44.403+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2d3111a1
2025-08-22T12:50:44.405+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6821c63c
2025-08-22T12:50:44.406+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@c2f7c63
2025-08-22T12:50:44.406+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4790b897
2025-08-22T12:50:44.406+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5cba890e
2025-08-22T12:50:44.406+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3a4cb483
2025-08-22T12:50:44.407+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4d770bcd
2025-08-22T12:50:44.407+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@fe156f4
2025-08-22T12:50:44.407+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@79b4cff
2025-08-22T12:50:44.407+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@58ac0823
2025-08-22T12:50:44.697+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:50:44.743+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:50:44.953+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11cdf948
2025-08-22T12:50:44.955+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:50:45.055+03:00  INFO 2612 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:50:45.069+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4c599679) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@15fd3088)
2025-08-22T12:50:45.070+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f13e0a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@329efc61)
2025-08-22T12:50:45.075+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:50:45.076+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:50:45.089+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@75df4b1d
2025-08-22T12:50:45.090+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@75df4b1d
2025-08-22T12:50:45.094+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2d3111a1`
2025-08-22T12:50:45.104+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:50:45.104+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:50:45.104+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:50:45.110+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:50:45.110+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:50:45.111+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:50:45.111+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:50:45.111+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:50:45.112+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:50:45.115+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:50:45.115+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:50:45.116+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:50:45.118+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4fd00e10] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7be1e187]
2025-08-22T12:50:46.717+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:50:46.718+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4fd00e10] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@19d043a8]
2025-08-22T12:50:46.864+03:00 TRACE 2612 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@19d043a8] for TypeConfiguration
2025-08-22T12:50:46.864+03:00  INFO 2612 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:50:47.299+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T12:50:47.311+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:47.444+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:47.464+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T12:50:48.337+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:48.340+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:48.361+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:48.371+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:50:48.393+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.410+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:50:48.410+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.432+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T12:50:48.433+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.464+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:50:48.464+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.466+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:50:48.466+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.492+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:48.499+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:48.509+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:50:48.510+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.512+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:50:48.513+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.513+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:50:48.513+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.514+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:50:48.514+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.536+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:48.545+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:48.563+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:50:48.563+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.564+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:50:48.565+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.566+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:50:48.566+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.566+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:50:48.567+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.567+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:50:48.568+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.589+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T12:50:48.590+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.598+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T12:50:48.598+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.607+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T12:50:48.607+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.609+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T12:50:48.610+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.610+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T12:50:48.610+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:50:48.822+03:00  WARN 2612 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T12:50:50.355+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T12:50:50.419+03:00  INFO 2612 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T12:50:53.178+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2036/0x000001cb35c44780@22445d8e with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T12:50:53.217+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T12:50:54.837+03:00  INFO 2612 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T12:50:54.938+03:00  WARN 2612 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T12:50:55.147+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T12:50:55.250+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T12:50:55.264+03:00  INFO 2612 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T12:50:55.289+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T12:50:55.290+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T12:50:55.290+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T12:50:55.290+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T12:50:55.290+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T12:50:55.290+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T12:50:55.291+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T12:50:55.887+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T12:50:55.890+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T12:50:55.896+03:00  INFO 2612 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T12:50:55.899+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755856255898 with initial instances count: 1
2025-08-22T12:50:55.905+03:00  INFO 2612 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T12:50:55.906+03:00  INFO 2612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856255906, current=UP, previous=STARTING]
2025-08-22T12:50:55.911+03:00  INFO 2612 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:50:55.994+03:00  INFO 2612 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:50:56.189+03:00 DEBUG 2612 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 61ms, rows: 1
2025-08-22T12:50:56.218+03:00  INFO 2612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    756000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    412200 nanoseconds spent preparing 1 JDBC statements;
    3550700 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    17437800 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    40800 nanoseconds spent executing 1 pre-partial-flushes;
    16500 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:50:56.224+03:00  INFO 2612 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 15.478 seconds (process running for 17.447)
2025-08-22T12:51:33.617+03:00  INFO 11796 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 11796 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:51:33.621+03:00  INFO 11796 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:51:35.152+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:51:35.155+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:51:35.209+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.212+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.214+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.217+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.220+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.223+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.226+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.228+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.231+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.234+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:51:35.236+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:51:35.243+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:51:35.244+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:51:35.261+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.261+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.262+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.263+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.264+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.265+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.266+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.266+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.267+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.268+03:00  INFO 11796 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:51:35.268+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:51:35.279+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:51:35.281+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:51:35.503+03:00  INFO 11796 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 212 ms. Found 10 JPA repository interfaces.
2025-08-22T12:51:35.847+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:51:36.384+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:51:36.457+03:00  INFO 11796 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:51:36.511+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:51:36.618+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:51:36.618+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:51:36.619+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:51:36.619+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:51:36.619+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:51:36.620+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:51:36.620+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:51:36.620+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:51:36.621+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:51:36.621+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:51:36.621+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:51:36.622+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:51:36.623+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:51:36.623+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:51:36.624+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:51:36.624+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:51:36.624+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:51:36.625+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:51:36.625+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:51:36.625+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:51:36.626+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:51:36.626+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:51:36.626+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:51:36.627+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:51:36.627+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:51:36.627+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:51:36.628+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:51:36.628+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:51:36.629+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:51:36.629+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:51:36.629+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:51:36.630+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:51:36.630+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:51:36.631+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:51:36.631+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:51:36.632+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:51:36.632+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:51:36.632+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:51:36.633+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:51:36.633+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:51:36.633+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:51:36.634+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:51:36.634+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:51:36.634+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:51:36.635+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:51:36.635+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:51:36.635+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:51:36.636+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:51:36.636+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:51:36.636+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:51:36.637+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:51:36.637+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:51:36.637+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:51:36.637+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:51:36.638+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:51:36.638+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:51:36.638+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:51:36.638+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:51:36.639+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:51:36.639+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:51:36.639+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:51:36.640+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:51:36.640+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:51:36.640+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:51:36.640+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:51:36.640+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:51:36.641+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:51:36.641+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:51:36.641+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:51:36.641+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:51:36.641+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:51:36.642+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:51:36.642+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:51:36.642+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:51:36.642+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:51:36.642+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:51:36.643+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:51:36.643+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:51:36.643+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:51:36.643+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:51:36.643+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:51:36.644+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:51:36.644+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:51:36.644+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:51:36.644+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:51:36.644+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:51:36.645+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:51:36.645+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:51:36.645+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:51:36.645+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:51:36.646+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:51:36.646+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:51:36.647+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:51:36.647+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:51:36.647+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:51:36.647+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:51:36.647+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:51:36.648+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:51:36.648+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:51:36.648+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:51:36.648+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:51:36.649+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:51:36.649+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:51:36.649+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:51:36.650+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:51:36.650+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:51:36.650+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:51:36.651+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:51:36.651+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:51:36.651+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:51:36.652+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:51:36.652+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:51:36.652+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:51:36.652+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:51:36.652+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:51:36.653+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:51:36.653+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:51:36.653+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:51:36.653+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:51:36.654+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:51:36.654+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T12:51:36.654+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T12:51:36.654+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:51:36.654+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@391e85df
2025-08-22T12:51:36.662+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@57867d96
2025-08-22T12:51:36.662+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@57867d96
2025-08-22T12:51:36.665+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@58ac0823
2025-08-22T12:51:36.665+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2d705998
2025-08-22T12:51:36.666+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@28a3fc34
2025-08-22T12:51:36.666+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7582a16b
2025-08-22T12:51:36.666+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4dd752e8
2025-08-22T12:51:36.666+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@62c46e53
2025-08-22T12:51:36.666+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@55317c63
2025-08-22T12:51:36.667+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35d81657
2025-08-22T12:51:36.667+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42ef5216
2025-08-22T12:51:36.958+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:51:37.002+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:51:37.232+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23cb8fcb
2025-08-22T12:51:37.236+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:51:37.334+03:00  INFO 11796 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:51:37.344+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b5bddfe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4fe3f9ef)
2025-08-22T12:51:37.345+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c86b0ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e481512)
2025-08-22T12:51:37.349+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:51:37.349+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:51:37.366+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2941631f
2025-08-22T12:51:37.366+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2941631f
2025-08-22T12:51:37.366+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@57867d96`
2025-08-22T12:51:37.376+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:51:37.377+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:51:37.377+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:51:37.385+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:51:37.385+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:51:37.386+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:51:37.386+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:51:37.386+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:51:37.386+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:51:37.388+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:51:37.389+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:51:37.389+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:51:37.392+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46eb2260] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@556944cd]
2025-08-22T12:51:39.338+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:51:39.340+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46eb2260] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4ee41c66]
2025-08-22T12:51:39.529+03:00 TRACE 11796 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4ee41c66] for TypeConfiguration
2025-08-22T12:51:39.529+03:00  INFO 11796 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:51:40.050+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T12:51:40.068+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:40.233+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:40.258+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T12:51:41.285+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:41.289+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:41.318+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:41.330+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:51:41.361+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.377+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:51:41.377+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.407+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T12:51:41.408+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.474+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:51:41.475+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.476+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:51:41.477+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.510+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:41.519+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:41.529+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:51:41.530+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.537+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:51:41.538+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.538+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:51:41.539+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.541+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:51:41.542+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.575+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:41.595+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:41.633+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:51:41.634+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.636+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:51:41.637+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.638+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:51:41.639+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.640+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:51:41.641+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.642+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:51:41.643+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.672+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T12:51:41.672+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.681+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T12:51:41.682+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.693+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T12:51:41.693+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.695+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T12:51:41.695+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.696+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T12:51:41.696+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:51:41.942+03:00  WARN 11796 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T12:51:43.499+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T12:51:43.572+03:00  INFO 11796 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T12:51:46.349+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2037/0x000001d981c4c7d0@66c9f7 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T12:51:46.374+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T12:51:47.512+03:00  INFO 11796 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T12:51:47.580+03:00  WARN 11796 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T12:51:47.687+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T12:51:47.749+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T12:51:47.759+03:00  INFO 11796 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T12:51:47.787+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T12:51:47.787+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T12:51:47.788+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T12:51:47.788+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T12:51:47.788+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T12:51:47.788+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T12:51:47.789+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T12:51:48.330+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T12:51:48.335+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T12:51:48.339+03:00  INFO 11796 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T12:51:48.343+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755856308341 with initial instances count: 2
2025-08-22T12:51:48.349+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T12:51:48.349+03:00  INFO 11796 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856308349, current=UP, previous=STARTING]
2025-08-22T12:51:48.353+03:00  INFO 11796 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:51:48.427+03:00  INFO 11796 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:51:48.608+03:00 DEBUG 11796 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 49ms, rows: 1
2025-08-22T12:51:48.633+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    644100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    278100 nanoseconds spent preparing 1 JDBC statements;
    3058500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    16479100 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    43400 nanoseconds spent executing 1 pre-partial-flushes;
    15800 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:51:48.639+03:00  INFO 11796 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 15.591 seconds (process running for 17.53)
2025-08-22T12:51:49.279+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T12:51:49.279+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T12:51:49.281+03:00  INFO 11796 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T12:51:57.299+03:00  INFO 11796 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:04.537+03:00  INFO 10216 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 10216 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:53:04.541+03:00  INFO 10216 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:53:06.117+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:53:06.120+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:53:06.175+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.177+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.179+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.182+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.184+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.187+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.189+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.192+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.194+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.196+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:53:06.198+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 68 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:53:06.205+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:53:06.206+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:53:06.222+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.223+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.223+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.224+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.224+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.225+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.225+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.226+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.226+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.226+03:00  INFO 10216 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:53:06.227+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:53:06.243+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:53:06.245+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:53:06.438+03:00  INFO 10216 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 184 ms. Found 10 JPA repository interfaces.
2025-08-22T12:53:06.823+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:53:07.351+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:53:07.421+03:00  INFO 10216 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:53:07.472+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:53:07.574+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:53:07.574+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:53:07.574+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T12:53:07.575+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:53:07.575+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T12:53:07.575+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:53:07.576+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T12:53:07.576+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:53:07.577+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T12:53:07.577+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:53:07.577+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:53:07.578+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T12:53:07.579+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:53:07.580+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:53:07.580+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T12:53:07.581+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:53:07.581+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T12:53:07.581+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:53:07.581+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:53:07.582+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:53:07.583+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:53:07.583+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:53:07.583+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:53:07.584+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:53:07.584+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:53:07.584+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:53:07.585+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:53:07.585+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:53:07.585+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:53:07.585+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:53:07.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T12:53:07.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:53:07.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:53:07.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T12:53:07.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:53:07.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:53:07.587+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:53:07.587+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:53:07.587+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:53:07.587+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:53:07.587+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:53:07.588+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:53:07.588+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:53:07.588+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:53:07.588+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:53:07.589+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:53:07.589+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:53:07.589+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:53:07.589+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:53:07.590+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:53:07.590+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:53:07.590+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:53:07.590+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:53:07.591+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:53:07.591+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:53:07.591+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:53:07.591+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:53:07.591+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:53:07.592+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:53:07.592+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:53:07.592+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:53:07.592+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:53:07.593+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:53:07.593+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:53:07.593+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:53:07.593+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:53:07.593+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:53:07.594+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:53:07.594+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:53:07.594+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:53:07.594+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:53:07.595+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:53:07.595+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:53:07.595+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:53:07.595+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:53:07.595+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:53:07.596+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:53:07.596+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:53:07.597+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:53:07.597+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:53:07.597+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:53:07.597+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:53:07.597+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:53:07.598+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:53:07.599+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:53:07.599+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:53:07.599+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:53:07.599+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:53:07.599+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:53:07.600+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:53:07.600+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:53:07.600+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:53:07.600+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:53:07.600+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:53:07.601+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:53:07.602+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:53:07.602+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:53:07.602+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:53:07.602+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:53:07.602+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:53:07.603+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:53:07.603+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:53:07.603+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:53:07.603+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:53:07.604+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:53:07.604+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:53:07.604+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:53:07.604+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:53:07.604+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:53:07.605+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:53:07.605+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:53:07.605+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:53:07.605+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:53:07.605+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T12:53:07.606+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T12:53:07.606+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:53:07.606+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@391e85df
2025-08-22T12:53:07.614+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@57867d96
2025-08-22T12:53:07.614+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@57867d96
2025-08-22T12:53:07.617+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@58ac0823
2025-08-22T12:53:07.617+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2d705998
2025-08-22T12:53:07.618+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@28a3fc34
2025-08-22T12:53:07.618+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7582a16b
2025-08-22T12:53:07.618+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4dd752e8
2025-08-22T12:53:07.618+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@62c46e53
2025-08-22T12:53:07.618+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@55317c63
2025-08-22T12:53:07.619+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35d81657
2025-08-22T12:53:07.619+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42ef5216
2025-08-22T12:53:07.944+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:53:07.990+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:53:08.225+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23cb8fcb
2025-08-22T12:53:08.228+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:53:08.332+03:00  INFO 10216 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:53:08.344+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b5bddfe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4fe3f9ef)
2025-08-22T12:53:08.345+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c86b0ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e481512)
2025-08-22T12:53:08.349+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:53:08.350+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:53:08.371+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2941631f
2025-08-22T12:53:08.371+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2941631f
2025-08-22T12:53:08.372+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@57867d96`
2025-08-22T12:53:08.378+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:53:08.379+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:53:08.379+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:53:08.385+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:53:08.386+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:53:08.386+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:53:08.386+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:53:08.386+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:53:08.386+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:53:08.388+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:53:08.389+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:53:08.389+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:53:08.391+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46eb2260] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@556944cd]
2025-08-22T12:53:09.960+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:53:09.962+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46eb2260] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4ee41c66]
2025-08-22T12:53:10.125+03:00 TRACE 10216 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4ee41c66] for TypeConfiguration
2025-08-22T12:53:10.125+03:00  INFO 10216 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:53:10.540+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T12:53:10.554+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:10.689+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:10.709+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T12:53:11.457+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:11.461+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:11.482+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:11.492+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:53:11.517+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.533+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:53:11.534+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.558+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T12:53:11.559+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.584+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:53:11.584+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:53:11.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.586+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:53:11.587+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.616+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:11.624+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:11.632+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:53:11.633+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.634+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:53:11.635+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.635+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:53:11.635+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.636+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:53:11.636+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.655+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:11.672+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:11.703+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:53:11.704+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.706+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:53:11.706+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.706+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:53:11.707+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.707+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:53:11.707+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.707+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:53:11.708+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.747+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T12:53:11.748+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.758+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T12:53:11.759+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.769+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T12:53:11.769+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.771+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T12:53:11.771+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.771+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T12:53:11.772+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:53:11.966+03:00  WARN 10216 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T12:53:13.174+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T12:53:13.248+03:00  INFO 10216 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T12:53:16.025+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2037/0x0000029d2dc49e48@66c9f7 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T12:53:16.056+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T12:53:17.103+03:00  INFO 10216 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T12:53:17.177+03:00  WARN 10216 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T12:53:17.298+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T12:53:17.342+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T12:53:17.352+03:00  INFO 10216 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T12:53:17.371+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T12:53:17.371+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T12:53:17.371+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T12:53:17.371+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T12:53:17.371+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T12:53:17.372+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T12:53:17.372+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T12:53:17.972+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T12:53:17.976+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T12:53:17.981+03:00  INFO 10216 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T12:53:17.985+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755856397983 with initial instances count: 2
2025-08-22T12:53:17.993+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T12:53:17.993+03:00  INFO 10216 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856397993, current=UP, previous=STARTING]
2025-08-22T12:53:17.997+03:00  INFO 10216 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:53:18.080+03:00  INFO 10216 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:53:18.288+03:00 DEBUG 10216 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 69ms, rows: 1
2025-08-22T12:53:18.319+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    671000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    306900 nanoseconds spent preparing 1 JDBC statements;
    4699200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    19478000 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    36900 nanoseconds spent executing 1 pre-partial-flushes;
    23900 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:53:18.326+03:00  INFO 10216 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 14.348 seconds (process running for 16.242)
2025-08-22T12:53:19.113+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T12:53:19.114+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T12:53:19.117+03:00  INFO 10216 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T12:53:26.900+03:00  INFO 10216 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:54:42.561+03:00  WARN 10216 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m34s221ms298µs700ns).
2025-08-22T12:54:42.625+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T12:54:42.625+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856482625, current=DOWN, previous=UP]
2025-08-22T12:54:42.626+03:00  INFO 10216 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:54:42.630+03:00  INFO 10216 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:54:42.644+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:54:42.645+03:00 TRACE 10216 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4ee41c66] for TypeConfiguration
2025-08-22T12:54:42.645+03:00 DEBUG 10216 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15ea99fb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4ee41c66]
2025-08-22T12:54:42.647+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T12:54:42.664+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T12:54:42.665+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T12:54:45.673+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T12:54:45.691+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T12:54:45.691+03:00  INFO 10216 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T12:56:30.761+03:00  INFO 15908 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 15908 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T12:56:30.764+03:00  INFO 15908 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T12:56:32.310+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:56:32.312+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:56:32.367+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.369+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.372+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.374+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.377+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.380+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.382+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.385+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.387+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.390+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T12:56:32.391+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 70 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T12:56:32.399+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:56:32.400+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T12:56:32.409+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.410+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.411+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.411+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.412+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.412+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.413+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.414+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.414+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.415+03:00  INFO 15908 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T12:56:32.415+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T12:56:32.426+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T12:56:32.427+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T12:56:32.650+03:00  INFO 15908 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 216 ms. Found 10 JPA repository interfaces.
2025-08-22T12:56:33.009+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T12:56:33.529+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T12:56:33.610+03:00  INFO 15908 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T12:56:33.656+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T12:56:33.766+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:56:33.767+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:56:33.767+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T12:56:33.767+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:56:33.768+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T12:56:33.768+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:56:33.769+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T12:56:33.769+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:56:33.769+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T12:56:33.770+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:56:33.770+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:56:33.770+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T12:56:33.771+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:56:33.771+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:56:33.772+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T12:56:33.772+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:56:33.772+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T12:56:33.773+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T12:56:33.773+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:56:33.773+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T12:56:33.774+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T12:56:33.774+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T12:56:33.775+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:56:33.775+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:56:33.775+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T12:56:33.775+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:56:33.776+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:56:33.776+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T12:56:33.776+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:56:33.777+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:56:33.777+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T12:56:33.778+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:56:33.778+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:56:33.779+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T12:56:33.779+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:56:33.779+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:56:33.780+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T12:56:33.780+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:56:33.781+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T12:56:33.781+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:56:33.782+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T12:56:33.782+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:56:33.783+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:56:33.783+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T12:56:33.783+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T12:56:33.784+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:56:33.784+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T12:56:33.784+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T12:56:33.784+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:56:33.785+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:56:33.785+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T12:56:33.785+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T12:56:33.786+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T12:56:33.786+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T12:56:33.786+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:56:33.787+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T12:56:33.787+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:56:33.787+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T12:56:33.787+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T12:56:33.788+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T12:56:33.788+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T12:56:33.788+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T12:56:33.789+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T12:56:33.789+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T12:56:33.789+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:56:33.789+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T12:56:33.790+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:56:33.790+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T12:56:33.790+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:56:33.791+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T12:56:33.791+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:56:33.792+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T12:56:33.793+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:56:33.793+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T12:56:33.793+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T12:56:33.793+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T12:56:33.794+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:56:33.794+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T12:56:33.794+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T12:56:33.794+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T12:56:33.794+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T12:56:33.795+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:56:33.795+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T12:56:33.795+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T12:56:33.795+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T12:56:33.795+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:56:33.795+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T12:56:33.796+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:56:33.796+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T12:56:33.796+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:56:33.796+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:56:33.796+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T12:56:33.796+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:56:33.797+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:56:33.797+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T12:56:33.797+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T12:56:33.798+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T12:56:33.798+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:56:33.798+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T12:56:33.798+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:56:33.798+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:56:33.798+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T12:56:33.799+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T12:56:33.799+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T12:56:33.799+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T12:56:33.799+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T12:56:33.799+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:56:33.799+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:56:33.800+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T12:56:33.800+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@391e85df
2025-08-22T12:56:33.800+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@391e85df
2025-08-22T12:56:33.800+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@48c3a0ef
2025-08-22T12:56:33.800+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@48c3a0ef
2025-08-22T12:56:33.800+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3b4f1eb
2025-08-22T12:56:33.801+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3b4f1eb
2025-08-22T12:56:33.801+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6247c08c
2025-08-22T12:56:33.801+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6247c08c
2025-08-22T12:56:33.801+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2f3a8166
2025-08-22T12:56:33.801+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2f3a8166
2025-08-22T12:56:33.802+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7aab98b6
2025-08-22T12:56:33.802+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5e3405a1
2025-08-22T12:56:33.802+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@22bfd4b
2025-08-22T12:56:33.802+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@79e16dd9
2025-08-22T12:56:33.802+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5fa9247b
2025-08-22T12:56:33.811+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@fe156f4
2025-08-22T12:56:33.811+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@fe156f4
2025-08-22T12:56:33.813+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3180aee
2025-08-22T12:56:33.814+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5d94ac8a
2025-08-22T12:56:33.814+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@288b73c1
2025-08-22T12:56:33.814+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@104cfb24
2025-08-22T12:56:33.815+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5340ccb9
2025-08-22T12:56:33.815+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2bc8caa7
2025-08-22T12:56:33.815+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@582ea164
2025-08-22T12:56:33.815+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2fccf49e
2025-08-22T12:56:33.815+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7abcc0da
2025-08-22T12:56:34.178+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T12:56:34.226+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T12:56:34.436+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31b7112d
2025-08-22T12:56:34.439+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T12:56:34.537+03:00  INFO 15908 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T12:56:34.550+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@691a5c3a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5570dc21)
2025-08-22T12:56:34.551+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1477d4e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b97fcf)
2025-08-22T12:56:34.556+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T12:56:34.557+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T12:56:34.573+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@68af8288
2025-08-22T12:56:34.573+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@68af8288
2025-08-22T12:56:34.573+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@fe156f4`
2025-08-22T12:56:34.581+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T12:56:34.581+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:56:34.582+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T12:56:34.587+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:56:34.588+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:56:34.588+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T12:56:34.589+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:56:34.589+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:56:34.590+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T12:56:34.591+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:56:34.592+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:56:34.592+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T12:56:34.596+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74f92d14] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@40071890]
2025-08-22T12:56:36.391+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T12:56:36.392+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74f92d14] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@254a9f65]
2025-08-22T12:56:36.564+03:00 TRACE 15908 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@254a9f65] for TypeConfiguration
2025-08-22T12:56:36.565+03:00  INFO 15908 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T12:56:36.959+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T12:56:36.970+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:37.105+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:37.125+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T12:56:38.173+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:38.177+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:38.203+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:38.215+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:56:38.248+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.270+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T12:56:38.271+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.305+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T12:56:38.306+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.341+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:56:38.341+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.343+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:56:38.343+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.344+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T12:56:38.344+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.387+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:38.400+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:38.415+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:56:38.416+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.418+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:56:38.419+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.419+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:56:38.420+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.420+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T12:56:38.421+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.451+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:38.469+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:38.498+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:56:38.498+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.500+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:56:38.501+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.501+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:56:38.502+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.502+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:56:38.503+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.503+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T12:56:38.504+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.538+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T12:56:38.538+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.549+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T12:56:38.550+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.565+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T12:56:38.566+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.568+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T12:56:38.568+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.569+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T12:56:38.569+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T12:56:38.928+03:00  WARN 15908 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T12:56:40.226+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T12:56:40.276+03:00  INFO 15908 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T12:56:42.544+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2037/0x0000021aa3c4deb0@3d2ee1a8 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T12:56:42.572+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T12:56:43.699+03:00  INFO 15908 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T12:56:43.809+03:00  WARN 15908 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T12:56:43.955+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T12:56:44.003+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T12:56:44.011+03:00  INFO 15908 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T12:56:44.028+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T12:56:44.028+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T12:56:44.028+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T12:56:44.028+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T12:56:44.029+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T12:56:44.029+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T12:56:44.029+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T12:56:44.583+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T12:56:44.587+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T12:56:44.594+03:00  INFO 15908 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T12:56:44.601+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755856604598 with initial instances count: 1
2025-08-22T12:56:44.608+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T12:56:44.610+03:00  INFO 15908 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856604610, current=UP, previous=STARTING]
2025-08-22T12:56:44.613+03:00  INFO 15908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T12:56:44.694+03:00  INFO 15908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T12:56:44.881+03:00 DEBUG 15908 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 62ms, rows: 1
2025-08-22T12:56:44.915+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    728700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    298600 nanoseconds spent preparing 1 JDBC statements;
    3779900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    23722900 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    52300 nanoseconds spent executing 1 pre-partial-flushes;
    26800 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:56:44.922+03:00  INFO 15908 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 14.727 seconds (process running for 16.668)
2025-08-22T12:56:45.626+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T12:56:45.626+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T12:56:45.629+03:00  INFO 15908 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T12:56:54.399+03:00  INFO 15908 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T12:57:46.098+03:00  WARN 15908 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m11s558ms515µs).
2025-08-22T13:00:04.195+03:00  WARN 15908 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m18s96ms229µs700ns).
2025-08-22T13:00:06.033+03:00  INFO 15908 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - Re-registering apps/DATASTORESERVICE
2025-08-22T13:00:06.033+03:00  INFO 15908 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T13:00:04.196+03:00  WARN 15908 --- [DataStoreService] [DiscoveryClient-%d] c.netflix.discovery.TimedSupervisorTask  : task supervisor timed out

java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204) ~[na:na]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:65) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]

2025-08-22T13:00:06.038+03:00  INFO 15908 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T13:00:06.066+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T13:00:06.066+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856806066, current=DOWN, previous=UP]
2025-08-22T13:00:06.066+03:00  INFO 15908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T13:00:06.070+03:00  INFO 15908 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T13:00:06.084+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:00:06.086+03:00 TRACE 15908 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@254a9f65] for TypeConfiguration
2025-08-22T13:00:06.086+03:00 DEBUG 15908 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15f14a30] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@254a9f65]
2025-08-22T13:00:06.089+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T13:00:06.098+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T13:00:06.099+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T13:00:09.115+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T13:00:09.133+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T13:00:09.133+03:00  INFO 15908 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T13:00:36.077+03:00  INFO 20968 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 20968 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:00:36.081+03:00  INFO 20968 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:00:37.631+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:00:37.634+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:00:37.686+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.689+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.691+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.694+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.696+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.699+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.702+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.705+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.707+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.710+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:00:37.711+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 67 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:00:37.718+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:00:37.719+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:00:37.729+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.730+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.731+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.731+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.732+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.732+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.733+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.733+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.734+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.734+03:00  INFO 20968 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:00:37.735+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:00:37.752+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:00:37.754+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:00:37.975+03:00  INFO 20968 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 212 ms. Found 10 JPA repository interfaces.
2025-08-22T13:00:38.376+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T13:00:38.887+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:00:38.961+03:00  INFO 20968 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:00:39.014+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:00:39.118+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@749ee0e3
2025-08-22T13:00:39.118+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@749ee0e3
2025-08-22T13:00:39.119+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@749ee0e3
2025-08-22T13:00:39.119+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7891cf3
2025-08-22T13:00:39.119+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7891cf3
2025-08-22T13:00:39.119+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6bfbab1c
2025-08-22T13:00:39.120+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6bfbab1c
2025-08-22T13:00:39.120+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@349aeec4
2025-08-22T13:00:39.120+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@349aeec4
2025-08-22T13:00:39.120+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3700994c
2025-08-22T13:00:39.121+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3700994c
2025-08-22T13:00:39.121+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3700994c
2025-08-22T13:00:39.122+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@78a165db
2025-08-22T13:00:39.123+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@78a165db
2025-08-22T13:00:39.123+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@78a165db
2025-08-22T13:00:39.124+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e429f56
2025-08-22T13:00:39.124+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e429f56
2025-08-22T13:00:39.124+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6dbeaef8
2025-08-22T13:00:39.125+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T13:00:39.125+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7744195
2025-08-22T13:00:39.126+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@77f529a6
2025-08-22T13:00:39.126+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7d47b021
2025-08-22T13:00:39.127+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T13:00:39.127+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T13:00:39.128+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6516181f
2025-08-22T13:00:39.128+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T13:00:39.128+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T13:00:39.129+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@40cb95c1
2025-08-22T13:00:39.129+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T13:00:39.129+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T13:00:39.130+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1ead3c67
2025-08-22T13:00:39.130+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T13:00:39.130+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T13:00:39.131+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T13:00:39.131+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T13:00:39.131+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T13:00:39.132+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T13:00:39.132+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T13:00:39.132+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T13:00:39.132+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T13:00:39.133+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T13:00:39.133+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T13:00:39.133+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T13:00:39.133+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T13:00:39.134+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T13:00:39.134+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T13:00:39.134+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@37ade216
2025-08-22T13:00:39.134+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@118e2487
2025-08-22T13:00:39.135+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T13:00:39.135+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T13:00:39.135+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T13:00:39.135+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T13:00:39.136+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T13:00:39.136+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T13:00:39.136+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T13:00:39.136+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T13:00:39.137+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T13:00:39.137+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T13:00:39.137+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T13:00:39.137+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T13:00:39.137+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T13:00:39.138+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T13:00:39.138+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T13:00:39.138+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T13:00:39.139+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T13:00:39.139+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T13:00:39.140+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T13:00:39.141+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T13:00:39.141+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T13:00:39.142+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T13:00:39.143+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T13:00:39.143+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T13:00:39.144+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T13:00:39.144+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T13:00:39.144+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T13:00:39.144+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T13:00:39.145+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T13:00:39.145+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T13:00:39.145+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T13:00:39.145+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T13:00:39.145+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T13:00:39.146+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T13:00:39.146+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T13:00:39.146+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T13:00:39.146+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T13:00:39.147+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T13:00:39.147+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T13:00:39.147+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T13:00:39.147+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T13:00:39.147+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T13:00:39.148+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T13:00:39.148+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T13:00:39.148+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T13:00:39.148+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T13:00:39.149+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T13:00:39.149+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T13:00:39.149+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T13:00:39.149+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T13:00:39.150+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T13:00:39.150+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T13:00:39.150+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T13:00:39.150+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T13:00:39.150+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T13:00:39.151+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T13:00:39.151+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T13:00:39.151+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T13:00:39.151+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T13:00:39.151+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T13:00:39.151+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T13:00:39.152+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T13:00:39.152+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T13:00:39.152+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T13:00:39.152+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T13:00:39.152+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T13:00:39.152+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T13:00:39.153+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T13:00:39.153+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T13:00:39.153+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T13:00:39.153+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T13:00:39.153+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T13:00:39.153+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T13:00:39.154+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T13:00:39.154+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T13:00:39.154+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T13:00:39.166+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@7cd8831c
2025-08-22T13:00:39.166+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7cd8831c
2025-08-22T13:00:39.169+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@16cb6f51
2025-08-22T13:00:39.170+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3fc5d397
2025-08-22T13:00:39.170+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@25c8c71e
2025-08-22T13:00:39.170+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@57867d96
2025-08-22T13:00:39.170+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1a7a21d0
2025-08-22T13:00:39.171+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@bb21063
2025-08-22T13:00:39.171+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6821c63c
2025-08-22T13:00:39.171+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c2f7c63
2025-08-22T13:00:39.171+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4790b897
2025-08-22T13:00:39.474+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:00:39.512+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:00:39.718+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7fc5a558
2025-08-22T13:00:39.720+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:00:39.804+03:00  INFO 20968 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:00:39.814+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2681185e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@41f5389f)
2025-08-22T13:00:39.815+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a012678) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@396c1228)
2025-08-22T13:00:39.819+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:00:39.820+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:00:39.838+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@75a6bd06
2025-08-22T13:00:39.839+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@75a6bd06
2025-08-22T13:00:39.840+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7cd8831c`
2025-08-22T13:00:39.848+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:00:39.849+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:00:39.849+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:00:39.858+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:00:39.858+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:00:39.858+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:00:39.859+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:00:39.859+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:00:39.860+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:00:39.861+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:00:39.861+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:00:39.861+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:00:39.863+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59c00722] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6c96346b]
2025-08-22T13:00:41.289+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:00:41.291+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59c00722] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@9063080]
2025-08-22T13:00:41.429+03:00 TRACE 20968 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@9063080] for TypeConfiguration
2025-08-22T13:00:41.429+03:00  INFO 20968 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:00:41.832+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:00:41.844+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:41.987+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.005+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:00:42.754+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.759+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.782+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.793+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:00:42.817+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.833+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:00:42.834+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.856+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:00:42.857+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.884+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:00:42.884+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.885+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:00:42.886+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.915+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.922+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.929+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:00:42.929+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.931+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:00:42.931+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.932+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:00:42.933+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.933+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:00:42.933+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.955+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.968+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:42.984+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:00:42.984+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.985+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:00:42.986+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.986+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:00:42.986+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.987+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:00:42.987+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:42.988+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:00:42.988+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:43.011+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:00:43.012+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:43.020+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:00:43.020+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:43.029+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:00:43.029+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:43.031+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:00:43.031+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:43.031+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:00:43.032+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:00:43.247+03:00  WARN 20968 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:00:44.307+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:00:44.370+03:00  INFO 20968 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:00:47.037+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2037/0x0000023890c4deb0@4e6fb132 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:00:47.061+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:00:48.236+03:00  INFO 20968 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:00:48.323+03:00  WARN 20968 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:00:48.443+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:00:48.546+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:00:48.559+03:00  INFO 20968 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:00:48.588+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:00:48.588+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:00:48.588+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:00:48.589+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:00:48.589+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:00:48.589+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:00:48.589+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:00:49.153+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:00:49.156+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:00:49.160+03:00  INFO 20968 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:00:49.165+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755856849163 with initial instances count: 1
2025-08-22T13:00:49.172+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:00:49.173+03:00  INFO 20968 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755856849173, current=UP, previous=STARTING]
2025-08-22T13:00:49.175+03:00  INFO 20968 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T13:00:49.258+03:00  INFO 20968 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T13:00:49.426+03:00 DEBUG 20968 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 64ms, rows: 1
2025-08-22T13:00:49.465+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    635800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    278500 nanoseconds spent preparing 1 JDBC statements;
    3278700 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    24980900 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    32800 nanoseconds spent executing 1 pre-partial-flushes;
    21200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:00:49.472+03:00  INFO 20968 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 13.936 seconds (process running for 15.81)
2025-08-22T13:00:50.238+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:00:50.239+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:00:50.242+03:00  INFO 20968 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T13:01:01.697+03:00  INFO 20968 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:01.821+03:00  INFO 13736 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 13736 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:11:01.824+03:00  INFO 13736 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:11:04.072+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:11:04.076+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:11:04.163+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.167+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.171+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.174+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.177+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.181+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.184+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.187+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.189+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.192+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:11:04.193+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 104 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:11:04.200+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:11:04.201+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:11:04.216+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.217+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.217+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.218+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.218+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.219+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.220+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.220+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.221+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.222+03:00  INFO 13736 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:11:04.222+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:11:04.233+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:11:04.235+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:11:04.479+03:00  INFO 13736 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 233 ms. Found 10 JPA repository interfaces.
2025-08-22T13:11:04.960+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T13:11:05.709+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:11:05.813+03:00  INFO 13736 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:11:05.905+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:11:06.110+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44d84313
2025-08-22T13:11:06.111+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44d84313
2025-08-22T13:11:06.111+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44d84313
2025-08-22T13:11:06.112+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5bdb9c69
2025-08-22T13:11:06.112+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5bdb9c69
2025-08-22T13:11:06.112+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@511de4dd
2025-08-22T13:11:06.113+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@511de4dd
2025-08-22T13:11:06.113+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@37e64e37
2025-08-22T13:11:06.113+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@37e64e37
2025-08-22T13:11:06.114+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@31204303
2025-08-22T13:11:06.114+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@31204303
2025-08-22T13:11:06.114+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31204303
2025-08-22T13:11:06.115+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@369fb99a
2025-08-22T13:11:06.116+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@369fb99a
2025-08-22T13:11:06.116+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@369fb99a
2025-08-22T13:11:06.116+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3e839aa3
2025-08-22T13:11:06.116+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3e839aa3
2025-08-22T13:11:06.117+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@751bb780
2025-08-22T13:11:06.117+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@2919aff3
2025-08-22T13:11:06.117+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2919aff3
2025-08-22T13:11:06.118+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@639948a2
2025-08-22T13:11:06.118+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@416d90f0
2025-08-22T13:11:06.118+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@696298ea
2025-08-22T13:11:06.119+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@696298ea
2025-08-22T13:11:06.119+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@696298ea
2025-08-22T13:11:06.119+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@de0c402
2025-08-22T13:11:06.119+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@de0c402
2025-08-22T13:11:06.120+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@de0c402
2025-08-22T13:11:06.120+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24955144
2025-08-22T13:11:06.122+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@24955144
2025-08-22T13:11:06.123+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@24955144
2025-08-22T13:11:06.123+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@9d2af36
2025-08-22T13:11:06.123+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@9d2af36
2025-08-22T13:11:06.124+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@9d2af36
2025-08-22T13:11:06.124+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@740ad32e
2025-08-22T13:11:06.124+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@740ad32e
2025-08-22T13:11:06.124+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@740ad32e
2025-08-22T13:11:06.124+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7f41d979
2025-08-22T13:11:06.125+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7f41d979
2025-08-22T13:11:06.125+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71d0b8a4
2025-08-22T13:11:06.125+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71d0b8a4
2025-08-22T13:11:06.126+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@6d6712b7
2025-08-22T13:11:06.126+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@6d6712b7
2025-08-22T13:11:06.126+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6d6712b7
2025-08-22T13:11:06.127+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4f563f96
2025-08-22T13:11:06.127+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3eadad14
2025-08-22T13:11:06.127+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3eadad14
2025-08-22T13:11:06.128+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4acc27fd
2025-08-22T13:11:06.128+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@1feb76b9
2025-08-22T13:11:06.128+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1feb76b9
2025-08-22T13:11:06.128+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@1feb76b9
2025-08-22T13:11:06.129+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@61bf405d
2025-08-22T13:11:06.129+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@32298473
2025-08-22T13:11:06.129+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@19f1be04
2025-08-22T13:11:06.129+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5d6b5d3d
2025-08-22T13:11:06.130+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5d6b5d3d
2025-08-22T13:11:06.133+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@464d5365
2025-08-22T13:11:06.134+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@464d5365
2025-08-22T13:11:06.135+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@38394dc3
2025-08-22T13:11:06.135+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2cacd55e
2025-08-22T13:11:06.135+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2ba9f743
2025-08-22T13:11:06.135+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7535f28
2025-08-22T13:11:06.136+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@75f65d54
2025-08-22T13:11:06.142+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3f3a6091
2025-08-22T13:11:06.143+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5b4d9bda
2025-08-22T13:11:06.144+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5b4d9bda
2025-08-22T13:11:06.145+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@467a2584
2025-08-22T13:11:06.146+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@467a2584
2025-08-22T13:11:06.146+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@121dce2
2025-08-22T13:11:06.147+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@121dce2
2025-08-22T13:11:06.148+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6df31abf
2025-08-22T13:11:06.148+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6df31abf
2025-08-22T13:11:06.149+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5a57cf90
2025-08-22T13:11:06.151+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5a57cf90
2025-08-22T13:11:06.152+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d16975b
2025-08-22T13:11:06.157+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@425f94d7
2025-08-22T13:11:06.158+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@378c48c1
2025-08-22T13:11:06.160+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@378c48c1
2025-08-22T13:11:06.161+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@53432aef
2025-08-22T13:11:06.162+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a16d393
2025-08-22T13:11:06.162+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14d1032a
2025-08-22T13:11:06.163+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@414e8b31
2025-08-22T13:11:06.164+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@414e8b31
2025-08-22T13:11:06.164+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b90c5a5
2025-08-22T13:11:06.165+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1786150f
2025-08-22T13:11:06.166+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@bd28c86
2025-08-22T13:11:06.167+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@bd28c86
2025-08-22T13:11:06.167+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3ef089ce
2025-08-22T13:11:06.168+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3ef089ce
2025-08-22T13:11:06.168+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3340ce58
2025-08-22T13:11:06.169+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3340ce58
2025-08-22T13:11:06.170+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3340ce58
2025-08-22T13:11:06.171+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@14499b52
2025-08-22T13:11:06.172+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@14499b52
2025-08-22T13:11:06.173+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@14499b52
2025-08-22T13:11:06.173+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@be083e1
2025-08-22T13:11:06.174+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3164d5aa
2025-08-22T13:11:06.174+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4e3ffd0
2025-08-22T13:11:06.175+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4e3ffd0
2025-08-22T13:11:06.175+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5ca86715
2025-08-22T13:11:06.177+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5ca86715
2025-08-22T13:11:06.177+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5ca86715
2025-08-22T13:11:06.178+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@53d808ea
2025-08-22T13:11:06.179+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@44864ebe
2025-08-22T13:11:06.179+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5f803481
2025-08-22T13:11:06.181+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5f803481
2025-08-22T13:11:06.182+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@408f70ab
2025-08-22T13:11:06.182+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@408f70ab
2025-08-22T13:11:06.183+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@408f70ab
2025-08-22T13:11:06.184+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@5383bf08
2025-08-22T13:11:06.185+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5383bf08
2025-08-22T13:11:06.186+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2586e878
2025-08-22T13:11:06.186+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2586e878
2025-08-22T13:11:06.187+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7b7cf475
2025-08-22T13:11:06.188+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7b7cf475
2025-08-22T13:11:06.188+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@404dc999
2025-08-22T13:11:06.189+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@404dc999
2025-08-22T13:11:06.190+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@ef85567
2025-08-22T13:11:06.191+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@ef85567
2025-08-22T13:11:06.192+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1c2fb9e8
2025-08-22T13:11:06.193+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@ec3944
2025-08-22T13:11:06.194+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@2e4339c1
2025-08-22T13:11:06.194+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@62dc1203
2025-08-22T13:11:06.194+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35d0749
2025-08-22T13:11:06.204+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@47f0e078
2025-08-22T13:11:06.204+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@47f0e078
2025-08-22T13:11:06.207+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@701c482e
2025-08-22T13:11:06.207+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4738131e
2025-08-22T13:11:06.207+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3b576ee3
2025-08-22T13:11:06.208+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@705d914f
2025-08-22T13:11:06.208+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6212ea52
2025-08-22T13:11:06.208+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@65b5b5ed
2025-08-22T13:11:06.208+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6595ffce
2025-08-22T13:11:06.209+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@795eddda
2025-08-22T13:11:06.209+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c6bf8d9
2025-08-22T13:11:06.810+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:11:06.880+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:11:07.200+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52f118aa
2025-08-22T13:11:07.202+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:11:07.315+03:00  INFO 13736 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:11:07.332+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@55cc4c61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2b06f498)
2025-08-22T13:11:07.333+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ddb9a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b24d5e4)
2025-08-22T13:11:07.339+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:11:07.340+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:11:07.363+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@27605b87
2025-08-22T13:11:07.363+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@27605b87
2025-08-22T13:11:07.364+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@47f0e078`
2025-08-22T13:11:07.373+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:11:07.373+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:11:07.373+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:11:07.378+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:11:07.379+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:11:07.379+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:11:07.379+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:11:07.379+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:11:07.379+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:11:07.381+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:11:07.382+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:11:07.382+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:11:07.387+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@779ef5cb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d9d8ecf]
2025-08-22T13:11:09.375+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:11:09.376+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@779ef5cb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4b4a3114]
2025-08-22T13:11:09.541+03:00 TRACE 13736 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4b4a3114] for TypeConfiguration
2025-08-22T13:11:09.542+03:00  INFO 13736 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:11:10.061+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:11:10.074+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:10.265+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:10.286+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:11:11.310+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:11.314+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:11.341+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:11.355+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:11:11.382+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.412+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:11:11.413+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.442+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:11:11.443+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.474+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:11:11.474+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.476+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:11:11.477+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.507+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:11.533+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:11.554+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:11:11.555+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.557+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:11:11.558+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.558+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:11:11.559+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.560+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:11:11.561+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.599+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:11.614+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:11.641+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:11:11.641+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.643+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:11:11.644+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.645+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:11:11.646+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.646+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:11:11.646+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.647+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:11:11.648+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.680+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:11:11.680+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.691+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:11:11.691+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.705+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:11:11.706+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.707+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:11:11.708+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.709+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:11:11.709+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:11:11.943+03:00  WARN 13736 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:11:13.316+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:11:13.381+03:00  INFO 13736 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:11:15.360+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2032/0x0000022cb2bdaf98@7c81b1e1 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:11:15.391+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:11:16.633+03:00  INFO 13736 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:11:16.701+03:00  WARN 13736 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:11:16.846+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:11:16.895+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:11:16.904+03:00  INFO 13736 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:11:16.939+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:11:16.939+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:11:16.939+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:11:16.939+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:11:16.939+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:11:16.940+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:11:16.940+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:11:17.457+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:11:17.460+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:11:17.463+03:00  INFO 13736 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:11:17.467+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755857477465 with initial instances count: 2
2025-08-22T13:11:17.473+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:11:17.474+03:00  INFO 13736 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755857477474, current=UP, previous=STARTING]
2025-08-22T13:11:17.480+03:00  INFO 13736 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T13:11:17.599+03:00  INFO 13736 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T13:11:17.803+03:00 DEBUG 13736 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 42ms, rows: 1
2025-08-22T13:11:17.832+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    654400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    192400 nanoseconds spent preparing 1 JDBC statements;
    2533100 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    18985200 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    33000 nanoseconds spent executing 1 pre-partial-flushes;
    12200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:17.838+03:00  INFO 13736 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 16.722 seconds (process running for 18.972)
2025-08-22T13:11:18.421+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:11:18.421+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:11:18.423+03:00  INFO 13736 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T13:11:18.488+03:00  INFO 13736 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:11:18.550+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T13:11:18.550+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755857478550, current=DOWN, previous=UP]
2025-08-22T13:11:18.551+03:00  INFO 13736 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T13:11:18.556+03:00  INFO 13736 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T13:11:18.567+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:11:18.569+03:00 TRACE 13736 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4b4a3114] for TypeConfiguration
2025-08-22T13:11:18.569+03:00 DEBUG 13736 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1d6822c2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4b4a3114]
2025-08-22T13:11:18.573+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T13:11:18.585+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T13:11:18.587+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T13:11:21.593+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T13:11:21.611+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T13:11:21.611+03:00  INFO 13736 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T13:27:48.975+03:00  INFO 19416 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 19416 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:27:48.981+03:00  INFO 19416 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:27:51.111+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:27:51.114+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:27:51.188+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.192+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.196+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.199+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.203+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.206+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.210+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.213+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.217+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.220+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:27:51.222+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:27:51.231+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:27:51.233+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:27:51.247+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.248+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.249+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.250+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.251+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.252+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.253+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.254+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.255+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.256+03:00  INFO 19416 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:27:51.257+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:27:51.270+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:27:51.272+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:27:51.594+03:00  INFO 19416 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 313 ms. Found 10 JPA repository interfaces.
2025-08-22T13:27:52.138+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=21f223f4-9127-3db1-a6bd-6428832e4411
2025-08-22T13:27:53.023+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:27:53.122+03:00  INFO 19416 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:27:53.211+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:27:53.355+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T13:27:53.355+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T13:27:53.356+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e2b512b
2025-08-22T13:27:53.356+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T13:27:53.357+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@ba87c11
2025-08-22T13:27:53.357+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T13:27:53.358+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@17d19538
2025-08-22T13:27:53.359+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T13:27:53.359+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6068cda1
2025-08-22T13:27:53.359+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T13:27:53.360+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T13:27:53.360+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@644e6a8e
2025-08-22T13:27:53.362+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T13:27:53.363+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T13:27:53.364+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2ccecae2
2025-08-22T13:27:53.364+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T13:27:53.365+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6032622
2025-08-22T13:27:53.365+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5cc075da
2025-08-22T13:27:53.366+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T13:27:53.367+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4258106
2025-08-22T13:27:53.367+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64ef2719
2025-08-22T13:27:53.367+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7b423f90
2025-08-22T13:27:53.368+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T13:27:53.368+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T13:27:53.368+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@24f3fb87
2025-08-22T13:27:53.369+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T13:27:53.369+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T13:27:53.370+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@c7673ae
2025-08-22T13:27:53.370+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T13:27:53.370+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T13:27:53.371+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@113c4ad6
2025-08-22T13:27:53.371+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T13:27:53.371+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T13:27:53.372+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7be859de
2025-08-22T13:27:53.372+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T13:27:53.373+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T13:27:53.373+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@40fcaae7
2025-08-22T13:27:53.373+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T13:27:53.374+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7fa85a55
2025-08-22T13:27:53.374+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T13:27:53.374+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@cb1c58c
2025-08-22T13:27:53.375+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T13:27:53.375+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T13:27:53.375+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@352e4b6d
2025-08-22T13:27:53.376+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@10a064bd
2025-08-22T13:27:53.377+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T13:27:53.377+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2de7fe0e
2025-08-22T13:27:53.377+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2ff8d39b
2025-08-22T13:27:53.378+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T13:27:53.378+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T13:27:53.378+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@684a802a
2025-08-22T13:27:53.379+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7b5c9412
2025-08-22T13:27:53.379+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@69d902f9
2025-08-22T13:27:53.380+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@547052
2025-08-22T13:27:53.380+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T13:27:53.380+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3ca3eba2
2025-08-22T13:27:53.381+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T13:27:53.381+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23c00420
2025-08-22T13:27:53.381+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@22f046b
2025-08-22T13:27:53.382+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@215a329c
2025-08-22T13:27:53.382+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@20723ee
2025-08-22T13:27:53.383+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21c5c68a
2025-08-22T13:27:53.383+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5bb39285
2025-08-22T13:27:53.383+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2b0d85bd
2025-08-22T13:27:53.384+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T13:27:53.384+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@102ecb61
2025-08-22T13:27:53.384+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T13:27:53.384+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1fd0ae78
2025-08-22T13:27:53.386+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T13:27:53.387+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@583030bd
2025-08-22T13:27:53.387+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T13:27:53.388+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1f57666b
2025-08-22T13:27:53.388+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T13:27:53.389+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7944c323
2025-08-22T13:27:53.390+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@637d111d
2025-08-22T13:27:53.391+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a917017
2025-08-22T13:27:53.392+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T13:27:53.392+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1ed12d10
2025-08-22T13:27:53.393+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4153a832
2025-08-22T13:27:53.394+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a2dbcfc
2025-08-22T13:27:53.395+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7b8d6c66
2025-08-22T13:27:53.395+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T13:27:53.396+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ca367aa
2025-08-22T13:27:53.397+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@30ed4034
2025-08-22T13:27:53.397+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1700d089
2025-08-22T13:27:53.398+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T13:27:53.399+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@77e6053
2025-08-22T13:27:53.400+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T13:27:53.401+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7097d921
2025-08-22T13:27:53.402+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T13:27:53.403+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T13:27:53.404+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2a21cbe7
2025-08-22T13:27:53.404+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T13:27:53.405+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T13:27:53.405+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3bb4c2b2
2025-08-22T13:27:53.406+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4fbc516f
2025-08-22T13:27:53.406+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1acc768
2025-08-22T13:27:53.407+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T13:27:53.407+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@25765a49
2025-08-22T13:27:53.407+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T13:27:53.407+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T13:27:53.408+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@38caad07
2025-08-22T13:27:53.408+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@15d0b458
2025-08-22T13:27:53.409+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@72a0a60d
2025-08-22T13:27:53.409+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T13:27:53.409+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@65930e02
2025-08-22T13:27:53.410+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T13:27:53.410+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T13:27:53.410+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@85c3522
2025-08-22T13:27:53.411+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T13:27:53.411+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@18be3205
2025-08-22T13:27:53.412+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T13:27:53.412+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6fd97fd1
2025-08-22T13:27:53.412+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T13:27:53.413+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@12c78f36
2025-08-22T13:27:53.413+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T13:27:53.413+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7bdb4d69
2025-08-22T13:27:53.414+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T13:27:53.414+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@129c760d
2025-08-22T13:27:53.415+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@361fa478
2025-08-22T13:27:53.415+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@180f33b2
2025-08-22T13:27:53.416+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@391e85df
2025-08-22T13:27:53.416+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@48c3a0ef
2025-08-22T13:27:53.417+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3b4f1eb
2025-08-22T13:27:53.428+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@bb21063
2025-08-22T13:27:53.429+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@bb21063
2025-08-22T13:27:53.432+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@28a3fc34
2025-08-22T13:27:53.433+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7582a16b
2025-08-22T13:27:53.433+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4dd752e8
2025-08-22T13:27:53.433+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@62c46e53
2025-08-22T13:27:53.433+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@55317c63
2025-08-22T13:27:53.434+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35d81657
2025-08-22T13:27:53.434+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@42ef5216
2025-08-22T13:27:53.434+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3180aee
2025-08-22T13:27:53.435+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5d94ac8a
2025-08-22T13:27:54.019+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:27:54.093+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:27:54.373+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7efba9b9
2025-08-22T13:27:54.377+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:27:54.506+03:00  INFO 19416 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:27:54.526+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2c86b0ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4e481512)
2025-08-22T13:27:54.527+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ba98508) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b552b13)
2025-08-22T13:27:54.533+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:27:54.534+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:27:54.553+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3fb0d9de
2025-08-22T13:27:54.554+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3fb0d9de
2025-08-22T13:27:54.554+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@bb21063`
2025-08-22T13:27:54.566+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:27:54.566+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:27:54.566+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:27:54.574+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:27:54.574+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:27:54.574+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:27:54.575+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:27:54.575+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:27:54.575+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:27:54.577+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:27:54.578+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:27:54.578+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:27:54.581+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@370a935f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e017f47]
2025-08-22T13:27:56.816+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:27:56.820+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@370a935f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2746bc43]
2025-08-22T13:27:57.007+03:00 TRACE 19416 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2746bc43] for TypeConfiguration
2025-08-22T13:27:57.008+03:00  INFO 19416 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:27:57.535+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:27:57.552+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:57.732+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:57.759+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:27:58.935+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:58.939+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:58.974+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:58.987+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:27:59.019+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.040+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:27:59.041+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.076+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:27:59.077+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.109+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:27:59.110+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.111+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:27:59.112+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.112+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:27:59.113+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.145+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:59.155+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:59.166+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:27:59.167+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.168+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:27:59.169+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.169+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:27:59.170+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.170+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:27:59.171+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.194+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:59.212+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:27:59.247+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:27:59.248+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.250+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:27:59.251+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.251+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:27:59.252+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.252+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:27:59.253+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.254+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:27:59.254+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.309+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:27:59.309+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.323+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:27:59.324+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.338+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:27:59.338+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.341+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:27:59.342+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.342+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:27:59.343+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:27:59.620+03:00  WARN 19416 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:28:01.042+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:28:01.108+03:00  INFO 19416 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:28:03.289+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2037/0x0000017001c4d540@3a3f66f3 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:28:03.319+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:28:04.453+03:00  INFO 19416 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:28:04.526+03:00  WARN 19416 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:28:04.661+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:28:04.730+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:28:04.742+03:00  INFO 19416 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:28:04.775+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:28:04.775+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:28:04.775+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:28:04.776+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:28:04.776+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:28:04.776+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:28:04.776+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:28:05.366+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:28:05.371+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:28:05.375+03:00  INFO 19416 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:28:05.379+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755858485378 with initial instances count: 2
2025-08-22T13:28:05.387+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:28:05.387+03:00  INFO 19416 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755858485387, current=UP, previous=STARTING]
2025-08-22T13:28:05.390+03:00  INFO 19416 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T13:28:05.472+03:00  INFO 19416 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T13:28:05.707+03:00 DEBUG 19416 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 77ms, rows: 1
2025-08-22T13:28:05.749+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    767700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    286800 nanoseconds spent preparing 1 JDBC statements;
    3973100 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    28211900 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    63500 nanoseconds spent executing 1 pre-partial-flushes;
    19700 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:28:05.758+03:00  INFO 19416 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 17.51 seconds (process running for 19.903)
2025-08-22T13:28:06.524+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:28:06.524+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:28:06.528+03:00  INFO 19416 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 4 ms
2025-08-22T13:28:57.559+03:00  INFO 19416 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:29:42.567+03:00  WARN 19416 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45s256ms902µs300ns).
2025-08-22T13:30:12.076+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T13:30:12.077+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755858612077, current=DOWN, previous=UP]
2025-08-22T13:30:12.077+03:00  INFO 19416 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T13:30:12.088+03:00  INFO 19416 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T13:30:12.096+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:30:12.097+03:00 TRACE 19416 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2746bc43] for TypeConfiguration
2025-08-22T13:30:12.098+03:00 DEBUG 19416 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6d8dae55] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2746bc43]
2025-08-22T13:30:12.101+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T13:30:12.118+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T13:30:12.119+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T13:30:15.126+03:00  WARN 19416 --- [DataStoreService] [DiscoveryClient-%d] c.netflix.discovery.TimedSupervisorTask  : task supervisor shutting down, can't accept the task
2025-08-22T13:30:15.126+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T13:30:15.143+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T13:30:15.144+03:00  INFO 19416 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T13:49:45.237+03:00  INFO 14688 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 14688 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:49:45.240+03:00  INFO 14688 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:49:46.821+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:49:46.824+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:49:46.888+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.890+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.894+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.897+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.900+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.903+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.906+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.909+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.912+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.915+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:49:46.916+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:49:46.923+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:49:46.924+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:49:46.932+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.933+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.933+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.934+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.935+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.935+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.936+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.937+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.938+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.938+03:00  INFO 14688 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:49:46.939+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:49:46.949+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:49:46.951+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:49:47.150+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 191 ms. Found 10 JPA repository interfaces.
2025-08-22T13:49:47.582+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T13:49:48.278+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T13:49:48.300+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T13:49:48.301+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T13:49:48.427+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T13:49:48.428+03:00  INFO 14688 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3172 ms
2025-08-22T13:49:49.000+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:49:49.077+03:00  INFO 14688 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:49:49.130+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:49:49.238+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:49:49.238+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:49:49.238+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:49:49.238+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T13:49:49.239+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T13:49:49.239+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:49:49.240+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:49:49.240+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:49:49.240+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:49:49.240+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:49:49.241+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:49:49.241+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:49:49.242+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:49:49.242+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:49:49.243+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:49:49.243+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:49:49.243+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:49:49.243+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:49:49.244+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:49:49.244+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:49:49.244+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:49:49.244+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T13:49:49.245+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:49:49.245+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:49:49.246+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:49:49.246+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:49:49.246+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:49:49.246+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:49:49.247+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:49:49.247+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:49:49.247+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:49:49.247+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:49:49.248+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:49:49.248+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:49:49.248+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:49:49.248+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:49:49.248+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:49:49.249+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:49:49.249+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:49:49.249+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:49:49.249+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:49:49.250+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:49:49.250+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:49:49.250+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:49:49.250+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T13:49:49.250+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:49:49.251+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:49:49.251+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T13:49:49.251+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:49:49.251+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:49:49.252+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:49:49.252+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e84a52b
2025-08-22T13:49:49.252+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@40199d5e
2025-08-22T13:49:49.252+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T13:49:49.253+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T13:49:49.253+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T13:49:49.253+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:49:49.254+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:49:49.254+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:49:49.254+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:49:49.255+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:49:49.256+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:49:49.256+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@c31419f
2025-08-22T13:49:49.257+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@43dddfdd
2025-08-22T13:49:49.257+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:49:49.257+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:49:49.258+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:49:49.258+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:49:49.259+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T13:49:49.259+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T13:49:49.260+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T13:49:49.260+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T13:49:49.261+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:49:49.261+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:49:49.262+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:49:49.262+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T13:49:49.263+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:49:49.263+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:49:49.264+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:49:49.264+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:49:49.264+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:49:49.265+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:49:49.265+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:49:49.265+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b4a2887
2025-08-22T13:49:49.265+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T13:49:49.266+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:49:49.267+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:49:49.267+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:49:49.267+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:49:49.268+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:49:49.268+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:49:49.268+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:49:49.269+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:49:49.269+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:49:49.270+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:49:49.270+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T13:49:49.270+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T13:49:49.271+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:49:49.271+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:49:49.271+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:49:49.272+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:49:49.272+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:49:49.272+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1c3a64b6
2025-08-22T13:49:49.272+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T13:49:49.273+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T13:49:49.273+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T13:49:49.273+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:49:49.274+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:49:49.274+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:49:49.274+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T13:49:49.274+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T13:49:49.275+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T13:49:49.275+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T13:49:49.275+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T13:49:49.275+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T13:49:49.276+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@544300a6
2025-08-22T13:49:49.276+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@544300a6
2025-08-22T13:49:49.276+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4c12f54a
2025-08-22T13:49:49.276+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4c12f54a
2025-08-22T13:49:49.277+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@334d825c
2025-08-22T13:49:49.277+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@42a7e7e1
2025-08-22T13:49:49.277+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@e2d9923
2025-08-22T13:49:49.277+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@554e9509
2025-08-22T13:49:49.277+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@acea29e
2025-08-22T13:49:49.287+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@51efdb72
2025-08-22T13:49:49.287+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@51efdb72
2025-08-22T13:49:49.290+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@633c0a61
2025-08-22T13:49:49.291+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@49322d04
2025-08-22T13:49:49.291+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@b6b746b
2025-08-22T13:49:49.291+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@55d8f6bb
2025-08-22T13:49:49.291+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@56b48163
2025-08-22T13:49:49.291+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@eb6ccbc
2025-08-22T13:49:49.291+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5eae392d
2025-08-22T13:49:49.292+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4cd1716d
2025-08-22T13:49:49.292+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e1c5e0d
2025-08-22T13:49:49.645+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:49:49.695+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:49:50.080+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@949f0d
2025-08-22T13:49:50.083+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:49:50.190+03:00  INFO 14688 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:49:50.206+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3e7fc07e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@29ebaf2f)
2025-08-22T13:49:50.207+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a61f634) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20a2930f)
2025-08-22T13:49:50.213+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:49:50.214+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:49:50.234+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6f076c53
2025-08-22T13:49:50.235+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6f076c53
2025-08-22T13:49:50.235+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@51efdb72`
2025-08-22T13:49:50.243+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:49:50.243+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:49:50.244+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:49:50.250+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:49:50.251+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:49:50.251+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:49:50.252+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:49:50.252+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:49:50.252+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:49:50.255+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:49:50.255+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:49:50.255+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:49:50.258+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f65639e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@673fdc28]
2025-08-22T13:49:52.296+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:49:52.297+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f65639e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@641bd93e]
2025-08-22T13:49:52.463+03:00 TRACE 14688 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@641bd93e] for TypeConfiguration
2025-08-22T13:49:52.464+03:00  INFO 14688 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:49:52.968+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:49:52.986+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:53.151+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:53.177+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:49:54.235+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:54.239+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:54.268+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:54.280+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:49:54.311+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.328+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:49:54.329+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.357+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:49:54.357+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.389+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:49:54.389+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.391+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:49:54.391+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.392+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:49:54.392+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.426+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:54.444+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:54.462+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:49:54.463+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.465+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:49:54.466+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.467+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:49:54.469+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.470+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:49:54.470+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.511+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:54.533+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:49:54.553+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:49:54.553+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.555+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:49:54.556+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.556+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:49:54.556+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.557+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:49:54.557+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.558+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:49:54.559+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.584+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:49:54.585+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.594+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:49:54.595+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.610+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:49:54.610+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.612+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:49:54.612+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.613+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:49:54.613+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:49:54.796+03:00  WARN 14688 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:49:56.138+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:49:56.190+03:00  INFO 14688 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:49:58.269+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2222/0x000002409bcc2b48@17143892 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:49:58.294+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:49:59.155+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:49:59.156+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:49:59.158+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T13:49:59.335+03:00  INFO 14688 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:49:59.419+03:00  WARN 14688 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:49:59.727+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 57930 (http) with context path '/'
2025-08-22T13:49:59.730+03:00  INFO 14688 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 57930
2025-08-22T13:49:59.739+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:49:59.789+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:49:59.796+03:00  INFO 14688 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:49:59.815+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:49:59.815+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:49:59.815+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:49:59.815+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:49:59.816+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:49:59.816+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:49:59.816+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:50:00.214+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:50:00.219+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:50:00.224+03:00  INFO 14688 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:50:00.228+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755859800226 with initial instances count: 2
2025-08-22T13:50:00.236+03:00  INFO 14688 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:50:00.237+03:00  INFO 14688 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755859800237, current=UP, previous=STARTING]
2025-08-22T13:50:00.241+03:00  INFO 14688 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:50:00.312+03:00  INFO 14688 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:50:00.577+03:00 DEBUG 14688 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 46ms, rows: 1
2025-08-22T13:50:00.602+03:00  INFO 14688 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    686800 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    257400 nanoseconds spent preparing 1 JDBC statements;
    2546800 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    15348700 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    46300 nanoseconds spent executing 1 pre-partial-flushes;
    12300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:00.608+03:00  INFO 14688 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 15.93 seconds (process running for 17.99)
2025-08-22T13:50:00.687+03:00  WARN 14688 --- [DataStoreService] [Test worker] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.goglotek.frauddetector.datastoreservice.AbstractTest@28a09e0d]

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.goglotek.frauddetector.datastoreservice.AbstractTest': Unsatisfied dependency expressed through field 'webTestClient': No qualifying bean of type 'org.springframework.test.web.reactive.server.WebTestClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:405) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:156) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.test.web.reactive.server.WebTestClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:2284) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1708) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.9.jar:6.2.9]
	... 97 common frames omitted

2025-08-22T13:50:00.859+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T13:50:00.859+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755859800859, current=DOWN, previous=UP]
2025-08-22T13:50:00.860+03:00  INFO 14688 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:50:00.867+03:00  INFO 14688 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:50:00.875+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T13:50:01.113+03:00  INFO 14688 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T13:50:01.135+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:50:01.141+03:00 TRACE 14688 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@641bd93e] for TypeConfiguration
2025-08-22T13:50:01.142+03:00 DEBUG 14688 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7f64523d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@641bd93e]
2025-08-22T13:50:01.146+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T13:50:01.160+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T13:50:01.162+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T13:50:04.167+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T13:50:04.189+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T13:50:04.189+03:00  INFO 14688 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T13:50:36.306+03:00  INFO 11592 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 11592 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:50:36.308+03:00  INFO 11592 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:50:37.806+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:50:37.810+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:50:37.865+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.868+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.871+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.873+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.876+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.879+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.882+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.885+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.888+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.891+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:50:37.892+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:50:37.900+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:50:37.901+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:50:37.915+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.916+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.917+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.918+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.918+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.919+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.919+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.920+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.921+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.921+03:00  INFO 11592 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:50:37.922+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:50:37.932+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:50:37.934+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:50:38.144+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 204 ms. Found 10 JPA repository interfaces.
2025-08-22T13:50:38.503+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T13:50:39.172+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T13:50:39.194+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T13:50:39.195+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T13:50:39.313+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T13:50:39.314+03:00  INFO 11592 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2988 ms
2025-08-22T13:50:39.924+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:50:40.025+03:00  INFO 11592 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:50:40.087+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:50:40.254+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@483ed60e
2025-08-22T13:50:40.254+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@483ed60e
2025-08-22T13:50:40.255+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@483ed60e
2025-08-22T13:50:40.255+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@9c5d76b
2025-08-22T13:50:40.256+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@9c5d76b
2025-08-22T13:50:40.256+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a14ab66
2025-08-22T13:50:40.257+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a14ab66
2025-08-22T13:50:40.257+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@54780c40
2025-08-22T13:50:40.257+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@54780c40
2025-08-22T13:50:40.257+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ac83e67
2025-08-22T13:50:40.258+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ac83e67
2025-08-22T13:50:40.258+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6ac83e67
2025-08-22T13:50:40.259+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4d91d2da
2025-08-22T13:50:40.260+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4d91d2da
2025-08-22T13:50:40.260+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4d91d2da
2025-08-22T13:50:40.260+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2d1f3639
2025-08-22T13:50:40.260+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2d1f3639
2025-08-22T13:50:40.261+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6e5b3642
2025-08-22T13:50:40.261+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@74bcf1ab
2025-08-22T13:50:40.261+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@74bcf1ab
2025-08-22T13:50:40.262+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@a11efe6
2025-08-22T13:50:40.262+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5e6bbe63
2025-08-22T13:50:40.262+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@69356aca
2025-08-22T13:50:40.262+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@69356aca
2025-08-22T13:50:40.263+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@69356aca
2025-08-22T13:50:40.263+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:50:40.264+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:50:40.264+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:50:40.264+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ffc4195
2025-08-22T13:50:40.264+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ffc4195
2025-08-22T13:50:40.265+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ffc4195
2025-08-22T13:50:40.265+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7ce760af
2025-08-22T13:50:40.265+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7ce760af
2025-08-22T13:50:40.265+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7ce760af
2025-08-22T13:50:40.266+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:50:40.266+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:50:40.266+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:50:40.267+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:50:40.267+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:50:40.267+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T13:50:40.268+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T13:50:40.268+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:50:40.268+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:50:40.268+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:50:40.269+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T13:50:40.269+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:50:40.269+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:50:40.269+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:50:40.270+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:50:40.270+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:50:40.271+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:50:40.271+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:50:40.271+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@c14bbab
2025-08-22T13:50:40.272+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T13:50:40.272+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:50:40.272+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:50:40.272+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:50:40.272+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:50:40.273+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:50:40.273+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:50:40.273+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T13:50:40.273+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:50:40.274+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:50:40.274+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:50:40.274+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:50:40.274+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:50:40.275+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:50:40.275+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:50:40.275+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:50:40.276+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:50:40.276+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:50:40.276+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:50:40.277+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:50:40.277+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:50:40.277+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T13:50:40.277+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:50:40.278+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T13:50:40.278+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T13:50:40.278+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:50:40.278+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e84a52b
2025-08-22T13:50:40.278+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40199d5e
2025-08-22T13:50:40.279+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T13:50:40.279+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T13:50:40.279+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T13:50:40.280+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:50:40.280+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:50:40.281+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:50:40.281+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:50:40.282+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:50:40.282+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:50:40.282+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:50:40.282+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:50:40.283+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:50:40.283+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:50:40.283+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:50:40.284+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@c31419f
2025-08-22T13:50:40.284+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@43dddfdd
2025-08-22T13:50:40.285+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:50:40.285+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:50:40.286+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:50:40.286+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:50:40.287+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:50:40.287+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T13:50:40.288+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T13:50:40.288+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:50:40.289+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:50:40.290+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:50:40.290+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:50:40.291+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:50:40.292+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T13:50:40.292+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T13:50:40.292+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:50:40.293+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:50:40.293+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:50:40.293+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:50:40.294+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:50:40.296+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:50:40.296+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:50:40.297+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:50:40.298+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:50:40.298+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@6b4a2887
2025-08-22T13:50:40.299+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T13:50:40.299+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:50:40.300+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:50:40.311+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@110318a7
2025-08-22T13:50:40.312+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@110318a7
2025-08-22T13:50:40.315+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@28100232
2025-08-22T13:50:40.316+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@26728255
2025-08-22T13:50:40.317+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@32c8d67
2025-08-22T13:50:40.317+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@281963c
2025-08-22T13:50:40.317+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a2815cc
2025-08-22T13:50:40.317+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@18fa5af6
2025-08-22T13:50:40.318+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7fdabb3b
2025-08-22T13:50:40.318+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7164e28a
2025-08-22T13:50:40.318+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b881f1f
2025-08-22T13:50:40.739+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:50:40.800+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:50:41.184+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@288915a1
2025-08-22T13:50:41.187+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:50:41.310+03:00  INFO 11592 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:50:41.328+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2f3565c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@64a8851a)
2025-08-22T13:50:41.328+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b27d03d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@687d31a9)
2025-08-22T13:50:41.334+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:50:41.335+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:50:41.365+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6db2a260
2025-08-22T13:50:41.366+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6db2a260
2025-08-22T13:50:41.366+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@110318a7`
2025-08-22T13:50:41.377+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:50:41.378+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:50:41.379+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:50:41.388+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:50:41.388+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:50:41.389+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:50:41.389+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:50:41.389+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:50:41.389+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:50:41.391+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:50:41.392+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:50:41.392+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:50:41.402+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bcca516] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@cef23a8]
2025-08-22T13:50:43.606+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:50:43.608+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bcca516] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@10ec54c3]
2025-08-22T13:50:43.781+03:00 TRACE 11592 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@10ec54c3] for TypeConfiguration
2025-08-22T13:50:43.781+03:00  INFO 11592 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:50:44.374+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:50:44.389+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:44.547+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:44.570+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:50:45.724+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:45.728+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:45.757+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:45.769+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:50:45.799+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.821+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:50:45.822+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.855+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:50:45.856+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.896+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:50:45.897+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.898+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:50:45.899+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.930+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:45.941+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:45.955+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:50:45.955+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.957+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:50:45.957+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.958+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:50:45.958+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.959+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:50:45.959+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:45.984+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:46.002+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:46.034+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:50:46.035+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.037+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:50:46.037+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.038+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:50:46.038+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.038+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:50:46.039+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.039+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:50:46.040+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.092+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:50:46.093+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.105+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:50:46.105+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.119+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:50:46.119+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.121+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:50:46.121+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.121+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:50:46.122+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:50:46.258+03:00  WARN 11592 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:50:47.515+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:50:47.574+03:00  INFO 11592 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:50:49.694+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2222/0x000001facfcc2b48@3c89f754 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:50:49.720+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:50:50.510+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:50:50.511+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:50:50.514+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T13:50:50.706+03:00  INFO 11592 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:50:50.792+03:00  WARN 11592 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:50:51.055+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 57959 (http) with context path '/'
2025-08-22T13:50:51.057+03:00  INFO 11592 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 57959
2025-08-22T13:50:51.066+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:50:51.109+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:50:51.116+03:00  INFO 11592 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:50:51.141+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:50:51.142+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:50:51.142+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:50:51.142+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:50:51.142+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:50:51.142+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:50:51.143+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:50:51.533+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:50:51.538+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:50:51.542+03:00  INFO 11592 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:50:51.547+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755859851544 with initial instances count: 2
2025-08-22T13:50:51.554+03:00  INFO 11592 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:50:51.556+03:00  INFO 11592 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755859851556, current=UP, previous=STARTING]
2025-08-22T13:50:51.560+03:00  INFO 11592 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:50:51.631+03:00  INFO 11592 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:50:51.924+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 65ms, rows: 1
2025-08-22T13:50:51.955+03:00  INFO 11592 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    675500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    378600 nanoseconds spent preparing 1 JDBC statements;
    2898300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    19383100 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    56600 nanoseconds spent executing 1 pre-partial-flushes;
    14200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:50:51.962+03:00  INFO 11592 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 16.209 seconds (process running for 18.132)
2025-08-22T13:51:09.896+03:00 DEBUG 11592 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T13:51:09.967+03:00 TRACE 11592 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T13:51:09.986+03:00 TRACE 11592 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T13:51:14.219+03:00 TRACE 11592 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T13:51:14.221+03:00 TRACE 11592 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T13:51:14.229+03:00 TRACE 11592 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@45a2d27c
2025-08-22T13:51:14.245+03:00 TRACE 11592 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T13:51:14.249+03:00 TRACE 11592 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@500a67c4
2025-08-22T13:51:14.253+03:00 TRACE 11592 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T13:51:14.263+03:00 TRACE 11592 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T13:51:14.270+03:00 TRACE 11592 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T13:51:14.946+03:00 TRACE 11592 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T13:51:14.951+03:00 TRACE 11592 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T13:51:14.952+03:00 TRACE 11592 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T13:51:54.027+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T13:51:54.027+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755859914027, current=DOWN, previous=UP]
2025-08-22T13:51:54.027+03:00  INFO 11592 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:51:54.032+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T13:51:54.033+03:00  INFO 11592 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:51:54.188+03:00  INFO 11592 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T13:51:54.200+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:51:54.201+03:00 TRACE 11592 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@10ec54c3] for TypeConfiguration
2025-08-22T13:51:54.201+03:00 DEBUG 11592 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a89e87c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@10ec54c3]
2025-08-22T13:51:54.203+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T13:51:54.217+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T13:51:54.219+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T13:51:57.229+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T13:51:57.246+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T13:51:57.246+03:00  INFO 11592 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T13:53:07.206+03:00  INFO 12008 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 12008 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:53:07.209+03:00  INFO 12008 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:53:08.733+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:53:08.736+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:53:08.789+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.792+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.795+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.797+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.800+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.803+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.806+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.808+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.811+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.814+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:53:08.816+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:53:08.827+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:53:08.828+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:53:08.836+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.837+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.838+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.839+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.840+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.840+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.841+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.841+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.842+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.843+03:00  INFO 12008 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:53:08.844+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:53:08.857+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:53:08.858+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:53:09.079+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 215 ms. Found 10 JPA repository interfaces.
2025-08-22T13:53:09.449+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T13:53:10.091+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T13:53:10.110+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T13:53:10.111+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T13:53:10.219+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T13:53:10.219+03:00  INFO 12008 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2995 ms
2025-08-22T13:53:10.720+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:53:10.797+03:00  INFO 12008 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:53:10.849+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:53:10.967+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:53:10.967+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:53:10.967+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:53:10.968+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ffc4195
2025-08-22T13:53:10.968+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ffc4195
2025-08-22T13:53:10.968+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ce760af
2025-08-22T13:53:10.969+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ce760af
2025-08-22T13:53:10.969+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:53:10.970+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:53:10.970+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:53:10.970+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:53:10.970+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:53:10.972+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T13:53:10.972+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T13:53:10.973+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T13:53:10.973+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:53:10.973+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:53:10.973+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:53:10.974+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:53:10.974+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:53:10.974+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:53:10.974+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@c14bbab
2025-08-22T13:53:10.975+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T13:53:10.975+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T13:53:10.975+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T13:53:10.975+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:53:10.976+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:53:10.976+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:53:10.977+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:53:10.977+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:53:10.978+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:53:10.978+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:53:10.979+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:53:10.979+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:53:10.980+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:53:10.980+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:53:10.980+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:53:10.981+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T13:53:10.981+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T13:53:10.982+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:53:10.983+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:53:10.983+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:53:10.984+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:53:10.984+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:53:10.984+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:53:10.985+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:53:10.985+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:53:10.985+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:53:10.986+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:53:10.986+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:53:10.986+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:53:10.987+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:53:10.987+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:53:10.987+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T13:53:10.987+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:53:10.988+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:53:10.988+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T13:53:10.988+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T13:53:10.988+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:53:10.988+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7e84a52b
2025-08-22T13:53:10.989+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@40199d5e
2025-08-22T13:53:10.989+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T13:53:10.989+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T13:53:10.989+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:53:10.989+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:53:10.990+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:53:10.990+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:53:10.990+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:53:10.990+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:53:10.991+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:53:10.991+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:53:10.991+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:53:10.991+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c31419f
2025-08-22T13:53:10.991+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c31419f
2025-08-22T13:53:10.991+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@43dddfdd
2025-08-22T13:53:10.992+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:53:10.992+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:53:10.992+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:53:10.992+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T13:53:10.992+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T13:53:10.993+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:53:10.993+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:53:10.993+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:53:10.993+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T13:53:10.993+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:53:10.994+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:53:10.994+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:53:10.994+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:53:10.994+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:53:10.995+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:53:10.995+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:53:10.995+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:53:10.995+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:53:10.995+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:53:10.996+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:53:10.996+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6b4a2887
2025-08-22T13:53:10.996+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T13:53:10.996+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:53:10.996+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:53:10.996+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:53:10.997+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:53:10.997+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:53:10.997+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:53:10.997+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:53:10.997+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T13:53:10.998+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T13:53:10.998+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T13:53:10.998+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T13:53:10.998+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T13:53:10.998+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:53:10.998+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:53:10.999+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:53:10.999+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:53:10.999+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1c3a64b6
2025-08-22T13:53:10.999+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1c3a64b6
2025-08-22T13:53:10.999+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T13:53:11.000+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T13:53:11.000+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T13:53:11.000+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T13:53:11.000+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:53:11.000+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T13:53:11.000+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T13:53:11.000+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T13:53:11.001+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@544300a6
2025-08-22T13:53:11.009+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@281963c
2025-08-22T13:53:11.010+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@281963c
2025-08-22T13:53:11.012+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@17d0d3d7
2025-08-22T13:53:11.013+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@39fc17be
2025-08-22T13:53:11.013+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@106edde4
2025-08-22T13:53:11.013+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4d9cf71d
2025-08-22T13:53:11.013+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5c43cb12
2025-08-22T13:53:11.013+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5db66c3
2025-08-22T13:53:11.013+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@633c0a61
2025-08-22T13:53:11.014+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@49322d04
2025-08-22T13:53:11.014+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@b6b746b
2025-08-22T13:53:11.314+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:53:11.375+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:53:11.582+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4c1fed69
2025-08-22T13:53:11.585+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:53:11.684+03:00  INFO 12008 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:53:11.694+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@45430a27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b83fac3)
2025-08-22T13:53:11.694+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1500edf3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@759c53e5)
2025-08-22T13:53:11.699+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:53:11.699+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:53:11.716+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@818a514
2025-08-22T13:53:11.716+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@818a514
2025-08-22T13:53:11.717+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@281963c`
2025-08-22T13:53:11.727+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:53:11.727+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:53:11.727+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:53:11.734+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:53:11.734+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:53:11.735+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:53:11.735+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:53:11.735+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:53:11.735+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:53:11.737+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:53:11.737+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:53:11.737+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:53:11.740+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@790ea58f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@78a7fccd]
2025-08-22T13:53:13.351+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:53:13.353+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@790ea58f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b3b25ad]
2025-08-22T13:53:13.508+03:00 TRACE 12008 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2b3b25ad] for TypeConfiguration
2025-08-22T13:53:13.509+03:00  INFO 12008 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:53:13.920+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:53:13.930+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:14.059+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:14.081+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:53:15.115+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:15.118+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:15.148+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:15.161+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:53:15.196+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.214+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:53:15.215+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.246+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:53:15.246+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.280+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:53:15.280+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.282+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:53:15.282+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.283+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:53:15.284+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.320+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:15.331+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:15.341+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:53:15.341+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.343+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:53:15.344+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.344+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:53:15.345+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.345+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:53:15.346+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.370+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:15.388+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:15.410+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:53:15.411+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.412+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:53:15.413+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.413+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:53:15.414+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.414+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:53:15.415+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.415+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:53:15.416+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.457+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:53:15.457+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.472+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:53:15.473+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.488+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:53:15.489+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.491+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:53:15.492+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.492+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:53:15.493+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:53:15.641+03:00  WARN 12008 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:53:16.865+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:53:16.924+03:00  INFO 12008 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:53:19.367+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2222/0x0000017758cc2b48@5ed921c9 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:53:19.394+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:53:20.277+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:53:20.278+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:53:20.281+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T13:53:20.444+03:00  INFO 12008 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:53:20.514+03:00  WARN 12008 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:53:20.779+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 57989 (http) with context path '/'
2025-08-22T13:53:20.782+03:00  INFO 12008 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 57989
2025-08-22T13:53:20.789+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:53:20.835+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:53:20.842+03:00  INFO 12008 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:53:20.862+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:53:20.863+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:53:20.863+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:53:20.863+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:53:20.863+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:53:20.863+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:53:20.863+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:53:21.242+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:53:21.246+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:53:21.249+03:00  INFO 12008 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:53:21.253+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755860001251 with initial instances count: 2
2025-08-22T13:53:21.261+03:00  INFO 12008 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:53:21.262+03:00  INFO 12008 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755860001262, current=UP, previous=STARTING]
2025-08-22T13:53:21.266+03:00  INFO 12008 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:53:21.346+03:00  INFO 12008 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:53:21.660+03:00 DEBUG 12008 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 66ms, rows: 1
2025-08-22T13:53:21.691+03:00  INFO 12008 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    645000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    307400 nanoseconds spent preparing 1 JDBC statements;
    2856500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    17815800 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    31600 nanoseconds spent executing 1 pre-partial-flushes;
    14600 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:53:21.696+03:00  INFO 12008 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 15.022 seconds (process running for 16.955)
2025-08-22T13:53:51.565+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T13:53:51.565+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755860031565, current=DOWN, previous=UP]
2025-08-22T13:53:51.566+03:00  INFO 12008 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:53:51.573+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T13:53:51.585+03:00  INFO 12008 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:53:51.746+03:00  INFO 12008 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T13:53:51.761+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:53:51.763+03:00 TRACE 12008 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2b3b25ad] for TypeConfiguration
2025-08-22T13:53:51.763+03:00 DEBUG 12008 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6110be03] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b3b25ad]
2025-08-22T13:53:51.765+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T13:53:51.784+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T13:53:51.786+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T13:53:54.790+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T13:53:54.811+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T13:53:54.811+03:00  INFO 12008 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T13:54:21.391+03:00  INFO 6836 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 6836 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:54:21.393+03:00  INFO 6836 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:54:22.907+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:54:22.909+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:54:22.980+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:22.982+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:22.986+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:22.988+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:22.991+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:22.993+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:22.996+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:22.998+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:23.001+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:23.004+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:54:23.005+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 85 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:54:23.012+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:54:23.013+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:54:23.024+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.025+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.025+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.026+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.026+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.027+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.027+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.028+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.028+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.029+03:00  INFO 6836 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:54:23.029+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:54:23.039+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:54:23.040+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:54:23.235+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 187 ms. Found 10 JPA repository interfaces.
2025-08-22T13:54:23.591+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T13:54:24.236+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T13:54:24.260+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T13:54:24.262+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T13:54:24.382+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T13:54:24.382+03:00  INFO 6836 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2966 ms
2025-08-22T13:54:24.882+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:54:24.959+03:00  INFO 6836 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:54:25.016+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:54:25.131+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:54:25.131+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:54:25.131+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T13:54:25.132+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T13:54:25.132+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T13:54:25.132+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:54:25.132+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:54:25.133+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:54:25.133+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:54:25.133+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:54:25.133+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:54:25.134+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:54:25.135+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:54:25.135+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:54:25.135+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:54:25.136+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:54:25.136+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:54:25.136+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:54:25.137+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:54:25.137+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:54:25.137+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:54:25.137+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T13:54:25.138+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:54:25.138+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:54:25.138+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:54:25.139+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:54:25.139+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:54:25.139+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:54:25.139+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:54:25.140+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:54:25.140+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:54:25.140+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:54:25.140+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:54:25.141+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:54:25.141+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:54:25.141+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:54:25.141+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:54:25.141+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:54:25.142+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:54:25.142+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:54:25.142+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:54:25.142+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:54:25.142+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:54:25.142+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:54:25.143+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T13:54:25.143+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:54:25.143+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:54:25.143+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T13:54:25.144+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:54:25.144+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:54:25.144+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:54:25.144+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e84a52b
2025-08-22T13:54:25.144+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@40199d5e
2025-08-22T13:54:25.145+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T13:54:25.145+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T13:54:25.145+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T13:54:25.146+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:54:25.146+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:54:25.146+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:54:25.147+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:54:25.147+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:54:25.147+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:54:25.148+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@c31419f
2025-08-22T13:54:25.148+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@43dddfdd
2025-08-22T13:54:25.148+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:54:25.148+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:54:25.149+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:54:25.149+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:54:25.149+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T13:54:25.150+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T13:54:25.150+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T13:54:25.151+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T13:54:25.151+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:54:25.151+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:54:25.151+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:54:25.152+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T13:54:25.152+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:54:25.152+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:54:25.152+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:54:25.152+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:54:25.153+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:54:25.153+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:54:25.153+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:54:25.153+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b4a2887
2025-08-22T13:54:25.154+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T13:54:25.154+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:54:25.154+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:54:25.154+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:54:25.155+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:54:25.155+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:54:25.155+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:54:25.155+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:54:25.155+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:54:25.156+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:54:25.156+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:54:25.157+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T13:54:25.157+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T13:54:25.157+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:54:25.157+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:54:25.157+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:54:25.157+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:54:25.157+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:54:25.158+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1c3a64b6
2025-08-22T13:54:25.158+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T13:54:25.158+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T13:54:25.159+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T13:54:25.159+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:54:25.159+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:54:25.160+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:54:25.160+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T13:54:25.160+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T13:54:25.160+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T13:54:25.161+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T13:54:25.161+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T13:54:25.161+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T13:54:25.161+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@544300a6
2025-08-22T13:54:25.162+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@544300a6
2025-08-22T13:54:25.162+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4c12f54a
2025-08-22T13:54:25.162+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4c12f54a
2025-08-22T13:54:25.162+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@334d825c
2025-08-22T13:54:25.162+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@42a7e7e1
2025-08-22T13:54:25.163+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@e2d9923
2025-08-22T13:54:25.163+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@554e9509
2025-08-22T13:54:25.163+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@acea29e
2025-08-22T13:54:25.170+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@51efdb72
2025-08-22T13:54:25.170+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@51efdb72
2025-08-22T13:54:25.172+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@633c0a61
2025-08-22T13:54:25.173+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@49322d04
2025-08-22T13:54:25.173+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@b6b746b
2025-08-22T13:54:25.173+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@55d8f6bb
2025-08-22T13:54:25.174+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@56b48163
2025-08-22T13:54:25.174+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@eb6ccbc
2025-08-22T13:54:25.175+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5eae392d
2025-08-22T13:54:25.177+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4cd1716d
2025-08-22T13:54:25.177+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e1c5e0d
2025-08-22T13:54:25.476+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:54:25.528+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:54:25.756+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@949f0d
2025-08-22T13:54:25.759+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:54:25.859+03:00  INFO 6836 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:54:25.873+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3e7fc07e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@29ebaf2f)
2025-08-22T13:54:25.873+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a61f634) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20a2930f)
2025-08-22T13:54:25.879+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:54:25.880+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:54:25.896+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6f076c53
2025-08-22T13:54:25.896+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6f076c53
2025-08-22T13:54:25.896+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@51efdb72`
2025-08-22T13:54:25.904+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:54:25.904+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:54:25.905+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:54:25.913+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:54:25.913+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:54:25.913+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:54:25.913+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:54:25.913+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:54:25.914+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:54:25.915+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:54:25.916+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:54:25.916+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:54:25.919+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f65639e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@673fdc28]
2025-08-22T13:54:27.562+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:54:27.563+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f65639e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@641bd93e]
2025-08-22T13:54:27.723+03:00 TRACE 6836 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@641bd93e] for TypeConfiguration
2025-08-22T13:54:27.724+03:00  INFO 6836 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:54:28.140+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:54:28.153+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:28.269+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:28.287+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:54:29.110+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:29.113+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:29.147+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:29.158+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:54:29.191+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.212+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:54:29.212+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.244+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:54:29.245+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.315+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:54:29.315+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.318+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:54:29.318+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.376+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:29.406+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:29.422+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:54:29.422+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.424+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:54:29.425+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.425+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:54:29.426+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.426+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:54:29.426+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.449+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:29.463+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:29.491+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:54:29.492+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.494+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:54:29.495+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.495+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:54:29.496+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.497+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:54:29.497+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.498+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:54:29.498+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.534+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:54:29.534+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.546+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:54:29.547+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.560+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:54:29.560+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.562+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:54:29.563+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.563+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:54:29.564+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:54:29.716+03:00  WARN 6836 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:54:30.963+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:54:31.033+03:00  INFO 6836 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:54:33.392+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2222/0x000001f1c7cbdeb0@50aac447 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:54:33.418+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:54:34.233+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:54:34.233+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:54:34.235+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T13:54:34.408+03:00  INFO 6836 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:54:34.515+03:00  WARN 6836 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:54:34.812+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58018 (http) with context path '/'
2025-08-22T13:54:34.815+03:00  INFO 6836 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58018
2025-08-22T13:54:34.824+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:54:34.878+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:54:34.885+03:00  INFO 6836 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:54:34.901+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:54:34.901+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:54:34.901+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:54:34.901+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:54:34.901+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:54:34.902+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:54:34.902+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:54:35.293+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:54:35.300+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:54:35.307+03:00  INFO 6836 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:54:35.314+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755860075311 with initial instances count: 2
2025-08-22T13:54:35.324+03:00  INFO 6836 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:54:35.325+03:00  INFO 6836 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755860075325, current=UP, previous=STARTING]
2025-08-22T13:54:35.328+03:00  INFO 6836 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:54:35.397+03:00  INFO 6836 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:54:35.701+03:00 DEBUG 6836 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 56ms, rows: 1
2025-08-22T13:54:35.727+03:00  INFO 6836 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    633300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    321400 nanoseconds spent preparing 1 JDBC statements;
    3414300 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    16377800 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    46000 nanoseconds spent executing 1 pre-partial-flushes;
    26100 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:54:35.732+03:00  INFO 6836 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 14.881 seconds (process running for 16.821)
2025-08-22T13:56:02.899+03:00  INFO 15164 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 15164 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T13:56:02.901+03:00  INFO 15164 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T13:56:04.381+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:56:04.383+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:56:04.437+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.440+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.443+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.444+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.448+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.450+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.452+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.455+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.457+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.461+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T13:56:04.462+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 69 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T13:56:04.469+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:56:04.471+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T13:56:04.484+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.485+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.485+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.485+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.487+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.488+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.488+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.489+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.490+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.490+03:00  INFO 15164 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T13:56:04.491+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T13:56:04.502+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T13:56:04.504+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T13:56:04.715+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 205 ms. Found 10 JPA repository interfaces.
2025-08-22T13:56:05.073+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T13:56:05.713+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T13:56:05.732+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T13:56:05.733+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T13:56:05.830+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T13:56:05.831+03:00  INFO 15164 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2913 ms
2025-08-22T13:56:06.336+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T13:56:06.408+03:00  INFO 15164 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T13:56:06.457+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T13:56:06.576+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69356aca
2025-08-22T13:56:06.577+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69356aca
2025-08-22T13:56:06.577+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@69356aca
2025-08-22T13:56:06.577+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:56:06.578+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7a17ffee
2025-08-22T13:56:06.578+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ffc4195
2025-08-22T13:56:06.578+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ffc4195
2025-08-22T13:56:06.579+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ce760af
2025-08-22T13:56:06.579+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ce760af
2025-08-22T13:56:06.579+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:56:06.579+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:56:06.580+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3e4636c3
2025-08-22T13:56:06.581+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:56:06.581+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:56:06.581+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@7b6b466a
2025-08-22T13:56:06.582+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T13:56:06.582+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T13:56:06.582+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T13:56:06.582+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:56:06.583+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T13:56:06.583+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T13:56:06.583+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2aac87ab
2025-08-22T13:56:06.584+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@c14bbab
2025-08-22T13:56:06.584+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@c14bbab
2025-08-22T13:56:06.584+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@c14bbab
2025-08-22T13:56:06.584+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T13:56:06.585+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T13:56:06.585+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T13:56:06.585+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:56:06.586+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:56:06.586+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T13:56:06.586+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:56:06.587+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:56:06.587+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T13:56:06.588+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:56:06.588+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:56:06.588+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T13:56:06.589+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:56:06.589+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T13:56:06.590+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T13:56:06.590+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T13:56:06.590+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:56:06.591+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:56:06.591+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T13:56:06.592+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T13:56:06.592+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:56:06.592+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T13:56:06.593+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T13:56:06.594+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:56:06.595+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:56:06.595+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T13:56:06.596+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T13:56:06.597+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T13:56:06.597+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T13:56:06.597+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T13:56:06.598+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T13:56:06.599+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:56:06.599+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T13:56:06.600+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T13:56:06.600+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T13:56:06.600+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7e84a52b
2025-08-22T13:56:06.601+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@40199d5e
2025-08-22T13:56:06.601+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T13:56:06.602+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T13:56:06.602+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:56:06.602+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T13:56:06.603+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:56:06.603+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T13:56:06.603+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:56:06.604+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T13:56:06.604+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:56:06.604+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T13:56:06.605+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:56:06.605+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T13:56:06.606+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c31419f
2025-08-22T13:56:06.606+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43dddfdd
2025-08-22T13:56:06.606+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:56:06.607+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T13:56:06.607+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T13:56:06.607+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T13:56:06.608+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T13:56:06.608+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:56:06.608+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T13:56:06.609+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T13:56:06.609+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T13:56:06.610+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:56:06.611+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T13:56:06.611+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:56:06.611+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T13:56:06.612+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:56:06.612+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:56:06.612+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T13:56:06.612+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:56:06.613+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:56:06.613+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T13:56:06.613+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T13:56:06.614+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b4a2887
2025-08-22T13:56:06.614+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T13:56:06.614+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T13:56:06.614+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:56:06.614+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:56:06.615+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T13:56:06.615+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T13:56:06.615+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T13:56:06.615+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:56:06.615+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T13:56:06.616+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T13:56:06.616+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T13:56:06.616+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T13:56:06.616+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T13:56:06.616+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T13:56:06.617+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:56:06.617+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T13:56:06.617+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:56:06.617+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T13:56:06.618+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1c3a64b6
2025-08-22T13:56:06.618+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1c3a64b6
2025-08-22T13:56:06.618+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T13:56:06.618+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T13:56:06.619+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T13:56:06.619+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T13:56:06.619+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T13:56:06.619+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T13:56:06.620+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T13:56:06.627+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@32c8d67
2025-08-22T13:56:06.628+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@32c8d67
2025-08-22T13:56:06.630+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@59d09ff3
2025-08-22T13:56:06.630+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17d0d3d7
2025-08-22T13:56:06.630+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@39fc17be
2025-08-22T13:56:06.630+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@106edde4
2025-08-22T13:56:06.631+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4d9cf71d
2025-08-22T13:56:06.631+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5c43cb12
2025-08-22T13:56:06.631+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5db66c3
2025-08-22T13:56:06.631+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@633c0a61
2025-08-22T13:56:06.632+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@49322d04
2025-08-22T13:56:06.921+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T13:56:07.007+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T13:56:07.225+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11d0bff5
2025-08-22T13:56:07.227+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T13:56:07.330+03:00  INFO 15164 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T13:56:07.345+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3f7bf0f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@45430a27)
2025-08-22T13:56:07.346+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b83fac3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1500edf3)
2025-08-22T13:56:07.353+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T13:56:07.359+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T13:56:07.381+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1be3e952
2025-08-22T13:56:07.381+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1be3e952
2025-08-22T13:56:07.381+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@32c8d67`
2025-08-22T13:56:07.389+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T13:56:07.390+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:56:07.390+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T13:56:07.397+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:56:07.397+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:56:07.397+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T13:56:07.397+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:56:07.398+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:56:07.398+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T13:56:07.400+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:56:07.400+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:56:07.400+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T13:56:07.403+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48619f15] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@790ea58f]
2025-08-22T13:56:09.046+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T13:56:09.047+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48619f15] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1435b17]
2025-08-22T13:56:09.198+03:00 TRACE 15164 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1435b17] for TypeConfiguration
2025-08-22T13:56:09.198+03:00  INFO 15164 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:56:09.611+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T13:56:09.623+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:09.745+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:09.763+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T13:56:10.743+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:10.747+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:10.772+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:10.787+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:56:10.821+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.839+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T13:56:10.840+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.876+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T13:56:10.876+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.912+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:56:10.913+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.914+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:56:10.914+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.915+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T13:56:10.915+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.949+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:10.962+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:10.972+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:56:10.972+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.974+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:56:10.974+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.975+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:56:10.975+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:10.976+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T13:56:10.976+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.000+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:11.022+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:11.048+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:56:11.048+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.050+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:56:11.050+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.051+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:56:11.051+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.052+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:56:11.052+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.052+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T13:56:11.054+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.089+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T13:56:11.089+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.099+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T13:56:11.100+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.112+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T13:56:11.113+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.114+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T13:56:11.114+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.115+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T13:56:11.115+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T13:56:11.355+03:00  WARN 15164 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T13:56:12.611+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T13:56:12.680+03:00  INFO 15164 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T13:56:16.100+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2222/0x00000208d2cbe738@2f539c9b with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T13:56:16.123+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T13:56:16.999+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T13:56:16.999+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T13:56:17.002+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T13:56:17.173+03:00  INFO 15164 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T13:56:17.245+03:00  WARN 15164 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T13:56:17.553+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58045 (http) with context path '/'
2025-08-22T13:56:17.556+03:00  INFO 15164 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58045
2025-08-22T13:56:17.566+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T13:56:17.612+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T13:56:17.621+03:00  INFO 15164 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T13:56:17.641+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T13:56:17.641+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T13:56:17.641+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T13:56:17.641+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T13:56:17.641+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T13:56:17.642+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T13:56:17.642+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T13:56:18.041+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T13:56:18.046+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T13:56:18.049+03:00  INFO 15164 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T13:56:18.053+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755860178051 with initial instances count: 3
2025-08-22T13:56:18.059+03:00  INFO 15164 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T13:56:18.059+03:00  INFO 15164 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755860178059, current=UP, previous=STARTING]
2025-08-22T13:56:18.063+03:00  INFO 15164 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:56:18.137+03:00  INFO 15164 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:56:18.457+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 82ms, rows: 1
2025-08-22T13:56:18.486+03:00  INFO 15164 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    592300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    430900 nanoseconds spent preparing 1 JDBC statements;
    3539400 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    17926600 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    41700 nanoseconds spent executing 1 pre-partial-flushes;
    21600 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T13:56:18.492+03:00  INFO 15164 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 16.138 seconds (process running for 18.099)
2025-08-22T13:56:59.208+03:00  WARN 15164 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51s878ms178µs500ns).
2025-08-22T13:57:00.171+03:00 DEBUG 15164 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T13:57:00.244+03:00 TRACE 15164 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T13:57:00.262+03:00 TRACE 15164 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T13:57:04.466+03:00 TRACE 15164 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T13:57:04.468+03:00 TRACE 15164 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T13:57:04.476+03:00 TRACE 15164 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@5fed604d
2025-08-22T13:57:04.492+03:00 TRACE 15164 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T13:57:04.497+03:00 TRACE 15164 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@48d4189e
2025-08-22T13:57:04.500+03:00 TRACE 15164 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T13:57:04.511+03:00 TRACE 15164 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T13:57:04.518+03:00 TRACE 15164 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T13:57:05.188+03:00 TRACE 15164 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T13:57:05.192+03:00 TRACE 15164 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T13:57:05.193+03:00 TRACE 15164 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T13:57:35.990+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T13:57:35.991+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755860255991, current=DOWN, previous=UP]
2025-08-22T13:57:35.991+03:00  INFO 15164 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T13:57:35.995+03:00  INFO 15164 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T13:57:35.996+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T13:57:36.167+03:00  INFO 15164 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T13:57:36.180+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T13:57:36.181+03:00 TRACE 15164 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1435b17] for TypeConfiguration
2025-08-22T13:57:36.182+03:00 DEBUG 15164 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4ef2c986] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1435b17]
2025-08-22T13:57:36.184+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T13:57:36.207+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T13:57:36.209+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T13:57:39.223+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T13:57:39.239+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T13:57:39.240+03:00  INFO 15164 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:03:49.992+03:00  INFO 18600 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Starting AbstractTest using Java 17.0.12 with PID 18600 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:03:49.994+03:00  INFO 18600 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:03:51.486+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:03:51.488+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:03:51.547+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.550+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.553+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.555+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.558+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.560+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.563+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.565+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.568+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.571+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:03:51.572+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:03:51.579+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:03:51.580+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:03:51.593+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.594+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.594+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.595+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.595+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.596+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.597+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.597+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.598+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.599+03:00  INFO 18600 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:03:51.599+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:03:51.610+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:03:51.611+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:03:51.818+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 200 ms. Found 10 JPA repository interfaces.
2025-08-22T14:03:52.185+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:03:52.803+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:03:52.826+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:03:52.827+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:03:52.939+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:03:52.940+03:00  INFO 18600 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2924 ms
2025-08-22T14:03:53.406+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:03:53.477+03:00  INFO 18600 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:03:53.522+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:03:53.653+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T14:03:53.654+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T14:03:53.654+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6686507b
2025-08-22T14:03:53.654+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T14:03:53.655+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2123a61c
2025-08-22T14:03:53.655+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T14:03:53.655+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2e5c7cd5
2025-08-22T14:03:53.655+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T14:03:53.656+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@f252762
2025-08-22T14:03:53.656+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T14:03:53.656+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T14:03:53.656+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5b74bb75
2025-08-22T14:03:53.657+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T14:03:53.658+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T14:03:53.658+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@675bf541
2025-08-22T14:03:53.659+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T14:03:53.659+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@72c5064f
2025-08-22T14:03:53.659+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4a0c04ab
2025-08-22T14:03:53.659+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T14:03:53.660+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@453439e
2025-08-22T14:03:53.660+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2d33795c
2025-08-22T14:03:53.660+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@779ef5cb
2025-08-22T14:03:53.661+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T14:03:53.661+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T14:03:53.662+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5d9d8ecf
2025-08-22T14:03:53.662+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T14:03:53.663+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T14:03:53.663+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@43cc7951
2025-08-22T14:03:53.664+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T14:03:53.664+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T14:03:53.664+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@758311ed
2025-08-22T14:03:53.664+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T14:03:53.665+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T14:03:53.665+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7533923b
2025-08-22T14:03:53.665+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T14:03:53.666+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T14:03:53.666+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@446981a4
2025-08-22T14:03:53.666+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T14:03:53.667+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@644f6e89
2025-08-22T14:03:53.667+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T14:03:53.667+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@9ae0794
2025-08-22T14:03:53.667+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T14:03:53.667+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T14:03:53.668+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@60e5eed0
2025-08-22T14:03:53.668+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@680937c9
2025-08-22T14:03:53.668+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T14:03:53.668+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@77ad2767
2025-08-22T14:03:53.669+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@e460ca1
2025-08-22T14:03:53.669+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T14:03:53.669+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T14:03:53.669+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@411ae0d7
2025-08-22T14:03:53.670+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@608c2042
2025-08-22T14:03:53.670+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7e84a52b
2025-08-22T14:03:53.670+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@40199d5e
2025-08-22T14:03:53.671+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T14:03:53.671+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5693d1d2
2025-08-22T14:03:53.671+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T14:03:53.671+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@571c7572
2025-08-22T14:03:53.671+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c6a3f47
2025-08-22T14:03:53.672+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@15a0f9
2025-08-22T14:03:53.672+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4840ec68
2025-08-22T14:03:53.672+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7cc3a7f7
2025-08-22T14:03:53.672+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@210e2f2f
2025-08-22T14:03:53.672+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@c31419f
2025-08-22T14:03:53.673+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@43dddfdd
2025-08-22T14:03:53.673+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@43dddfdd
2025-08-22T14:03:53.673+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T14:03:53.673+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@22c0344e
2025-08-22T14:03:53.674+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T14:03:53.674+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7267006e
2025-08-22T14:03:53.674+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T14:03:53.674+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@745c8a04
2025-08-22T14:03:53.674+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T14:03:53.675+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@59d29065
2025-08-22T14:03:53.675+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a13ad55
2025-08-22T14:03:53.675+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@303db609
2025-08-22T14:03:53.675+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T14:03:53.676+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@20a116a0
2025-08-22T14:03:53.676+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6dbdeb69
2025-08-22T14:03:53.676+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a238a8e
2025-08-22T14:03:53.676+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5773f83d
2025-08-22T14:03:53.676+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T14:03:53.677+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7fcfe065
2025-08-22T14:03:53.677+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d2baa56
2025-08-22T14:03:53.677+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b4a2887
2025-08-22T14:03:53.677+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T14:03:53.678+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@23b087c3
2025-08-22T14:03:53.678+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T14:03:53.678+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@237c8718
2025-08-22T14:03:53.678+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T14:03:53.678+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T14:03:53.679+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@325e03b
2025-08-22T14:03:53.679+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T14:03:53.679+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T14:03:53.679+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3911fec8
2025-08-22T14:03:53.680+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e38e8b6
2025-08-22T14:03:53.680+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@59bbf82e
2025-08-22T14:03:53.680+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T14:03:53.681+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@75b3ef1a
2025-08-22T14:03:53.681+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T14:03:53.681+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T14:03:53.681+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@43e2b8da
2025-08-22T14:03:53.682+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1ac68548
2025-08-22T14:03:53.682+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c3a64b6
2025-08-22T14:03:53.682+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T14:03:53.682+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@761b9314
2025-08-22T14:03:53.682+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T14:03:53.683+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T14:03:53.683+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@20e9c165
2025-08-22T14:03:53.683+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T14:03:53.683+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@eabecf5
2025-08-22T14:03:53.683+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T14:03:53.684+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@417b3642
2025-08-22T14:03:53.684+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T14:03:53.684+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6bd28e4a
2025-08-22T14:03:53.684+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T14:03:53.684+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@55e88bc
2025-08-22T14:03:53.684+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@544300a6
2025-08-22T14:03:53.685+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@544300a6
2025-08-22T14:03:53.685+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4c12f54a
2025-08-22T14:03:53.685+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@334d825c
2025-08-22T14:03:53.685+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@42a7e7e1
2025-08-22T14:03:53.685+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@e2d9923
2025-08-22T14:03:53.686+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@554e9509
2025-08-22T14:03:53.692+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1b881f1f
2025-08-22T14:03:53.693+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1b881f1f
2025-08-22T14:03:53.695+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5db66c3
2025-08-22T14:03:53.696+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@633c0a61
2025-08-22T14:03:53.696+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@49322d04
2025-08-22T14:03:53.696+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b6b746b
2025-08-22T14:03:53.696+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@55d8f6bb
2025-08-22T14:03:53.696+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@56b48163
2025-08-22T14:03:53.697+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@eb6ccbc
2025-08-22T14:03:53.697+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5eae392d
2025-08-22T14:03:53.697+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4cd1716d
2025-08-22T14:03:54.025+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:03:54.069+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:03:54.270+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@623d222
2025-08-22T14:03:54.272+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:03:54.363+03:00  INFO 18600 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:03:54.372+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2c02cf78) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3e7fc07e)
2025-08-22T14:03:54.373+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29ebaf2f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a61f634)
2025-08-22T14:03:54.376+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:03:54.377+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:03:54.395+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56b66cc6
2025-08-22T14:03:54.395+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56b66cc6
2025-08-22T14:03:54.395+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1b881f1f`
2025-08-22T14:03:54.404+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:03:54.405+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:03:54.405+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:03:54.413+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:03:54.413+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:03:54.413+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:03:54.414+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:03:54.414+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:03:54.414+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:03:54.416+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:03:54.416+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:03:54.416+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:03:54.419+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e7b89b6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7f65639e]
2025-08-22T14:03:56.046+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:03:56.047+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e7b89b6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7a1148f2]
2025-08-22T14:03:56.177+03:00 TRACE 18600 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a1148f2] for TypeConfiguration
2025-08-22T14:03:56.177+03:00  INFO 18600 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:03:56.596+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:03:56.606+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:56.728+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:56.745+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:03:57.506+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:57.508+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:57.533+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:57.541+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:03:57.573+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.590+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:03:57.590+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.616+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:03:57.616+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.644+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:03:57.644+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.646+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:03:57.646+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.647+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:03:57.647+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.671+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:57.680+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:57.688+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:03:57.688+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.690+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:03:57.690+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.690+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:03:57.691+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.692+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:03:57.692+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.711+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:57.728+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:03:57.751+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:03:57.752+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.753+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:03:57.754+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.754+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:03:57.755+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.756+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:03:57.756+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.757+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:03:57.757+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.783+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:03:57.784+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.792+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:03:57.792+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.804+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:03:57.805+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.806+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:03:57.807+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:57.807+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:03:57.808+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:03:58.008+03:00  WARN 18600 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:03:59.283+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:03:59.348+03:00  INFO 18600 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:04:01.476+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2222/0x000001bc01cdb3f0@5a050bf9 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:04:01.497+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:04:02.339+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:04:02.340+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:04:02.343+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:04:02.513+03:00  INFO 18600 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:04:02.598+03:00  WARN 18600 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:04:02.894+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58094 (http) with context path '/'
2025-08-22T14:04:02.898+03:00  INFO 18600 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58094
2025-08-22T14:04:02.907+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:04:02.971+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:04:02.980+03:00  INFO 18600 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:04:02.996+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:04:02.997+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:04:02.997+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:04:02.997+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:04:02.997+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:04:02.997+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:04:02.998+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:04:03.398+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:04:03.403+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:04:03.407+03:00  INFO 18600 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:04:03.412+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755860643410 with initial instances count: 2
2025-08-22T14:04:03.420+03:00  INFO 18600 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:04:03.421+03:00  INFO 18600 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755860643421, current=UP, previous=STARTING]
2025-08-22T14:04:03.424+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:04:03.499+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:04:03.804+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 70ms, rows: 1
2025-08-22T14:04:03.839+03:00  INFO 18600 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    867700 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    348700 nanoseconds spent preparing 1 JDBC statements;
    3178000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    22629200 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    37400 nanoseconds spent executing 1 pre-partial-flushes;
    21600 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:04:03.845+03:00  INFO 18600 --- [DataStoreService] [Test worker] c.g.f.datastoreservice.AbstractTest      : Started AbstractTest in 14.376 seconds (process running for 16.278)
2025-08-22T14:09:21.820+03:00  WARN 18600 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m27s445ms543µs).
2025-08-22T14:09:21.825+03:00  INFO 18600 --- [DataStoreService] [AsyncResolver-bootstrap-executor-%d] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:09:27.787+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - Re-registering apps/DATASTORESERVICE
2025-08-22T14:09:27.787+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:09:27.793+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:09:27.935+03:00 DEBUG 18600 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:09:28.007+03:00 TRACE 18600 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:09:28.026+03:00 TRACE 18600 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:09:32.294+03:00 TRACE 18600 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:09:32.296+03:00 TRACE 18600 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:09:32.305+03:00 TRACE 18600 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@26426de8
2025-08-22T14:09:32.321+03:00 TRACE 18600 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:09:32.324+03:00 TRACE 18600 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@19eb658
2025-08-22T14:09:32.328+03:00 TRACE 18600 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:09:32.339+03:00 TRACE 18600 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:09:32.346+03:00 TRACE 18600 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:09:33.012+03:00 TRACE 18600 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:09:33.016+03:00 TRACE 18600 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:09:33.017+03:00 TRACE 18600 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:12:40.387+03:00  WARN 18600 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m18s567ms656µs400ns).
2025-08-22T14:12:45.301+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - Re-registering apps/DATASTORESERVICE
2025-08-22T14:12:45.302+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:12:45.306+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:12:45.343+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:12:45.343+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861165343, current=DOWN, previous=UP]
2025-08-22T14:12:45.343+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:12:45.347+03:00  INFO 18600 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:12:45.348+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:12:45.491+03:00  INFO 18600 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:12:45.502+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:12:45.503+03:00 TRACE 18600 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7a1148f2] for TypeConfiguration
2025-08-22T14:12:45.503+03:00 DEBUG 18600 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1f928a73] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a1148f2]
2025-08-22T14:12:45.507+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:12:45.522+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:12:45.524+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:12:48.533+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:12:48.551+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:12:48.551+03:00  INFO 18600 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:13:28.319+03:00  INFO 8612 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 8612 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:13:28.325+03:00  INFO 8612 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:13:29.883+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:13:29.887+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:13:29.948+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.950+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.953+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.956+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.959+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.961+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.964+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.966+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.968+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.971+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:13:29.973+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 75 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:13:29.979+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:13:29.980+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:13:29.991+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.992+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.992+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.993+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.993+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.993+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.994+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.994+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.995+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.995+03:00  INFO 8612 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:13:29.996+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:13:30.007+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:13:30.008+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:13:30.200+03:00  INFO 8612 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 186 ms. Found 10 JPA repository interfaces.
2025-08-22T14:13:30.561+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T14:13:32.325+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:13:32.408+03:00  INFO 8612 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:13:32.460+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:13:32.575+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T14:13:32.576+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T14:13:32.576+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T14:13:32.577+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4d071e4b
2025-08-22T14:13:32.577+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4d071e4b
2025-08-22T14:13:32.577+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b441609
2025-08-22T14:13:32.578+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b441609
2025-08-22T14:13:32.578+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@22f7bf36
2025-08-22T14:13:32.578+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@22f7bf36
2025-08-22T14:13:32.578+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a3404fa
2025-08-22T14:13:32.579+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a3404fa
2025-08-22T14:13:32.579+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4a3404fa
2025-08-22T14:13:32.580+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3fb4beb1
2025-08-22T14:13:32.580+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3fb4beb1
2025-08-22T14:13:32.581+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3fb4beb1
2025-08-22T14:13:32.581+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T14:13:32.581+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T14:13:32.582+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5b78a946
2025-08-22T14:13:32.582+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@37c762aa
2025-08-22T14:13:32.582+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@37c762aa
2025-08-22T14:13:32.582+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4c438f66
2025-08-22T14:13:32.583+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13087c75
2025-08-22T14:13:32.583+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@da4c5cb
2025-08-22T14:13:32.583+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@da4c5cb
2025-08-22T14:13:32.583+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@da4c5cb
2025-08-22T14:13:32.584+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1fa24e7
2025-08-22T14:13:32.584+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1fa24e7
2025-08-22T14:13:32.584+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1fa24e7
2025-08-22T14:13:32.584+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5192b301
2025-08-22T14:13:32.585+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5192b301
2025-08-22T14:13:32.585+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5192b301
2025-08-22T14:13:32.585+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1a99692
2025-08-22T14:13:32.586+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1a99692
2025-08-22T14:13:32.586+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1a99692
2025-08-22T14:13:32.586+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2a0881f1
2025-08-22T14:13:32.586+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2a0881f1
2025-08-22T14:13:32.587+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a0881f1
2025-08-22T14:13:32.587+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7a85454b
2025-08-22T14:13:32.587+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7a85454b
2025-08-22T14:13:32.587+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3ecbfba1
2025-08-22T14:13:32.588+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3ecbfba1
2025-08-22T14:13:32.588+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@739be7ec
2025-08-22T14:13:32.588+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@739be7ec
2025-08-22T14:13:32.589+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@739be7ec
2025-08-22T14:13:32.589+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1df2e767
2025-08-22T14:13:32.589+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4d0d568f
2025-08-22T14:13:32.589+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d0d568f
2025-08-22T14:13:32.589+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2c7aba7c
2025-08-22T14:13:32.590+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@729c98
2025-08-22T14:13:32.590+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@729c98
2025-08-22T14:13:32.590+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@729c98
2025-08-22T14:13:32.590+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@a319a2e
2025-08-22T14:13:32.591+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2daf0cc9
2025-08-22T14:13:32.591+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@54fffa5a
2025-08-22T14:13:32.591+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@407d2a01
2025-08-22T14:13:32.591+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@407d2a01
2025-08-22T14:13:32.592+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@461b38ca
2025-08-22T14:13:32.592+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@461b38ca
2025-08-22T14:13:32.592+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1387bd84
2025-08-22T14:13:32.592+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3881b884
2025-08-22T14:13:32.593+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1185b0b7
2025-08-22T14:13:32.593+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@ec70725
2025-08-22T14:13:32.593+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2082e0e4
2025-08-22T14:13:32.593+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@15f229e8
2025-08-22T14:13:32.593+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29ce33e9
2025-08-22T14:13:32.594+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29ce33e9
2025-08-22T14:13:32.594+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1f86f7da
2025-08-22T14:13:32.594+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1f86f7da
2025-08-22T14:13:32.594+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@28b4b10e
2025-08-22T14:13:32.595+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@28b4b10e
2025-08-22T14:13:32.595+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2c0d7099
2025-08-22T14:13:32.595+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2c0d7099
2025-08-22T14:13:32.595+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@74844f8a
2025-08-22T14:13:32.596+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@74844f8a
2025-08-22T14:13:32.596+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c945ee7
2025-08-22T14:13:32.596+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51a5a8ba
2025-08-22T14:13:32.596+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@16eb93af
2025-08-22T14:13:32.597+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@16eb93af
2025-08-22T14:13:32.597+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@404566e7
2025-08-22T14:13:32.597+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ed87b6e
2025-08-22T14:13:32.597+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4244e477
2025-08-22T14:13:32.598+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@8f8717b
2025-08-22T14:13:32.598+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@8f8717b
2025-08-22T14:13:32.598+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63614cdd
2025-08-22T14:13:32.599+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1e9f48d4
2025-08-22T14:13:32.599+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7b9d602c
2025-08-22T14:13:32.599+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7b9d602c
2025-08-22T14:13:32.599+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@30a5a58d
2025-08-22T14:13:32.599+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@30a5a58d
2025-08-22T14:13:32.600+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@59cb10e0
2025-08-22T14:13:32.600+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@59cb10e0
2025-08-22T14:13:32.600+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@59cb10e0
2025-08-22T14:13:32.600+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d763ae5
2025-08-22T14:13:32.601+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d763ae5
2025-08-22T14:13:32.601+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d763ae5
2025-08-22T14:13:32.601+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2dfab167
2025-08-22T14:13:32.602+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@30eee098
2025-08-22T14:13:32.602+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3123ba75
2025-08-22T14:13:32.602+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3123ba75
2025-08-22T14:13:32.602+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3d8e1fa6
2025-08-22T14:13:32.602+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3d8e1fa6
2025-08-22T14:13:32.603+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3d8e1fa6
2025-08-22T14:13:32.603+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4587f0f9
2025-08-22T14:13:32.603+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@22a22f1
2025-08-22T14:13:32.603+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2e76d0d3
2025-08-22T14:13:32.603+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2e76d0d3
2025-08-22T14:13:32.604+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63c88994
2025-08-22T14:13:32.604+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63c88994
2025-08-22T14:13:32.604+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63c88994
2025-08-22T14:13:32.604+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1932ad2c
2025-08-22T14:13:32.604+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1932ad2c
2025-08-22T14:13:32.604+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4adc3951
2025-08-22T14:13:32.605+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4adc3951
2025-08-22T14:13:32.605+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@52b49891
2025-08-22T14:13:32.605+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@52b49891
2025-08-22T14:13:32.605+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@75973f7a
2025-08-22T14:13:32.606+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@75973f7a
2025-08-22T14:13:32.606+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@7940b729
2025-08-22T14:13:32.606+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7940b729
2025-08-22T14:13:32.606+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@527d1fe1
2025-08-22T14:13:32.606+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@24fb752f
2025-08-22T14:13:32.607+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@68dbe225
2025-08-22T14:13:32.607+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@145ef9e8
2025-08-22T14:13:32.607+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2e667e95
2025-08-22T14:13:32.615+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@2ecf4b3e
2025-08-22T14:13:32.615+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ecf4b3e
2025-08-22T14:13:32.618+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@65880400
2025-08-22T14:13:32.618+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@415419a4
2025-08-22T14:13:32.618+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@65b69ccb
2025-08-22T14:13:32.618+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4a9f0360
2025-08-22T14:13:32.619+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f12b637
2025-08-22T14:13:32.619+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@eea0b48
2025-08-22T14:13:32.619+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5feb8e9a
2025-08-22T14:13:32.619+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6d5d1204
2025-08-22T14:13:32.619+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1784a296
2025-08-22T14:13:32.700+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:13:32.753+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:13:32.959+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e280006
2025-08-22T14:13:32.962+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:13:33.062+03:00  INFO 8612 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:13:33.071+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@8bd9d08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@189f3ccd)
2025-08-22T14:13:33.071+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2eb0932c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@82382d1)
2025-08-22T14:13:33.076+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:13:33.076+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:13:33.097+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@30a79476
2025-08-22T14:13:33.098+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@30a79476
2025-08-22T14:13:33.098+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2ecf4b3e`
2025-08-22T14:13:33.106+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:13:33.106+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:13:33.106+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:13:33.112+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:13:33.112+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:13:33.113+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:13:33.113+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:13:33.113+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:13:33.113+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:13:33.115+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:13:33.115+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:13:33.116+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:13:33.119+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@352d3749] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a3e8b68]
2025-08-22T14:13:34.615+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:13:34.616+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@352d3749] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@708f4d81]
2025-08-22T14:13:34.785+03:00 TRACE 8612 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@708f4d81] for TypeConfiguration
2025-08-22T14:13:34.786+03:00  INFO 8612 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:13:35.245+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:13:35.258+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:35.405+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:35.416+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:13:35.438+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:35.453+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:13:35.454+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:35.480+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:13:35.481+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:35.513+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:13:35.514+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:35.515+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:13:35.515+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:35.516+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:13:35.516+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:35.546+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:35.567+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:13:36.127+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:36.186+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:13:36.186+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.188+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:13:36.188+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.189+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:13:36.189+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.190+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:13:36.190+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.212+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:36.394+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:36.412+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:13:36.412+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.413+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:13:36.414+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.414+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:13:36.414+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.415+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:13:36.415+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.416+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:13:36.416+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.442+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:13:36.443+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.453+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:13:36.454+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.463+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:13:36.463+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.464+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:13:36.465+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.465+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:13:36.465+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:13:36.684+03:00  WARN 8612 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:13:37.909+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:13:37.974+03:00  INFO 8612 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:13:40.850+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2073/0x0000020790cba2a0@5f0469e2 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:13:40.876+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:13:41.841+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:41.848+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:41.852+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:41.990+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:13:41.990+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:13:41.993+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:13:42.157+03:00  INFO 8612 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:13:42.244+03:00  WARN 8612 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:13:42.380+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:13:42.470+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:13:42.479+03:00  INFO 8612 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:13:42.506+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:13:42.507+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:13:42.507+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:13:42.507+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:13:42.507+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:13:42.507+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:13:42.508+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:13:43.041+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:13:43.046+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:13:43.050+03:00  INFO 8612 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:13:43.054+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755861223052 with initial instances count: 2
2025-08-22T14:13:43.062+03:00  INFO 8612 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:13:43.063+03:00  INFO 8612 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861223063, current=UP, previous=STARTING]
2025-08-22T14:13:43.067+03:00  INFO 8612 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T14:13:43.163+03:00  INFO 8612 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T14:13:43.360+03:00 DEBUG 8612 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 81ms, rows: 1
2025-08-22T14:13:43.392+03:00  INFO 8612 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    720200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    215000 nanoseconds spent preparing 1 JDBC statements;
    4523500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    21019400 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    43700 nanoseconds spent executing 1 pre-partial-flushes;
    14200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:13:43.399+03:00  INFO 8612 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 15.667 seconds (process running for 17.562)
2025-08-22T14:13:43.502+03:00  WARN 8612 --- [DataStoreService] [Test worker] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests@371a3078]

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:515) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:405) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:156) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.springframework.util.PlaceholderResolutionException: Could not resolve placeholder 'local.server.port' in value "${local.server.port}"
	at org.springframework.util.PlaceholderResolutionException.withValue(PlaceholderResolutionException.java:81) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser$ParsedValue.resolve(PlaceholderParser.java:423) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser.replacePlaceholders(PlaceholderParser.java:128) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:118) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:114) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:293) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:264) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:186) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:971) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1650) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.9.jar:6.2.9]
	... 94 common frames omitted

2025-08-22T14:13:43.621+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:13:43.622+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861223622, current=DOWN, previous=UP]
2025-08-22T14:13:43.623+03:00  INFO 8612 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T14:13:43.630+03:00  INFO 8612 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T14:13:43.655+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:13:43.656+03:00 TRACE 8612 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@708f4d81] for TypeConfiguration
2025-08-22T14:13:43.657+03:00 DEBUG 8612 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5a39a941] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@708f4d81]
2025-08-22T14:13:43.659+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:13:43.673+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:13:43.677+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:13:46.686+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:13:46.704+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T14:13:46.705+03:00  INFO 8612 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:14:15.766+03:00  INFO 21088 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 21088 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:14:15.770+03:00  INFO 21088 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:14:17.268+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:14:17.272+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:14:17.331+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.334+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.337+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.339+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.342+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.345+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.347+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.350+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.353+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.355+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:14:17.357+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:14:17.363+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:14:17.364+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:14:17.376+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.377+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.378+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.378+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.378+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.379+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.379+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.380+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.380+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.381+03:00  INFO 21088 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:14:17.382+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:14:17.392+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:14:17.394+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:14:17.592+03:00  INFO 21088 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 189 ms. Found 10 JPA repository interfaces.
2025-08-22T14:14:17.957+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1aa6fd4-f669-385e-920a-6fd824673c92
2025-08-22T14:14:19.823+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:14:19.906+03:00  INFO 21088 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:14:19.962+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:14:20.096+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6a358906
2025-08-22T14:14:20.097+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6a358906
2025-08-22T14:14:20.097+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6a358906
2025-08-22T14:14:20.098+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@893081e
2025-08-22T14:14:20.098+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@893081e
2025-08-22T14:14:20.098+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a941fb4
2025-08-22T14:14:20.098+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a941fb4
2025-08-22T14:14:20.099+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@646ddc20
2025-08-22T14:14:20.099+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@646ddc20
2025-08-22T14:14:20.100+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T14:14:20.100+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T14:14:20.100+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@22561412
2025-08-22T14:14:20.101+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@32153bbe
2025-08-22T14:14:20.101+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@32153bbe
2025-08-22T14:14:20.102+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@32153bbe
2025-08-22T14:14:20.102+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@50e4d8cd
2025-08-22T14:14:20.103+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@50e4d8cd
2025-08-22T14:14:20.103+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4b37d1a4
2025-08-22T14:14:20.104+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@34114276
2025-08-22T14:14:20.104+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@34114276
2025-08-22T14:14:20.104+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73c6ae15
2025-08-22T14:14:20.105+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5923210
2025-08-22T14:14:20.105+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@70dd79f7
2025-08-22T14:14:20.106+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@70dd79f7
2025-08-22T14:14:20.106+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@70dd79f7
2025-08-22T14:14:20.106+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4ee19768
2025-08-22T14:14:20.107+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4ee19768
2025-08-22T14:14:20.107+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4ee19768
2025-08-22T14:14:20.107+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@8113ea7
2025-08-22T14:14:20.108+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@8113ea7
2025-08-22T14:14:20.108+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@8113ea7
2025-08-22T14:14:20.109+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1c879f07
2025-08-22T14:14:20.109+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1c879f07
2025-08-22T14:14:20.109+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1c879f07
2025-08-22T14:14:20.109+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@78e4fa1
2025-08-22T14:14:20.110+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@78e4fa1
2025-08-22T14:14:20.110+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78e4fa1
2025-08-22T14:14:20.110+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4516c2ef
2025-08-22T14:14:20.111+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4516c2ef
2025-08-22T14:14:20.111+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@44f338ec
2025-08-22T14:14:20.112+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@44f338ec
2025-08-22T14:14:20.112+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@64acf8d2
2025-08-22T14:14:20.113+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@64acf8d2
2025-08-22T14:14:20.113+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@64acf8d2
2025-08-22T14:14:20.113+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@112a50a1
2025-08-22T14:14:20.114+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6258f9d1
2025-08-22T14:14:20.114+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6258f9d1
2025-08-22T14:14:20.114+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3f31892e
2025-08-22T14:14:20.115+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3cd89c72
2025-08-22T14:14:20.116+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3cd89c72
2025-08-22T14:14:20.116+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3cd89c72
2025-08-22T14:14:20.116+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7fb46c10
2025-08-22T14:14:20.117+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5a079446
2025-08-22T14:14:20.117+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@694c0ed1
2025-08-22T14:14:20.117+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T14:14:20.118+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@118f2486
2025-08-22T14:14:20.118+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4d071e4b
2025-08-22T14:14:20.118+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4d071e4b
2025-08-22T14:14:20.119+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b441609
2025-08-22T14:14:20.119+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@22f7bf36
2025-08-22T14:14:20.120+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4a3404fa
2025-08-22T14:14:20.120+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3fb4beb1
2025-08-22T14:14:20.120+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@34cb1310
2025-08-22T14:14:20.120+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2b5a04b0
2025-08-22T14:14:20.120+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T14:14:20.121+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@41a3c6f5
2025-08-22T14:14:20.121+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b78a946
2025-08-22T14:14:20.121+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b78a946
2025-08-22T14:14:20.122+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@37c762aa
2025-08-22T14:14:20.122+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@37c762aa
2025-08-22T14:14:20.122+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4c438f66
2025-08-22T14:14:20.123+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4c438f66
2025-08-22T14:14:20.123+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@13087c75
2025-08-22T14:14:20.123+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@13087c75
2025-08-22T14:14:20.123+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@da4c5cb
2025-08-22T14:14:20.124+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1fa24e7
2025-08-22T14:14:20.124+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5192b301
2025-08-22T14:14:20.124+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5192b301
2025-08-22T14:14:20.124+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a99692
2025-08-22T14:14:20.125+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0881f1
2025-08-22T14:14:20.125+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a85454b
2025-08-22T14:14:20.125+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3ecbfba1
2025-08-22T14:14:20.126+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3ecbfba1
2025-08-22T14:14:20.126+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@739be7ec
2025-08-22T14:14:20.126+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1df2e767
2025-08-22T14:14:20.126+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4d0d568f
2025-08-22T14:14:20.127+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4d0d568f
2025-08-22T14:14:20.127+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2c7aba7c
2025-08-22T14:14:20.128+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c7aba7c
2025-08-22T14:14:20.128+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@729c98
2025-08-22T14:14:20.128+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@729c98
2025-08-22T14:14:20.128+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@729c98
2025-08-22T14:14:20.129+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@a319a2e
2025-08-22T14:14:20.129+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@a319a2e
2025-08-22T14:14:20.129+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@a319a2e
2025-08-22T14:14:20.129+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2daf0cc9
2025-08-22T14:14:20.129+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@54fffa5a
2025-08-22T14:14:20.130+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@407d2a01
2025-08-22T14:14:20.130+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@407d2a01
2025-08-22T14:14:20.130+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@461b38ca
2025-08-22T14:14:20.130+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@461b38ca
2025-08-22T14:14:20.130+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@461b38ca
2025-08-22T14:14:20.131+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1387bd84
2025-08-22T14:14:20.131+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3881b884
2025-08-22T14:14:20.131+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1185b0b7
2025-08-22T14:14:20.131+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1185b0b7
2025-08-22T14:14:20.132+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@ec70725
2025-08-22T14:14:20.132+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@ec70725
2025-08-22T14:14:20.132+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@ec70725
2025-08-22T14:14:20.132+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2082e0e4
2025-08-22T14:14:20.133+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2082e0e4
2025-08-22T14:14:20.133+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@15f229e8
2025-08-22T14:14:20.133+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@15f229e8
2025-08-22T14:14:20.133+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@29ce33e9
2025-08-22T14:14:20.133+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@29ce33e9
2025-08-22T14:14:20.134+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1f86f7da
2025-08-22T14:14:20.134+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1f86f7da
2025-08-22T14:14:20.134+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@28b4b10e
2025-08-22T14:14:20.134+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@28b4b10e
2025-08-22T14:14:20.135+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2c0d7099
2025-08-22T14:14:20.135+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@74844f8a
2025-08-22T14:14:20.135+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5c945ee7
2025-08-22T14:14:20.136+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@51a5a8ba
2025-08-22T14:14:20.136+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16eb93af
2025-08-22T14:14:20.143+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@46a9c368
2025-08-22T14:14:20.144+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@46a9c368
2025-08-22T14:14:20.146+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@21dd91da
2025-08-22T14:14:20.147+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1f251bf1
2025-08-22T14:14:20.147+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@502b9399
2025-08-22T14:14:20.147+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@433db56d
2025-08-22T14:14:20.148+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@e23af91
2025-08-22T14:14:20.148+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@396ec737
2025-08-22T14:14:20.148+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@35d53cd8
2025-08-22T14:14:20.148+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1bed61d2
2025-08-22T14:14:20.148+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@8a11a19
2025-08-22T14:14:20.256+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:14:20.307+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:14:20.553+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@26723525
2025-08-22T14:14:20.557+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:14:20.660+03:00  INFO 21088 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:14:20.675+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3d0ce151) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@58a0f75b)
2025-08-22T14:14:20.675+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b569858) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b84d03d)
2025-08-22T14:14:20.680+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:14:20.681+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:14:20.698+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@285ac29
2025-08-22T14:14:20.698+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@285ac29
2025-08-22T14:14:20.698+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@46a9c368`
2025-08-22T14:14:20.708+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:14:20.708+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:14:20.708+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:14:20.715+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:14:20.716+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:14:20.716+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:14:20.716+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:14:20.716+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:14:20.716+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:14:20.717+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:14:20.718+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:14:20.718+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:14:20.720+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a9d572] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a5df98c]
2025-08-22T14:14:22.699+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:14:22.701+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a9d572] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@75225415]
2025-08-22T14:14:22.929+03:00 TRACE 21088 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@75225415] for TypeConfiguration
2025-08-22T14:14:22.930+03:00  INFO 21088 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:14:23.581+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:14:23.598+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:23.792+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:23.812+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:14:23.846+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:23.870+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:14:23.871+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:23.915+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:14:23.915+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:23.957+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:14:23.957+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:23.960+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:14:23.961+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:23.962+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:14:23.962+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:24.014+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:24.036+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:14:24.957+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:24.977+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:14:24.977+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:24.980+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:14:24.980+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:24.981+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:14:24.982+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:24.983+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:14:24.984+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.017+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:25.282+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:25.325+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:14:25.326+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.328+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:14:25.329+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.329+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:14:25.330+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.332+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:14:25.333+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.334+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:14:25.335+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.376+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:14:25.377+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.389+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:14:25.389+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.405+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:14:25.405+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.407+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:14:25.408+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.408+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:14:25.409+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:14:25.706+03:00  WARN 21088 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:14:27.192+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:14:27.252+03:00  INFO 21088 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:14:30.301+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2073/0x0000019e01cda2a0@4ce9fe4d with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:14:30.331+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:14:31.299+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:31.306+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:31.310+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:31.432+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:14:31.433+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:14:31.435+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T14:14:31.614+03:00  INFO 21088 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:14:31.695+03:00  WARN 21088 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:14:31.825+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:14:31.879+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:14:31.886+03:00  INFO 21088 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:14:31.903+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:14:31.904+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:14:31.904+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:14:31.904+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:14:31.904+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:14:31.904+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:14:31.904+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:14:32.410+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:14:32.414+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:14:32.419+03:00  INFO 21088 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:14:32.422+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755861272421 with initial instances count: 1
2025-08-22T14:14:32.431+03:00  INFO 21088 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:14:32.432+03:00  INFO 21088 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861272432, current=UP, previous=STARTING]
2025-08-22T14:14:32.436+03:00  INFO 21088 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T14:14:32.506+03:00  INFO 21088 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T14:14:32.692+03:00 DEBUG 21088 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 60ms, rows: 1
2025-08-22T14:14:32.723+03:00  INFO 21088 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    686900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    237800 nanoseconds spent preparing 1 JDBC statements;
    3154900 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    19108900 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    79400 nanoseconds spent executing 1 pre-partial-flushes;
    15400 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:14:32.729+03:00  INFO 21088 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.537 seconds (process running for 19.446)
2025-08-22T14:14:32.848+03:00  WARN 21088 --- [DataStoreService] [Test worker] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests@6e0ae02d]

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:515) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:405) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:156) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.springframework.util.PlaceholderResolutionException: Could not resolve placeholder 'local.server.port' in value "${local.server.port}"
	at org.springframework.util.PlaceholderResolutionException.withValue(PlaceholderResolutionException.java:81) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser$ParsedValue.resolve(PlaceholderParser.java:423) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PlaceholderParser.replacePlaceholders(PlaceholderParser.java:128) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:118) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:114) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:293) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:264) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:186) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:971) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1650) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.9.jar:6.2.9]
	... 94 common frames omitted

2025-08-22T14:14:32.959+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:14:32.960+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861272960, current=DOWN, previous=UP]
2025-08-22T14:14:32.963+03:00  INFO 21088 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080: registering service...
2025-08-22T14:14:32.972+03:00  INFO 21088 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - registration status: 204
2025-08-22T14:14:32.990+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:14:32.991+03:00 TRACE 21088 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@75225415] for TypeConfiguration
2025-08-22T14:14:32.991+03:00 DEBUG 21088 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3c4afda3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@75225415]
2025-08-22T14:14:32.994+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:14:33.000+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:14:33.002+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:14:36.020+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:14:36.039+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:8080 - deregister  status: 200
2025-08-22T14:14:36.040+03:00  INFO 21088 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:15:29.201+03:00  INFO 19872 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 19872 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:15:29.203+03:00  INFO 19872 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:15:30.691+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:15:30.694+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:15:30.751+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.754+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.757+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.760+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.763+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.765+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.768+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.771+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.774+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.777+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:15:30.778+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 75 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:15:30.789+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:15:30.790+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:15:30.800+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.800+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.801+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.801+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.802+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.802+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.803+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.803+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.804+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.804+03:00  INFO 19872 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:15:30.805+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:15:30.817+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:15:30.819+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:15:31.071+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 243 ms. Found 10 JPA repository interfaces.
2025-08-22T14:15:31.464+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:15:33.443+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:15:33.466+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:15:33.466+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:15:33.585+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:15:33.586+03:00  INFO 19872 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4360 ms
2025-08-22T14:15:34.131+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:15:34.210+03:00  INFO 19872 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:15:34.262+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:15:34.392+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:15:34.393+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:15:34.393+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:15:34.394+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:15:34.394+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:15:34.394+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:15:34.395+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:15:34.395+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:15:34.395+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:15:34.395+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:15:34.396+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:15:34.397+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:15:34.398+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:15:34.399+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:15:34.400+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:15:34.400+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:15:34.401+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:15:34.402+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:15:34.402+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:15:34.403+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:15:34.403+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:15:34.404+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:15:34.415+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:15:34.416+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:15:34.416+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:15:34.416+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:15:34.417+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:15:34.417+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:15:34.417+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:15:34.417+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:15:34.418+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:15:34.418+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:15:34.418+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:15:34.418+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:15:34.419+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:15:34.419+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:15:34.419+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:15:34.419+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:15:34.419+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:15:34.420+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:15:34.420+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:15:34.420+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:15:34.420+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:15:34.421+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:15:34.421+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:15:34.421+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:15:34.422+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:15:34.422+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:15:34.422+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:15:34.423+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:15:34.423+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:15:34.423+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:15:34.423+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:15:34.423+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:15:34.423+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:15:34.424+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:15:34.424+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:15:34.424+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:15:34.424+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:15:34.424+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:15:34.425+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:15:34.425+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:15:34.425+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:15:34.425+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:15:34.426+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:15:34.426+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:15:34.426+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:15:34.426+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:15:34.427+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:15:34.427+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:15:34.427+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:15:34.427+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:15:34.427+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:15:34.427+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:15:34.428+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:15:34.428+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40304938
2025-08-22T14:15:34.428+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1d160161
2025-08-22T14:15:34.428+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1d160161
2025-08-22T14:15:34.428+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6c9e7af2
2025-08-22T14:15:34.428+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48cbb4c5
2025-08-22T14:15:34.429+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@af04d6d
2025-08-22T14:15:34.429+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2740585b
2025-08-22T14:15:34.429+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2740585b
2025-08-22T14:15:34.429+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3816efab
2025-08-22T14:15:34.429+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d6e09f0
2025-08-22T14:15:34.429+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@257da215
2025-08-22T14:15:34.430+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@257da215
2025-08-22T14:15:34.430+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@5aa461
2025-08-22T14:15:34.430+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5aa461
2025-08-22T14:15:34.430+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@f3e6876
2025-08-22T14:15:34.430+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@f3e6876
2025-08-22T14:15:34.430+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@f3e6876
2025-08-22T14:15:34.431+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@52c2d1e8
2025-08-22T14:15:34.431+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@52c2d1e8
2025-08-22T14:15:34.431+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@52c2d1e8
2025-08-22T14:15:34.431+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1a67bcaf
2025-08-22T14:15:34.431+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4f4b7a2e
2025-08-22T14:15:34.431+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@334ac669
2025-08-22T14:15:34.432+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@334ac669
2025-08-22T14:15:34.432+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@77430c79
2025-08-22T14:15:34.432+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@77430c79
2025-08-22T14:15:34.432+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@77430c79
2025-08-22T14:15:34.432+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@506654fa
2025-08-22T14:15:34.432+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4468ced2
2025-08-22T14:15:34.433+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@21f421b8
2025-08-22T14:15:34.433+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@21f421b8
2025-08-22T14:15:34.433+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4e3bc13b
2025-08-22T14:15:34.433+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4e3bc13b
2025-08-22T14:15:34.433+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4e3bc13b
2025-08-22T14:15:34.433+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2c989d82
2025-08-22T14:15:34.434+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2c989d82
2025-08-22T14:15:34.434+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2e04c89d
2025-08-22T14:15:34.434+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2e04c89d
2025-08-22T14:15:34.434+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e7dd504
2025-08-22T14:15:34.435+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e7dd504
2025-08-22T14:15:34.435+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3e5febe9
2025-08-22T14:15:34.435+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3e5febe9
2025-08-22T14:15:34.435+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5643052d
2025-08-22T14:15:34.436+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5643052d
2025-08-22T14:15:34.436+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5e0b7f58
2025-08-22T14:15:34.436+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@1e9e4468
2025-08-22T14:15:34.436+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5fdff4f1
2025-08-22T14:15:34.436+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@117be84a
2025-08-22T14:15:34.436+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@140fa482
2025-08-22T14:15:34.448+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@31c800a5
2025-08-22T14:15:34.448+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@31c800a5
2025-08-22T14:15:34.450+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@751526a7
2025-08-22T14:15:34.451+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2279e7c7
2025-08-22T14:15:34.451+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4c5e123d
2025-08-22T14:15:34.451+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@69542112
2025-08-22T14:15:34.452+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35a81281
2025-08-22T14:15:34.452+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@58829c2c
2025-08-22T14:15:34.452+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64f1b2fb
2025-08-22T14:15:34.452+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2c6553c6
2025-08-22T14:15:34.452+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@59ac60d1
2025-08-22T14:15:34.524+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:15:34.570+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:15:34.788+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c2063e0
2025-08-22T14:15:34.791+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:15:34.894+03:00  INFO 19872 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:15:34.904+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@51bd10f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@47d7e8b5)
2025-08-22T14:15:34.904+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ce71bbb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@661d49d1)
2025-08-22T14:15:34.914+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:15:34.915+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:15:34.933+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@55f29d39
2025-08-22T14:15:34.934+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@55f29d39
2025-08-22T14:15:34.934+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@31c800a5`
2025-08-22T14:15:34.943+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:15:34.943+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:15:34.943+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:15:34.950+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:15:34.950+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:15:34.951+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:15:34.951+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:15:34.951+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:15:34.951+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:15:34.953+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:15:34.954+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:15:34.954+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:15:34.957+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b8d1537] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@497cf31a]
2025-08-22T14:15:36.848+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:15:36.850+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b8d1537] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@31c87223]
2025-08-22T14:15:37.082+03:00 TRACE 19872 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@31c87223] for TypeConfiguration
2025-08-22T14:15:37.083+03:00  INFO 19872 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:15:37.646+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:15:37.678+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:37.831+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:37.842+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:15:37.871+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:37.893+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:15:37.893+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:37.933+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:15:37.934+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:37.979+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:15:37.979+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:37.981+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:15:37.981+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:37.982+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:15:37.982+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:38.030+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:38.057+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:15:38.930+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:38.955+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:15:38.955+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:38.957+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:15:38.959+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:38.960+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:15:38.960+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:38.961+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:15:38.961+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:38.993+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:39.254+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:39.286+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:15:39.287+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.288+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:15:39.289+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.289+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:15:39.290+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.290+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:15:39.291+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.291+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:15:39.291+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.335+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:15:39.335+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.348+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:15:39.348+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.362+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:15:39.363+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.364+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:15:39.365+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.365+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:15:39.365+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:15:39.506+03:00  WARN 19872 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:15:40.805+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:15:40.871+03:00  INFO 19872 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:15:43.768+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2249/0x0000023910d499f8@719a103e with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:15:43.798+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:15:44.576+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:44.584+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:44.588+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:44.688+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:15:44.689+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:15:44.692+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:15:44.858+03:00  INFO 19872 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:15:44.935+03:00  WARN 19872 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:15:45.235+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58197 (http) with context path '/'
2025-08-22T14:15:45.238+03:00  INFO 19872 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58197
2025-08-22T14:15:45.248+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:15:45.296+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:15:45.304+03:00  INFO 19872 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:15:45.324+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:15:45.325+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:15:45.325+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:15:45.325+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:15:45.325+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:15:45.325+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:15:45.325+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:15:45.783+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:15:45.787+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:15:45.794+03:00  INFO 19872 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:15:45.799+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755861345797 with initial instances count: 2
2025-08-22T14:15:45.805+03:00  INFO 19872 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:15:45.806+03:00  INFO 19872 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861345806, current=UP, previous=STARTING]
2025-08-22T14:15:45.809+03:00  INFO 19872 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:15:45.883+03:00  INFO 19872 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:15:46.181+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 63ms, rows: 1
2025-08-22T14:15:46.215+03:00  INFO 19872 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    729000 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    345300 nanoseconds spent preparing 1 JDBC statements;
    3526200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    21047500 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    32400 nanoseconds spent executing 1 pre-partial-flushes;
    15300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:15:46.224+03:00  INFO 19872 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.595 seconds (process running for 19.583)
2025-08-22T14:15:51.491+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:15:51.569+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T14:15:51.570+03:00 DEBUG 19872 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:18:33.968+03:00  INFO 20660 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 20660 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:18:33.970+03:00  INFO 20660 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:18:35.513+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:18:35.516+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:18:35.571+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.574+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.577+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.579+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.582+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.585+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.587+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.590+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.592+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.595+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:18:35.596+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:18:35.603+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:18:35.604+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:18:35.614+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.614+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.615+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.616+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.616+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.617+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.618+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.619+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.619+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.620+03:00  INFO 20660 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:18:35.620+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:18:35.629+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:18:35.631+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:18:35.830+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 192 ms. Found 10 JPA repository interfaces.
2025-08-22T14:18:36.216+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:18:38.100+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:18:38.120+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:18:38.121+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:18:38.225+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:18:38.226+03:00  INFO 20660 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4237 ms
2025-08-22T14:18:38.708+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:18:38.785+03:00  INFO 20660 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:18:38.849+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:18:38.968+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:18:38.969+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:18:38.969+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:18:38.970+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:18:38.972+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:18:38.973+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:18:38.973+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:18:38.974+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:18:38.974+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:18:38.974+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:18:38.975+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:18:38.975+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:18:38.976+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:18:38.977+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:18:38.977+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:18:38.986+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:18:38.986+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:18:38.987+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:18:38.987+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:18:38.987+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:18:38.987+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:18:38.987+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:18:38.987+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:18:38.988+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:18:38.988+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:18:38.988+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:18:38.989+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:18:38.990+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:18:38.990+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:18:38.990+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:18:38.990+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:18:38.990+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:18:38.991+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:18:38.991+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:18:38.991+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:18:38.991+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:18:38.991+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:18:38.992+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:18:38.992+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:18:38.992+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:18:38.992+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:18:38.992+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:18:38.993+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:18:38.993+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:18:38.993+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:18:38.993+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:18:38.993+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:18:38.994+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:18:38.994+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:18:38.994+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:18:38.994+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:18:38.994+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:18:38.995+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:18:38.995+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:18:38.995+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:18:38.995+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:18:38.995+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:18:38.996+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:18:38.997+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:18:38.997+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:18:38.998+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:18:38.998+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:18:38.998+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:18:38.998+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:18:38.999+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:18:38.999+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:18:38.999+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:18:38.999+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:18:38.999+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:18:38.999+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:18:39.000+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:18:39.000+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:18:39.000+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:18:39.001+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:18:39.001+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:18:39.001+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:18:39.001+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:18:39.001+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:18:39.002+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:18:39.002+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:18:39.002+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:18:39.002+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:18:39.002+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:18:39.003+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:18:39.003+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:18:39.003+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:18:39.003+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:18:39.004+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:18:39.004+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:18:39.004+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:18:39.005+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:18:39.005+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:18:39.005+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:18:39.006+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:18:39.006+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:18:39.006+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:18:39.006+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:18:39.006+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:18:39.006+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:18:39.007+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:18:39.007+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:18:39.007+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:18:39.007+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@40304938
2025-08-22T14:18:39.007+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1d160161
2025-08-22T14:18:39.008+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@6c9e7af2
2025-08-22T14:18:39.008+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6c9e7af2
2025-08-22T14:18:39.008+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@48cbb4c5
2025-08-22T14:18:39.008+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@48cbb4c5
2025-08-22T14:18:39.008+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@48cbb4c5
2025-08-22T14:18:39.008+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@af04d6d
2025-08-22T14:18:39.009+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@af04d6d
2025-08-22T14:18:39.009+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2740585b
2025-08-22T14:18:39.009+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2740585b
2025-08-22T14:18:39.009+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3816efab
2025-08-22T14:18:39.009+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3816efab
2025-08-22T14:18:39.010+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d6e09f0
2025-08-22T14:18:39.010+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d6e09f0
2025-08-22T14:18:39.010+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@257da215
2025-08-22T14:18:39.010+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@257da215
2025-08-22T14:18:39.010+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5aa461
2025-08-22T14:18:39.010+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@f3e6876
2025-08-22T14:18:39.011+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@52c2d1e8
2025-08-22T14:18:39.011+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@1a67bcaf
2025-08-22T14:18:39.011+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4f4b7a2e
2025-08-22T14:18:39.022+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3b8c15de
2025-08-22T14:18:39.022+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3b8c15de
2025-08-22T14:18:39.025+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4ed74d03
2025-08-22T14:18:39.026+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7ec729be
2025-08-22T14:18:39.026+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f7da3a2
2025-08-22T14:18:39.026+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@24ea71d
2025-08-22T14:18:39.027+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@76055d02
2025-08-22T14:18:39.027+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@31c800a5
2025-08-22T14:18:39.028+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@130ad58d
2025-08-22T14:18:39.028+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@648bfebe
2025-08-22T14:18:39.028+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@383a5260
2025-08-22T14:18:39.105+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:18:39.166+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:18:39.401+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19983dd1
2025-08-22T14:18:39.404+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:18:39.501+03:00  INFO 20660 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:18:39.511+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@65374526) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@664c0466)
2025-08-22T14:18:39.511+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2edc6690) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ceeb592)
2025-08-22T14:18:39.515+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:18:39.515+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:18:39.532+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@17e2ad13
2025-08-22T14:18:39.532+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17e2ad13
2025-08-22T14:18:39.533+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3b8c15de`
2025-08-22T14:18:39.542+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:18:39.543+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:18:39.543+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:18:39.550+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:18:39.550+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:18:39.551+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:18:39.551+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:18:39.551+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:18:39.551+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:18:39.553+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:18:39.554+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:18:39.554+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:18:39.556+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3619bc9e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e640411]
2025-08-22T14:18:41.024+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:18:41.025+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3619bc9e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2ff30a75]
2025-08-22T14:18:41.185+03:00 TRACE 20660 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2ff30a75] for TypeConfiguration
2025-08-22T14:18:41.186+03:00  INFO 20660 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:18:41.642+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:18:41.660+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:41.868+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:41.882+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:18:41.921+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:41.943+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:18:41.944+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:41.977+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:18:41.978+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:42.018+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:18:42.018+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:42.020+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:18:42.021+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:42.064+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:42.091+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:18:42.866+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:42.882+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:18:42.882+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:42.884+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:18:42.884+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:42.885+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:18:42.886+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:42.886+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:18:42.887+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:42.913+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:43.273+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:43.293+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:18:43.294+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.295+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:18:43.296+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.296+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:18:43.297+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.297+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:18:43.298+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.298+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:18:43.299+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.330+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:18:43.330+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.342+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:18:43.343+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.355+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:18:43.356+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.357+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:18:43.358+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.358+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:18:43.359+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:18:43.535+03:00  WARN 20660 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:18:44.839+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:18:44.920+03:00  INFO 20660 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:18:47.662+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x0000019f10d462e0@54ba4478 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:18:47.693+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:18:48.530+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:48.535+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:48.539+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:48.650+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:18:48.650+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:18:48.653+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T14:18:48.836+03:00  INFO 20660 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:18:48.935+03:00  WARN 20660 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:18:49.245+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58230 (http) with context path '/'
2025-08-22T14:18:49.249+03:00  INFO 20660 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58230
2025-08-22T14:18:49.260+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:18:49.309+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:18:49.316+03:00  INFO 20660 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:18:49.333+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:18:49.333+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:18:49.334+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:18:49.334+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:18:49.334+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:18:49.334+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:18:49.335+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:18:49.840+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:18:49.845+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:18:49.849+03:00  INFO 20660 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:18:49.855+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755861529852 with initial instances count: 2
2025-08-22T14:18:49.865+03:00  INFO 20660 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:18:49.866+03:00  INFO 20660 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861529866, current=UP, previous=STARTING]
2025-08-22T14:18:49.870+03:00  INFO 20660 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:18:49.959+03:00  INFO 20660 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:18:50.324+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 61ms, rows: 1
2025-08-22T14:18:50.358+03:00  INFO 20660 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    821200 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    238500 nanoseconds spent preparing 1 JDBC statements;
    3405200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    21690300 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    52100 nanoseconds spent executing 1 pre-partial-flushes;
    37300 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:18:50.364+03:00  INFO 20660 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.94 seconds (process running for 18.877)
2025-08-22T14:19:00.071+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:19:00.141+03:00 TRACE 20660 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:19:00.160+03:00 TRACE 20660 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:19:04.617+03:00 TRACE 20660 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:19:04.619+03:00 TRACE 20660 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:19:04.630+03:00 TRACE 20660 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@71499df0
2025-08-22T14:19:04.646+03:00 TRACE 20660 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:19:04.650+03:00 TRACE 20660 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@440c71e
2025-08-22T14:19:04.653+03:00 TRACE 20660 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:19:04.665+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:19:04.672+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:19:05.397+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:19:05.401+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:19:05.403+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:19:22.620+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:19:22.621+03:00 TRACE 20660 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:19:22.622+03:00 TRACE 20660 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:19:22.890+03:00 TRACE 20660 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:19:22.890+03:00 TRACE 20660 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:19:22.891+03:00 TRACE 20660 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@71499df0
2025-08-22T14:19:22.891+03:00 TRACE 20660 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:19:22.892+03:00 TRACE 20660 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@440c71e
2025-08-22T14:19:22.892+03:00 TRACE 20660 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:19:22.892+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:19:22.893+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:19:22.895+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:19:22.895+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:19:22.895+03:00 TRACE 20660 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:19:29.537+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:19:29.540+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T14:19:29.541+03:00 DEBUG 20660 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:19:29.646+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:19:29.648+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861569648, current=DOWN, previous=UP]
2025-08-22T14:19:29.648+03:00  INFO 20660 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:19:29.655+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:19:29.665+03:00  INFO 20660 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:19:29.814+03:00  INFO 20660 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:19:29.826+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:19:29.828+03:00 TRACE 20660 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2ff30a75] for TypeConfiguration
2025-08-22T14:19:29.828+03:00 DEBUG 20660 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3cbddb6c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2ff30a75]
2025-08-22T14:19:29.830+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:19:29.852+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:19:29.854+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:19:32.861+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:19:32.879+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:19:32.880+03:00  INFO 20660 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:19:50.751+03:00  INFO 21104 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 21104 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:19:50.754+03:00  INFO 21104 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:19:52.238+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:19:52.241+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:19:52.304+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.307+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.310+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.312+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.314+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.317+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.319+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.322+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.324+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.327+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:19:52.329+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 75 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:19:52.335+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:19:52.336+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:19:52.346+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.346+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.347+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.347+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.347+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.348+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.348+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.349+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.349+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.350+03:00  INFO 21104 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:19:52.350+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:19:52.360+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:19:52.361+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:19:52.562+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 193 ms. Found 10 JPA repository interfaces.
2025-08-22T14:19:52.927+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:19:54.789+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:19:54.809+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:19:54.810+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:19:54.924+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:19:54.925+03:00  INFO 21104 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4153 ms
2025-08-22T14:19:55.464+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:19:55.553+03:00  INFO 21104 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:19:55.631+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:19:55.773+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:19:55.773+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:19:55.774+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:19:55.774+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:19:55.774+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:19:55.775+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:19:55.775+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:19:55.776+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:19:55.776+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:19:55.776+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:19:55.776+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:19:55.777+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:19:55.778+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:19:55.778+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:19:55.779+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:19:55.779+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:19:55.779+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:19:55.780+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:19:55.780+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:19:55.780+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:19:55.781+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:19:55.781+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:19:55.781+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:19:55.781+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:19:55.782+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:19:55.782+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:19:55.782+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:19:55.782+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:19:55.783+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:19:55.783+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:19:55.783+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:19:55.783+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:19:55.784+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:19:55.784+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:19:55.784+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:19:55.784+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:19:55.784+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:19:55.785+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:19:55.785+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:19:55.785+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:19:55.786+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:19:55.786+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:19:55.786+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:19:55.786+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:19:55.787+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:19:55.787+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:19:55.787+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:19:55.787+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:19:55.788+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:19:55.788+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:19:55.788+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:19:55.789+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:19:55.789+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:19:55.789+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:19:55.789+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:19:55.790+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:19:55.790+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:19:55.790+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:19:55.790+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:19:55.791+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:19:55.791+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:19:55.791+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:19:55.792+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:19:55.792+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:19:55.792+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:19:55.792+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:19:55.793+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:19:55.793+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:19:55.793+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:19:55.793+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:19:55.793+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:19:55.794+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:19:55.794+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:19:55.794+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:19:55.794+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:19:55.794+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:19:55.795+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:19:55.795+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:19:55.795+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:19:55.795+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:19:55.795+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:19:55.796+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:19:55.796+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:19:55.796+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:19:55.797+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:19:55.797+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:19:55.797+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:19:55.798+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:19:55.798+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:19:55.798+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:19:55.798+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:19:55.799+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:19:55.799+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:19:55.799+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:19:55.800+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:19:55.800+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:19:55.800+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:19:55.800+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:19:55.800+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:19:55.801+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:19:55.801+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:19:55.801+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:19:55.801+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:19:55.802+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:19:55.802+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:19:55.802+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:19:55.803+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:19:55.803+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:19:55.803+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:19:55.803+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:19:55.804+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:19:55.804+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:19:55.804+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:19:55.804+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:19:55.805+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:19:55.805+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:19:55.805+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:19:55.806+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:19:55.806+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:19:55.806+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:19:55.806+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:19:55.806+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:19:55.807+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:19:55.807+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@40304938
2025-08-22T14:19:55.814+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@7fb28ed
2025-08-22T14:19:55.814+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fb28ed
2025-08-22T14:19:55.816+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@24ccc91b
2025-08-22T14:19:55.816+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@d0538b3
2025-08-22T14:19:55.817+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3b8c15de
2025-08-22T14:19:55.817+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@26398f67
2025-08-22T14:19:55.817+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@64ff0eaa
2025-08-22T14:19:55.817+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@401b7226
2025-08-22T14:19:55.817+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b62ad1e
2025-08-22T14:19:55.817+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@714a4ba2
2025-08-22T14:19:55.818+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6ddc817f
2025-08-22T14:19:55.884+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:19:55.927+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:19:56.143+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3f6fd33b
2025-08-22T14:19:56.146+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:19:56.246+03:00  INFO 21104 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:19:56.257+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6b9f5dcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5ab7e997)
2025-08-22T14:19:56.257+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2552cb80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b3b5252)
2025-08-22T14:19:56.263+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:19:56.264+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:19:56.279+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7bb996e0
2025-08-22T14:19:56.280+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7bb996e0
2025-08-22T14:19:56.280+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7fb28ed`
2025-08-22T14:19:56.289+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:19:56.290+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:19:56.290+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:19:56.297+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:19:56.297+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:19:56.297+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:19:56.297+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:19:56.298+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:19:56.298+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:19:56.299+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:19:56.300+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:19:56.300+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:19:56.304+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d0456ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12dd3501]
2025-08-22T14:19:58.026+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:19:58.028+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d0456ad] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d]
2025-08-22T14:19:58.240+03:00 TRACE 21104 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d] for TypeConfiguration
2025-08-22T14:19:58.241+03:00  INFO 21104 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:19:58.812+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:19:58.826+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:19:59.008+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:19:59.024+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:19:59.072+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:19:59.094+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:19:59.094+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:19:59.130+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:19:59.131+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:19:59.163+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:19:59.164+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:19:59.165+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:19:59.166+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:19:59.166+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:19:59.167+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:19:59.205+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:19:59.230+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:20:00.092+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:20:00.104+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:20:00.104+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.106+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:20:00.107+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.107+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:20:00.108+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.108+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:20:00.109+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.134+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:20:00.371+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:20:00.392+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:20:00.393+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.395+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:20:00.395+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.395+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:20:00.396+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.396+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:20:00.397+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.397+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:20:00.398+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.430+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:20:00.430+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.440+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:20:00.441+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.452+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:20:00.453+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.455+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:20:00.456+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.456+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:20:00.456+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:20:00.605+03:00  WARN 21104 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:20:01.971+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:20:02.038+03:00  INFO 21104 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:20:04.697+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x000002274cd49e48@5a9dabd3 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:20:04.724+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:20:05.491+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:20:05.495+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:20:05.498+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:20:05.597+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:20:05.597+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:20:05.600+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T14:20:05.767+03:00  INFO 21104 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:20:05.858+03:00  WARN 21104 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:20:06.166+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58258 (http) with context path '/'
2025-08-22T14:20:06.169+03:00  INFO 21104 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58258
2025-08-22T14:20:06.180+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:20:06.226+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:20:06.233+03:00  INFO 21104 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:20:06.254+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:20:06.254+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:20:06.254+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:20:06.254+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:20:06.254+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:20:06.254+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:20:06.255+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:20:06.632+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:20:06.636+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:20:06.640+03:00  INFO 21104 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:20:06.643+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755861606642 with initial instances count: 2
2025-08-22T14:20:06.651+03:00  INFO 21104 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:20:06.652+03:00  INFO 21104 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861606652, current=UP, previous=STARTING]
2025-08-22T14:20:06.655+03:00  INFO 21104 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:20:06.731+03:00  INFO 21104 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:20:07.080+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 66ms, rows: 1
2025-08-22T14:20:07.109+03:00  INFO 21104 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    715300 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    339200 nanoseconds spent preparing 1 JDBC statements;
    3866400 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    19393700 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    33600 nanoseconds spent executing 1 pre-partial-flushes;
    14400 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:20:07.117+03:00  INFO 21104 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.898 seconds (process running for 18.834)
2025-08-22T14:20:18.424+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:20:18.443+03:00 TRACE 21104 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:20:18.450+03:00 TRACE 21104 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:20:18.736+03:00 TRACE 21104 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:20:18.737+03:00 TRACE 21104 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:20:18.739+03:00 TRACE 21104 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@be1f3d6
2025-08-22T14:20:18.743+03:00 TRACE 21104 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:20:18.743+03:00 TRACE 21104 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5c32f8af
2025-08-22T14:20:18.744+03:00 TRACE 21104 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:20:18.747+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:20:18.748+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:20:18.830+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:20:18.832+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:20:18.832+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:20:24.630+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:20:24.631+03:00 TRACE 21104 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:20:24.632+03:00 TRACE 21104 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:20:24.895+03:00 TRACE 21104 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:20:24.895+03:00 TRACE 21104 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:20:24.896+03:00 TRACE 21104 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@be1f3d6
2025-08-22T14:20:24.896+03:00 TRACE 21104 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:20:24.897+03:00 TRACE 21104 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5c32f8af
2025-08-22T14:20:24.897+03:00 TRACE 21104 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:20:24.897+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:20:24.898+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:20:24.900+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:20:24.901+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:20:24.901+03:00 TRACE 21104 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:20:43.267+03:00  WARN 21104 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47s19ms192µs700ns).
2025-08-22T14:20:43.280+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:20:43.286+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T14:20:43.287+03:00 DEBUG 21104 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:20:43.395+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:20:43.396+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755861643395, current=DOWN, previous=UP]
2025-08-22T14:20:43.396+03:00  INFO 21104 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:20:43.400+03:00  INFO 21104 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:20:43.406+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:20:43.593+03:00  INFO 21104 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:20:43.610+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:20:43.611+03:00 TRACE 21104 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d] for TypeConfiguration
2025-08-22T14:20:43.612+03:00 DEBUG 21104 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@30539a25] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d]
2025-08-22T14:20:43.615+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:20:43.637+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:20:43.645+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:20:46.649+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:20:46.666+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:20:46.666+03:00  INFO 21104 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:30:07.375+03:00  INFO 3132 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 3132 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:30:07.377+03:00  INFO 3132 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:30:08.998+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:30:09.001+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:30:09.071+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.074+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.077+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.085+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.088+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.091+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.094+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.097+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.100+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.104+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:30:09.106+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 93 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:30:09.114+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:30:09.115+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:30:09.126+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.127+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.128+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.129+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.130+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.131+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.132+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.133+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.134+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.135+03:00  INFO 3132 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:30:09.136+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:30:09.148+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:30:09.150+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:30:09.378+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 218 ms. Found 10 JPA repository interfaces.
2025-08-22T14:30:09.774+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:30:11.748+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:30:11.771+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:30:11.772+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:30:11.885+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:30:11.886+03:00  INFO 3132 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4485 ms
2025-08-22T14:30:12.351+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:30:12.437+03:00  INFO 3132 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:30:12.488+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:30:12.589+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:30:12.589+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:30:12.589+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:30:12.589+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T14:30:12.590+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T14:30:12.590+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:30:12.590+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:30:12.591+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:30:12.591+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:30:12.591+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:30:12.591+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:30:12.595+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:30:12.598+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:30:12.599+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:30:12.599+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:30:12.599+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:30:12.600+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:30:12.600+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T14:30:12.600+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:30:12.600+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:30:12.600+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:30:12.601+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:30:12.601+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:30:12.601+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:30:12.601+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:30:12.602+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:30:12.603+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:30:12.603+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:30:12.604+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:30:12.604+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:30:12.605+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:30:12.605+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:30:12.605+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:30:12.606+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:30:12.606+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:30:12.606+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:30:12.607+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:30:12.607+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:30:12.607+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:30:12.608+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:30:12.608+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:30:12.608+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:30:12.608+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:30:12.609+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:30:12.609+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:30:12.609+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:30:12.610+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:30:12.610+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:30:12.610+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:30:12.611+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:30:12.611+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:30:12.612+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:30:12.612+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:30:12.612+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:30:12.613+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:30:12.613+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:30:12.613+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:30:12.614+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:30:12.614+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:30:12.614+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:30:12.615+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:30:12.615+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:30:12.615+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:30:12.616+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:30:12.616+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:30:12.616+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:30:12.617+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:30:12.617+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:30:12.617+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:30:12.618+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:30:12.619+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:30:12.620+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:30:12.620+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:30:12.620+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:30:12.621+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:30:12.621+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:30:12.621+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:30:12.622+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:30:12.622+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:30:12.623+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:30:12.623+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:30:12.623+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:30:12.624+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:30:12.624+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:30:12.625+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:30:12.625+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:30:12.625+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:30:12.626+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:30:12.626+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:30:12.626+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:30:12.626+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:30:12.626+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:30:12.627+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:30:12.627+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:30:12.627+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:30:12.627+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:30:12.627+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:30:12.627+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:30:12.628+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:30:12.628+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:30:12.628+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:30:12.628+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:30:12.628+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:30:12.628+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:30:12.629+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:30:12.629+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:30:12.629+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:30:12.629+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:30:12.629+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:30:12.629+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:30:12.630+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:30:12.630+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:30:12.630+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:30:12.630+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:30:12.630+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:30:12.631+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:30:12.631+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:30:12.631+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:30:12.631+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:30:12.631+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:30:12.631+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:30:12.631+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:30:12.632+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:30:12.632+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:30:12.653+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1bd6bfb0
2025-08-22T14:30:12.654+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1bd6bfb0
2025-08-22T14:30:12.657+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1da5635e
2025-08-22T14:30:12.658+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7c35d7d
2025-08-22T14:30:12.658+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@24ccc91b
2025-08-22T14:30:12.658+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@d0538b3
2025-08-22T14:30:12.658+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b8c15de
2025-08-22T14:30:12.659+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26398f67
2025-08-22T14:30:12.659+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64ff0eaa
2025-08-22T14:30:12.659+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@401b7226
2025-08-22T14:30:12.659+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b62ad1e
2025-08-22T14:30:12.721+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:30:12.774+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:30:12.989+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19ea65f4
2025-08-22T14:30:12.992+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:30:13.102+03:00  INFO 3132 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:30:13.115+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5205b3e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2802caa2)
2025-08-22T14:30:13.115+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b9f5dcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ab7e997)
2025-08-22T14:30:13.120+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:30:13.121+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:30:13.140+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6d224921
2025-08-22T14:30:13.140+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6d224921
2025-08-22T14:30:13.141+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1bd6bfb0`
2025-08-22T14:30:13.155+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:30:13.155+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:30:13.156+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:30:13.163+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:30:13.163+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:30:13.164+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:30:13.164+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:30:13.164+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:30:13.164+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:30:13.166+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:30:13.166+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:30:13.167+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:30:13.170+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29ceefb3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f14d079]
2025-08-22T14:30:14.734+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:30:14.736+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29ceefb3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@33dcbdc2]
2025-08-22T14:30:14.901+03:00 TRACE 3132 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@33dcbdc2] for TypeConfiguration
2025-08-22T14:30:14.902+03:00  INFO 3132 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:30:15.517+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:30:15.529+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:15.679+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:15.690+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:30:15.718+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:15.734+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:30:15.735+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:15.769+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:30:15.770+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:15.821+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:30:15.822+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:15.825+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:30:15.825+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:15.857+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:15.877+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:30:16.546+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:16.557+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:30:16.557+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.558+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:30:16.559+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.559+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:30:16.560+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.560+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:30:16.560+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.585+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:16.797+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:16.814+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:30:16.814+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.816+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:30:16.816+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.816+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:30:16.816+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.817+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:30:16.817+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.818+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:30:16.818+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.846+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:30:16.847+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.856+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:30:16.857+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.871+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:30:16.871+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.873+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:30:16.873+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:16.873+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:30:16.874+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:30:17.026+03:00  WARN 3132 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:30:18.132+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:30:18.191+03:00  INFO 3132 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:30:21.236+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x000002374ad417d8@1ae73d9e with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:30:21.273+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:30:22.121+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:22.128+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:22.132+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:22.237+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:30:22.237+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:30:22.241+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:30:22.432+03:00  INFO 3132 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:30:22.514+03:00  WARN 3132 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:30:22.810+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58313 (http) with context path '/'
2025-08-22T14:30:22.813+03:00  INFO 3132 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58313
2025-08-22T14:30:22.823+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:30:22.876+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:30:22.884+03:00  INFO 3132 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:30:22.906+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:30:22.906+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:30:22.907+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:30:22.907+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:30:22.907+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:30:22.908+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:30:22.908+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:30:23.416+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:30:23.419+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:30:23.422+03:00  INFO 3132 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:30:23.426+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755862223425 with initial instances count: 2
2025-08-22T14:30:23.432+03:00  INFO 3132 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:30:23.433+03:00  INFO 3132 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755862223433, current=UP, previous=STARTING]
2025-08-22T14:30:23.437+03:00  INFO 3132 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:30:23.509+03:00  INFO 3132 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:30:23.826+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 58ms, rows: 1
2025-08-22T14:30:23.857+03:00  INFO 3132 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    721400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    339600 nanoseconds spent preparing 1 JDBC statements;
    2544200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    18225100 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    62900 nanoseconds spent executing 1 pre-partial-flushes;
    31200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:30:23.864+03:00  INFO 3132 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.06 seconds (process running for 19.104)
2025-08-22T14:32:58.298+03:00  WARN 3132 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m45s193ms91µs800ns).
2025-08-22T14:33:02.666+03:00  INFO 3132 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - Re-registering apps/DATASTORESERVICE
2025-08-22T14:33:02.667+03:00  INFO 3132 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:33:02.671+03:00  INFO 3132 --- [DataStoreService] [DiscoveryClient-HeartbeatExecutor-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:33:02.809+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:33:02.879+03:00 TRACE 3132 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:33:02.898+03:00 TRACE 3132 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:33:07.059+03:00 TRACE 3132 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:33:07.061+03:00 TRACE 3132 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:33:07.069+03:00 TRACE 3132 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@6c882cb4
2025-08-22T14:33:07.085+03:00 TRACE 3132 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:33:07.089+03:00 TRACE 3132 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1b599d06
2025-08-22T14:33:07.092+03:00 TRACE 3132 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:33:07.124+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:33:07.131+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:33:07.767+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:33:07.771+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:33:07.773+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:33:20.298+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:33:20.300+03:00 TRACE 3132 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:33:20.301+03:00 TRACE 3132 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:33:20.573+03:00 TRACE 3132 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:33:20.573+03:00 TRACE 3132 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:33:20.574+03:00 TRACE 3132 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@6c882cb4
2025-08-22T14:33:20.575+03:00 TRACE 3132 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:33:20.575+03:00 TRACE 3132 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1b599d06
2025-08-22T14:33:20.575+03:00 TRACE 3132 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:33:20.576+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:33:20.576+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:33:20.578+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:33:20.578+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:33:20.579+03:00 TRACE 3132 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:33:24.595+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:33:24.600+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T14:33:24.600+03:00 DEBUG 3132 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:33:24.706+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:33:24.708+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755862404708, current=DOWN, previous=UP]
2025-08-22T14:33:24.708+03:00  INFO 3132 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:33:24.713+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:33:24.723+03:00  INFO 3132 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:33:24.879+03:00  INFO 3132 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:33:24.891+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:33:24.894+03:00 TRACE 3132 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@33dcbdc2] for TypeConfiguration
2025-08-22T14:33:24.894+03:00 DEBUG 3132 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@30539a25] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@33dcbdc2]
2025-08-22T14:33:24.896+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:33:24.909+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:33:24.910+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:33:27.912+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:33:27.928+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:33:27.928+03:00  INFO 3132 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:33:54.290+03:00  INFO 24732 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 24732 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:33:54.292+03:00  INFO 24732 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:33:55.840+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:33:55.843+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:33:55.908+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.911+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.913+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.916+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.919+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.922+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.924+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.927+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.929+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.931+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:33:55.933+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 80 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:33:55.940+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:33:55.940+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:33:55.951+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.951+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.952+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.952+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.952+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.953+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.953+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.953+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.954+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.954+03:00  INFO 24732 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:33:55.954+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:33:55.965+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:33:55.968+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:33:56.169+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 193 ms. Found 10 JPA repository interfaces.
2025-08-22T14:33:56.533+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:33:58.329+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:33:58.356+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:33:58.357+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:33:58.470+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:33:58.470+03:00  INFO 24732 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4158 ms
2025-08-22T14:33:58.985+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:33:59.065+03:00  INFO 24732 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:33:59.117+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:33:59.225+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:33:59.226+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:33:59.226+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:33:59.226+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:33:59.227+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:33:59.227+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:33:59.227+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:33:59.228+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:33:59.228+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:33:59.228+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:33:59.228+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:33:59.229+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:33:59.235+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:33:59.235+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:33:59.235+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:33:59.236+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:33:59.236+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:33:59.236+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:33:59.236+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:33:59.236+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:33:59.237+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:33:59.237+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:33:59.237+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:33:59.237+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:33:59.237+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:33:59.238+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:33:59.238+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:33:59.238+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:33:59.238+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:33:59.239+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:33:59.239+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:33:59.240+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:33:59.241+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:33:59.242+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:33:59.243+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:33:59.243+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:33:59.243+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:33:59.243+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:33:59.244+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:33:59.244+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:33:59.244+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:33:59.245+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:33:59.245+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:33:59.245+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:33:59.246+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:33:59.246+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:33:59.246+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:33:59.246+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:33:59.246+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:33:59.247+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:33:59.247+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:33:59.247+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:33:59.247+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:33:59.248+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:33:59.248+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:33:59.248+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:33:59.248+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:33:59.249+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:33:59.249+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:33:59.249+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:33:59.249+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:33:59.249+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:33:59.250+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:33:59.250+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:33:59.250+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:33:59.250+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:33:59.250+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:33:59.250+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:33:59.251+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:33:59.251+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:33:59.251+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:33:59.251+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:33:59.251+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:33:59.251+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:33:59.252+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:33:59.252+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:33:59.252+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:33:59.253+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:33:59.253+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:33:59.253+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:33:59.253+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:33:59.253+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:33:59.254+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:33:59.254+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:33:59.254+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:33:59.254+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:33:59.254+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:33:59.255+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:33:59.255+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:33:59.255+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:33:59.255+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:33:59.255+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:33:59.256+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:33:59.256+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:33:59.258+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:33:59.258+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:33:59.259+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:33:59.262+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:33:59.264+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:33:59.267+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:33:59.268+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:33:59.268+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:33:59.268+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:33:59.269+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:33:59.269+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:33:59.269+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:33:59.270+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:33:59.270+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:33:59.270+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:33:59.280+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:33:59.280+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:33:59.280+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:33:59.280+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:33:59.280+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:33:59.281+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:33:59.281+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:33:59.281+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:33:59.282+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:33:59.282+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:33:59.282+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:33:59.283+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:33:59.283+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:33:59.284+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:33:59.284+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@40304938
2025-08-22T14:33:59.293+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@7fb28ed
2025-08-22T14:33:59.294+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fb28ed
2025-08-22T14:33:59.297+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@24ccc91b
2025-08-22T14:33:59.297+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@d0538b3
2025-08-22T14:33:59.297+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3b8c15de
2025-08-22T14:33:59.297+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@26398f67
2025-08-22T14:33:59.298+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@64ff0eaa
2025-08-22T14:33:59.298+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@401b7226
2025-08-22T14:33:59.298+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b62ad1e
2025-08-22T14:33:59.299+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@714a4ba2
2025-08-22T14:33:59.299+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6ddc817f
2025-08-22T14:33:59.369+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:33:59.413+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:33:59.757+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3f6fd33b
2025-08-22T14:33:59.760+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:33:59.858+03:00  INFO 24732 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:33:59.868+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6b9f5dcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5ab7e997)
2025-08-22T14:33:59.868+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2552cb80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b3b5252)
2025-08-22T14:33:59.872+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:33:59.873+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:33:59.891+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7bb996e0
2025-08-22T14:33:59.892+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7bb996e0
2025-08-22T14:33:59.892+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7fb28ed`
2025-08-22T14:33:59.908+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:33:59.908+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:33:59.908+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:33:59.915+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:33:59.915+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:33:59.915+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:33:59.915+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:33:59.915+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:33:59.915+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:33:59.917+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:33:59.918+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:33:59.918+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:33:59.920+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d0456ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12dd3501]
2025-08-22T14:34:01.379+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:34:01.381+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d0456ad] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d]
2025-08-22T14:34:01.552+03:00 TRACE 24732 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d] for TypeConfiguration
2025-08-22T14:34:01.552+03:00  INFO 24732 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:34:02.029+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:34:02.050+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:02.227+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:02.240+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:34:02.270+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:02.290+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:34:02.291+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:02.325+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:34:02.326+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:02.365+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:34:02.365+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:02.367+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:34:02.368+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:02.368+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:34:02.369+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:02.412+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:02.436+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:34:03.278+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:03.303+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:34:03.303+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; private static com.goglotek.frauddetector.datastoreservice.exception.ProviderLocalTransactionsNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.lambda$providerLocalTransactions$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.305+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:34:03.306+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.307+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:34:03.307+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.308+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:34:03.309+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.309+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:34:03.310+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.341+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:03.558+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:03.582+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:34:03.583+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; private static com.goglotek.frauddetector.datastoreservice.exception.ProviderTransactionsNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.lambda$transction$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.585+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:34:03.586+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.586+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:34:03.587+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.587+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:34:03.588+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.588+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:34:03.589+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.589+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:34:03.589+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.635+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:34:03.635+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.650+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:34:03.651+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.667+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:34:03.668+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.669+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:34:03.670+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.670+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:34:03.671+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:34:03.823+03:00  WARN 24732 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:34:05.119+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:34:05.178+03:00  INFO 24732 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:34:07.358+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x0000023abed45540@7595dfad with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:34:07.388+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:34:08.156+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:08.161+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:08.167+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:08.269+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:34:08.270+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:34:08.272+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2025-08-22T14:34:08.446+03:00  INFO 24732 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:34:08.522+03:00  WARN 24732 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:34:08.803+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58349 (http) with context path '/'
2025-08-22T14:34:08.807+03:00  INFO 24732 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58349
2025-08-22T14:34:08.816+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:34:08.865+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:34:08.873+03:00  INFO 24732 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:34:08.887+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:34:08.888+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:34:08.888+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:34:08.888+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:34:08.888+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:34:08.889+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:34:08.889+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:34:09.291+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:34:09.295+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:34:09.298+03:00  INFO 24732 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:34:09.302+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755862449300 with initial instances count: 2
2025-08-22T14:34:09.310+03:00  INFO 24732 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:34:09.311+03:00  INFO 24732 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755862449311, current=UP, previous=STARTING]
2025-08-22T14:34:09.314+03:00  INFO 24732 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:34:09.391+03:00  INFO 24732 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:34:09.708+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 63ms, rows: 1
2025-08-22T14:34:09.737+03:00  INFO 24732 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    657500 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    346200 nanoseconds spent preparing 1 JDBC statements;
    2536600 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    17663800 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    49300 nanoseconds spent executing 1 pre-partial-flushes;
    21500 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:34:09.746+03:00  INFO 24732 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.015 seconds (process running for 17.93)
2025-08-22T14:34:15.250+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:34:15.321+03:00 TRACE 24732 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:34:15.340+03:00 TRACE 24732 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:34:19.643+03:00 TRACE 24732 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:34:19.644+03:00 TRACE 24732 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:34:19.653+03:00 TRACE 24732 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@2fe310b
2025-08-22T14:34:19.669+03:00 TRACE 24732 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:34:19.672+03:00 TRACE 24732 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@51c8a421
2025-08-22T14:34:19.676+03:00 TRACE 24732 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:34:19.686+03:00 TRACE 24732 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:34:19.694+03:00 TRACE 24732 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:34:20.361+03:00 TRACE 24732 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:34:20.365+03:00 TRACE 24732 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:34:20.367+03:00 TRACE 24732 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:34:29.369+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:34:29.381+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T14:34:29.383+03:00 DEBUG 24732 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:34:33.827+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:34:33.829+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755862473829, current=DOWN, previous=UP]
2025-08-22T14:34:33.829+03:00  INFO 24732 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:34:33.833+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:34:33.849+03:00  INFO 24732 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:34:33.977+03:00  INFO 24732 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:34:33.988+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:34:33.989+03:00 TRACE 24732 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d] for TypeConfiguration
2025-08-22T14:34:33.989+03:00 DEBUG 24732 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6c0df1ac] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2f0b7b6d]
2025-08-22T14:34:33.992+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:34:34.005+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:34:34.007+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:34:37.021+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:34:37.038+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:34:37.039+03:00  INFO 24732 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:38:07.532+03:00  INFO 11932 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 11932 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:38:07.534+03:00  INFO 11932 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:38:09.029+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:38:09.032+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:38:09.099+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.101+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.103+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.106+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.108+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.110+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.113+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.116+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.119+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.122+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:38:09.123+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 82 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:38:09.131+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:38:09.132+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:38:09.143+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.143+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.143+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.144+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.144+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.145+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.145+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.145+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.146+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.146+03:00  INFO 11932 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:38:09.146+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:38:09.154+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:38:09.156+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:38:09.358+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 194 ms. Found 10 JPA repository interfaces.
2025-08-22T14:38:09.729+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:38:11.546+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:38:11.564+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:38:11.565+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:38:11.682+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:38:11.682+03:00  INFO 11932 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4126 ms
2025-08-22T14:38:12.190+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:38:12.271+03:00  INFO 11932 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:38:12.326+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:38:12.452+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:38:12.452+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:38:12.453+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:38:12.453+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T14:38:12.453+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T14:38:12.453+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:38:12.454+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T14:38:12.454+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:38:12.454+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:38:12.455+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:38:12.455+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:38:12.455+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:38:12.456+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:38:12.456+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:38:12.457+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:38:12.457+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:38:12.457+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:38:12.457+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T14:38:12.458+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:38:12.458+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:38:12.458+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:38:12.458+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:38:12.459+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:38:12.459+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:38:12.459+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:38:12.459+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:38:12.460+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:38:12.460+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:38:12.460+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:38:12.460+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:38:12.460+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:38:12.461+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:38:12.461+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:38:12.461+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:38:12.461+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:38:12.462+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:38:12.462+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:38:12.462+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:38:12.462+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:38:12.463+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:38:12.463+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:38:12.463+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:38:12.463+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:38:12.463+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:38:12.464+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:38:12.464+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:38:12.464+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:38:12.464+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:38:12.465+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:38:12.465+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:38:12.465+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:38:12.465+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:38:12.465+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:38:12.466+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:38:12.466+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:38:12.466+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:38:12.466+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:38:12.467+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:38:12.467+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:38:12.467+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:38:12.467+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:38:12.468+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:38:12.468+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:38:12.468+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:38:12.469+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:38:12.469+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:38:12.470+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:38:12.470+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:38:12.470+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:38:12.470+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:38:12.470+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:38:12.471+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:38:12.471+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:38:12.471+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:38:12.472+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:38:12.472+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:38:12.472+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:38:12.472+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:38:12.472+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:38:12.472+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:38:12.473+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:38:12.473+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:38:12.473+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:38:12.473+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:38:12.474+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:38:12.474+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:38:12.474+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:38:12.475+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:38:12.475+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:38:12.475+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:38:12.475+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:38:12.476+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:38:12.476+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:38:12.476+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:38:12.476+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:38:12.476+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:38:12.477+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:38:12.477+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:38:12.477+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:38:12.477+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:38:12.478+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:38:12.478+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:38:12.478+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:38:12.478+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:38:12.478+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:38:12.479+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:38:12.479+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:38:12.479+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:38:12.479+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:38:12.479+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:38:12.480+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:38:12.480+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:38:12.480+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:38:12.480+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:38:12.481+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:38:12.481+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:38:12.481+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:38:12.481+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:38:12.481+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:38:12.482+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:38:12.482+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:38:12.482+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:38:12.482+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:38:12.482+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:38:12.490+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1bd6bfb0
2025-08-22T14:38:12.491+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1bd6bfb0
2025-08-22T14:38:12.493+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1da5635e
2025-08-22T14:38:12.493+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7c35d7d
2025-08-22T14:38:12.493+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@24ccc91b
2025-08-22T14:38:12.494+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@d0538b3
2025-08-22T14:38:12.494+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b8c15de
2025-08-22T14:38:12.494+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26398f67
2025-08-22T14:38:12.494+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64ff0eaa
2025-08-22T14:38:12.494+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@401b7226
2025-08-22T14:38:12.495+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b62ad1e
2025-08-22T14:38:12.564+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:38:12.610+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:38:12.948+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19ea65f4
2025-08-22T14:38:12.951+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:38:13.056+03:00  INFO 11932 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:38:13.066+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5205b3e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2802caa2)
2025-08-22T14:38:13.067+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b9f5dcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ab7e997)
2025-08-22T14:38:13.072+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:38:13.072+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:38:13.091+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6d224921
2025-08-22T14:38:13.091+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6d224921
2025-08-22T14:38:13.091+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1bd6bfb0`
2025-08-22T14:38:13.101+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:38:13.101+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:38:13.101+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:38:13.108+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:38:13.108+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:38:13.109+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:38:13.109+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:38:13.109+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:38:13.109+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:38:13.112+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:38:13.113+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:38:13.113+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:38:13.115+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29ceefb3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f14d079]
2025-08-22T14:38:14.695+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:38:14.697+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29ceefb3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@33dcbdc2]
2025-08-22T14:38:14.864+03:00 TRACE 11932 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@33dcbdc2] for TypeConfiguration
2025-08-22T14:38:14.865+03:00  INFO 11932 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:38:15.338+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:38:15.362+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:15.484+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:38:15.510+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.file(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.532+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:38:15.533+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.FilesController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.533+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:38:15.534+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.files(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.534+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:38:15.535+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.createFile(java.lang.String) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.535+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:38:15.536+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.filteredFiles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.536+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:38:15.536+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.lang.String com.goglotek.frauddetector.datastoreservice.controller.FilesController.testUrl()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.558+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:15.570+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:38:15.571+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.572+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:38:15.573+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.606+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:38:15.606+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.631+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:38:15.632+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.633+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:38:15.634+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:15.661+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:15.682+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:38:16.347+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:16.357+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:38:16.358+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.360+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:38:16.360+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.361+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:38:16.361+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.361+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:38:16.362+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.399+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:16.725+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:16.756+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:38:16.757+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.758+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:38:16.759+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.760+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:38:16.760+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.760+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:38:16.761+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.761+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:38:16.761+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.813+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:38:16.814+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.827+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:38:16.827+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.839+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:38:16.839+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.841+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:38:16.842+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.843+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:38:16.843+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:38:16.983+03:00  WARN 11932 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:38:18.234+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:38:18.310+03:00  INFO 11932 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:38:21.368+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x00000294c0d4a2a0@2fb3113a with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:38:21.398+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:38:22.191+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:22.196+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:22.199+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:22.316+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:38:22.316+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:38:22.320+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:38:22.484+03:00  INFO 11932 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:38:22.561+03:00  WARN 11932 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:38:22.832+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58381 (http) with context path '/'
2025-08-22T14:38:22.835+03:00  INFO 11932 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58381
2025-08-22T14:38:22.845+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:38:22.905+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:38:22.912+03:00  INFO 11932 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:38:22.927+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:38:22.927+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:38:22.927+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:38:22.927+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:38:22.928+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:38:22.928+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:38:22.928+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:38:23.312+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:38:23.317+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:38:23.322+03:00  INFO 11932 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:38:23.325+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755862703324 with initial instances count: 2
2025-08-22T14:38:23.332+03:00  INFO 11932 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:38:23.332+03:00  INFO 11932 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755862703332, current=UP, previous=STARTING]
2025-08-22T14:38:23.337+03:00  INFO 11932 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:38:23.413+03:00  INFO 11932 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:38:23.769+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 124ms, rows: 1
2025-08-22T14:38:23.821+03:00  INFO 11932 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    746400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    269800 nanoseconds spent preparing 1 JDBC statements;
    2989200 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    33260400 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    63900 nanoseconds spent executing 1 pre-partial-flushes;
    27800 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:38:23.829+03:00  INFO 11932 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.837 seconds (process running for 18.783)
2025-08-22T14:38:41.676+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:38:41.750+03:00 TRACE 11932 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:38:41.770+03:00 TRACE 11932 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:38:46.084+03:00 TRACE 11932 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:38:46.085+03:00 TRACE 11932 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:38:46.094+03:00 TRACE 11932 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@5c32f8af
2025-08-22T14:38:46.110+03:00 TRACE 11932 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:38:46.114+03:00 TRACE 11932 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@44465b22
2025-08-22T14:38:46.117+03:00 TRACE 11932 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:38:46.128+03:00 TRACE 11932 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:38:46.135+03:00 TRACE 11932 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:38:46.799+03:00 TRACE 11932 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:38:46.803+03:00 TRACE 11932 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:38:46.804+03:00 TRACE 11932 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:38:53.219+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:38:53.233+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost/files/create
2025-08-22T14:38:53.235+03:00 DEBUG 11932 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:39:13.457+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:39:13.457+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755862753457, current=DOWN, previous=UP]
2025-08-22T14:39:13.458+03:00  INFO 11932 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:39:13.462+03:00  INFO 11932 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:39:13.464+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:39:13.646+03:00  INFO 11932 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:39:13.661+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:39:13.663+03:00 TRACE 11932 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@33dcbdc2] for TypeConfiguration
2025-08-22T14:39:13.664+03:00 DEBUG 11932 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45c18bd8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@33dcbdc2]
2025-08-22T14:39:13.667+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:39:13.671+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:39:13.681+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:39:16.689+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:39:16.709+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:39:16.710+03:00  INFO 11932 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:41:56.084+03:00  INFO 24444 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 24444 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:41:56.087+03:00  INFO 24444 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:41:57.586+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:41:57.588+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:41:57.649+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.651+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.654+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.656+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.659+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.662+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.664+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.667+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.670+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.673+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:41:57.674+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 77 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:41:57.682+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:41:57.683+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:41:57.695+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.696+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.696+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.697+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.698+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.698+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.699+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.699+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.700+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.701+03:00  INFO 24444 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:41:57.701+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:41:57.712+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:41:57.714+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:41:57.930+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 210 ms. Found 10 JPA repository interfaces.
2025-08-22T14:41:58.301+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:42:00.176+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:42:00.198+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:42:00.199+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:42:00.322+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:42:00.323+03:00  INFO 24444 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4216 ms
2025-08-22T14:42:00.805+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:42:00.884+03:00  INFO 24444 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:42:00.937+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:42:01.074+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:42:01.075+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:42:01.075+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6f9e6a85
2025-08-22T14:42:01.076+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:42:01.076+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:42:01.076+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:42:01.077+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:42:01.077+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:42:01.078+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:42:01.078+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:42:01.078+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:42:01.079+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:42:01.080+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:42:01.080+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:42:01.081+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:42:01.081+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:42:01.081+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:42:01.081+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:42:01.082+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:42:01.082+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:42:01.082+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:42:01.082+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:42:01.083+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:42:01.083+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:42:01.083+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:42:01.084+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:42:01.084+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:42:01.084+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:42:01.084+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:42:01.085+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:42:01.085+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:42:01.085+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:42:01.086+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:42:01.086+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:42:01.086+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:42:01.086+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:42:01.087+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:42:01.087+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:42:01.087+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:42:01.087+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:42:01.088+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:42:01.088+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:42:01.088+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:42:01.088+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:42:01.088+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:42:01.089+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:42:01.089+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:42:01.089+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:42:01.089+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:42:01.089+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:42:01.090+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:42:01.090+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:42:01.090+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:42:01.090+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:42:01.090+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:42:01.091+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:42:01.091+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:42:01.091+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:42:01.091+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:42:01.091+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:42:01.091+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:42:01.092+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:42:01.092+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:42:01.092+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:42:01.092+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:42:01.093+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:42:01.093+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:42:01.093+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:42:01.093+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:42:01.094+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:42:01.094+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:42:01.094+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:42:01.094+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:42:01.095+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:42:01.095+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:42:01.095+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:42:01.095+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:42:01.095+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:42:01.096+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:42:01.096+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:42:01.097+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:42:01.097+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:42:01.097+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:42:01.097+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:42:01.097+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:42:01.098+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:42:01.098+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:42:01.098+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:42:01.098+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:42:01.098+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:42:01.099+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:42:01.099+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:42:01.099+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:42:01.099+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:42:01.099+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:42:01.099+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:42:01.100+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:42:01.100+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:42:01.100+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:42:01.100+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:42:01.101+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:42:01.101+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:42:01.101+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:42:01.101+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:42:01.101+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:42:01.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:42:01.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:42:01.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:42:01.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:42:01.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:42:01.103+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:42:01.103+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:42:01.103+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:42:01.103+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:42:01.103+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:42:01.103+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:42:01.104+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:42:01.104+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:42:01.104+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:42:01.105+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:42:01.105+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:42:01.105+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:42:01.106+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@40304938
2025-08-22T14:42:01.106+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1d160161
2025-08-22T14:42:01.114+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@536f389
2025-08-22T14:42:01.114+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@536f389
2025-08-22T14:42:01.116+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@d0538b3
2025-08-22T14:42:01.116+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b8c15de
2025-08-22T14:42:01.117+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26398f67
2025-08-22T14:42:01.117+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@64ff0eaa
2025-08-22T14:42:01.117+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@401b7226
2025-08-22T14:42:01.117+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1b62ad1e
2025-08-22T14:42:01.117+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@714a4ba2
2025-08-22T14:42:01.118+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ddc817f
2025-08-22T14:42:01.118+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@764d54a0
2025-08-22T14:42:01.195+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:42:01.246+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:42:01.467+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34c050a1
2025-08-22T14:42:01.469+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:42:01.571+03:00  INFO 24444 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:42:01.584+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5ab7e997) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2552cb80)
2025-08-22T14:42:01.584+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b3b5252) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@adb15df)
2025-08-22T14:42:01.589+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:42:01.591+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:42:01.607+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@da2303c
2025-08-22T14:42:01.608+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@da2303c
2025-08-22T14:42:01.608+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@536f389`
2025-08-22T14:42:01.616+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:42:01.617+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:42:01.617+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:42:01.622+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:42:01.623+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:42:01.623+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:42:01.623+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:42:01.624+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:42:01.624+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:42:01.625+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:42:01.626+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:42:01.626+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:42:01.629+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@12dd3501] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4cb0e39e]
2025-08-22T14:42:03.189+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:42:03.190+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@12dd3501] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1766b7]
2025-08-22T14:42:03.353+03:00 TRACE 24444 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1766b7] for TypeConfiguration
2025-08-22T14:42:03.354+03:00  INFO 24444 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:42:03.819+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:42:03.858+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:03.965+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:42:03.992+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.file(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.011+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:42:04.012+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.FilesController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.012+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:42:04.013+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.files(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.013+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:42:04.014+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.createFile(java.lang.String) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.014+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:42:04.014+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.filteredFiles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.015+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:42:04.015+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.lang.String com.goglotek.frauddetector.datastoreservice.controller.FilesController.testUrl()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.035+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:04.044+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:42:04.044+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.046+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:42:04.046+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.071+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:42:04.071+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.100+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:42:04.100+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:42:04.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:42:04.102+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.137+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:04.156+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:42:04.888+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:04.902+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:42:04.902+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.903+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:42:04.904+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.904+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:42:04.905+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.905+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:42:04.906+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:04.932+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:05.174+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:05.195+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:42:05.195+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.197+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:42:05.197+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.198+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:42:05.198+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.198+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:42:05.199+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.199+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:42:05.200+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.235+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:42:05.236+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.245+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:42:05.246+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.257+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:42:05.258+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.259+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:42:05.260+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.260+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:42:05.261+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:42:05.411+03:00  WARN 24444 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:42:06.714+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:42:06.771+03:00  INFO 24444 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:42:09.559+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x0000021790d4a2a0@3eafe537 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:42:09.586+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:42:10.324+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:10.330+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:10.333+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:10.433+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:42:10.434+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:42:10.437+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:42:10.600+03:00  INFO 24444 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:42:10.672+03:00  WARN 24444 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:42:10.977+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58414 (http) with context path '/'
2025-08-22T14:42:10.980+03:00  INFO 24444 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58414
2025-08-22T14:42:10.988+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:42:11.033+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:42:11.040+03:00  INFO 24444 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:42:11.059+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:42:11.059+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:42:11.059+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:42:11.059+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:42:11.060+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:42:11.060+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:42:11.060+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:42:11.469+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:42:11.472+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:42:11.476+03:00  INFO 24444 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:42:11.481+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755862931479 with initial instances count: 2
2025-08-22T14:42:11.489+03:00  INFO 24444 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:42:11.490+03:00  INFO 24444 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755862931490, current=UP, previous=STARTING]
2025-08-22T14:42:11.494+03:00  INFO 24444 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:42:11.575+03:00  INFO 24444 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:42:11.889+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 72ms, rows: 1
2025-08-22T14:42:11.924+03:00  INFO 24444 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    615100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    314700 nanoseconds spent preparing 1 JDBC statements;
    3550800 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    21298900 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    49700 nanoseconds spent executing 1 pre-partial-flushes;
    16200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:42:11.930+03:00  INFO 24444 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.407 seconds (process running for 18.418)
2025-08-22T14:42:31.985+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:42:32.058+03:00 TRACE 24444 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:42:32.076+03:00 TRACE 24444 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:42:36.381+03:00 TRACE 24444 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:42:36.382+03:00 TRACE 24444 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:42:36.390+03:00 TRACE 24444 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@79a269c3
2025-08-22T14:42:36.430+03:00 TRACE 24444 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:42:36.433+03:00 TRACE 24444 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@aad1828
2025-08-22T14:42:36.437+03:00 TRACE 24444 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:42:36.447+03:00 TRACE 24444 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:42:36.454+03:00 TRACE 24444 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:42:37.108+03:00 TRACE 24444 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:42:37.112+03:00 TRACE 24444 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:42:37.113+03:00 TRACE 24444 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:43:31.072+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:43:31.084+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost:58414/files/create
2025-08-22T14:43:31.086+03:00 DEBUG 24444 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:44:29.717+03:00  WARN 24444 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=55s250ms670µs600ns).
2025-08-22T14:44:29.819+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:44:29.820+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755863069820, current=DOWN, previous=UP]
2025-08-22T14:44:29.820+03:00  INFO 24444 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:44:29.824+03:00  INFO 24444 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:44:29.826+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:44:29.986+03:00  INFO 24444 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:44:30.001+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:44:30.002+03:00 TRACE 24444 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1766b7] for TypeConfiguration
2025-08-22T14:44:30.002+03:00 DEBUG 24444 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@461ead9d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1766b7]
2025-08-22T14:44:30.005+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:44:30.017+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:44:30.019+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:44:33.035+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:44:33.052+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:44:33.053+03:00  INFO 24444 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:44:48.205+03:00  INFO 24156 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 24156 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:44:48.208+03:00  INFO 24156 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:44:49.717+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:44:49.721+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:44:49.779+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.782+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.785+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.788+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.791+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.793+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.796+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.798+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.801+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.803+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:44:49.805+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:44:49.811+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:44:49.812+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:44:49.822+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.823+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.823+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.824+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.824+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.825+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.825+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.826+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.827+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.827+03:00  INFO 24156 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:44:49.828+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:44:49.835+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:44:49.837+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:44:50.021+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 178 ms. Found 10 JPA repository interfaces.
2025-08-22T14:44:50.405+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:44:52.250+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:44:52.270+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:44:52.271+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:44:52.418+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:44:52.419+03:00  INFO 24156 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4191 ms
2025-08-22T14:44:53.034+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:44:53.112+03:00  INFO 24156 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:44:53.168+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:44:53.285+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4c7b4a31
2025-08-22T14:44:53.285+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4c7b4a31
2025-08-22T14:44:53.285+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4c7b4a31
2025-08-22T14:44:53.286+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2df7766b
2025-08-22T14:44:53.286+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2df7766b
2025-08-22T14:44:53.286+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@235d46b2
2025-08-22T14:44:53.287+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@235d46b2
2025-08-22T14:44:53.287+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1644cc2d
2025-08-22T14:44:53.287+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1644cc2d
2025-08-22T14:44:53.288+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:44:53.288+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:44:53.288+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T14:44:53.289+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T14:44:53.290+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T14:44:53.290+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T14:44:53.290+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:44:53.291+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e17a9e6
2025-08-22T14:44:53.291+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T14:44:53.291+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:44:53.292+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T14:44:53.292+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:44:53.292+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:44:53.293+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T14:44:53.293+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T14:44:53.293+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T14:44:53.294+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:44:53.294+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:44:53.294+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:44:53.294+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:44:53.295+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:44:53.295+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:44:53.295+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:44:53.295+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:44:53.296+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:44:53.296+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:44:53.296+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:44:53.296+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T14:44:53.297+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:44:53.297+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T14:44:53.297+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:44:53.298+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:44:53.298+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:44:53.298+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:44:53.298+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:44:53.298+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:44:53.299+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:44:53.299+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:44:53.299+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:44:53.299+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:44:53.300+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:44:53.300+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:44:53.300+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:44:53.301+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:44:53.301+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:44:53.301+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:44:53.301+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:44:53.302+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:44:53.302+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:44:53.302+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:44:53.302+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:44:53.303+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:44:53.303+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:44:53.303+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:44:53.304+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:44:53.304+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:44:53.304+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:44:53.304+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:44:53.305+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:44:53.305+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:44:53.306+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:44:53.306+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:44:53.306+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:44:53.306+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:44:53.307+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:44:53.307+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:44:53.307+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:44:53.307+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:44:53.307+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:44:53.307+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:44:53.308+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:44:53.308+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:44:53.308+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:44:53.308+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:44:53.308+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:44:53.309+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:44:53.309+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:44:53.309+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:44:53.309+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:44:53.310+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:44:53.310+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:44:53.310+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:44:53.310+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:44:53.310+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:44:53.311+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:44:53.311+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:44:53.311+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:44:53.311+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:44:53.311+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:44:53.311+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:44:53.312+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:44:53.312+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:44:53.312+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:44:53.312+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:44:53.312+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:44:53.312+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:44:53.313+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:44:53.313+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:44:53.313+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:44:53.313+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:44:53.313+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:44:53.313+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:44:53.314+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:44:53.314+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:44:53.314+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:44:53.314+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:44:53.314+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:44:53.314+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:44:53.315+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:44:53.315+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:44:53.315+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:44:53.315+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:44:53.315+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:44:53.315+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:44:53.315+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:44:53.324+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@63e4bbf9
2025-08-22T14:44:53.324+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@63e4bbf9
2025-08-22T14:44:53.328+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1dcc0bb8
2025-08-22T14:44:53.329+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@29767156
2025-08-22T14:44:53.330+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6f6998b6
2025-08-22T14:44:53.330+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@60493524
2025-08-22T14:44:53.330+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1da5635e
2025-08-22T14:44:53.330+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c35d7d
2025-08-22T14:44:53.330+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@24ccc91b
2025-08-22T14:44:53.330+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@d0538b3
2025-08-22T14:44:53.331+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b8c15de
2025-08-22T14:44:53.462+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:44:53.530+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:44:53.782+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@564e9c0b
2025-08-22T14:44:53.785+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:44:53.909+03:00  INFO 24156 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:44:53.923+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@9742012) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@118d7e0e)
2025-08-22T14:44:53.924+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39ff4421) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a59780b)
2025-08-22T14:44:53.929+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:44:53.930+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:44:53.942+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@35ffe3ac
2025-08-22T14:44:53.943+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35ffe3ac
2025-08-22T14:44:53.943+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@63e4bbf9`
2025-08-22T14:44:53.953+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:44:53.954+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:44:53.954+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:44:53.960+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:44:53.961+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:44:53.961+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:44:53.961+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:44:53.962+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:44:53.962+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:44:53.963+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:44:53.964+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:44:53.964+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:44:53.966+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ed87b1c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@490dfe25]
2025-08-22T14:44:55.603+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:44:55.604+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ed87b1c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@63604641]
2025-08-22T14:44:55.758+03:00 TRACE 24156 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@63604641] for TypeConfiguration
2025-08-22T14:44:55.758+03:00  INFO 24156 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:44:56.250+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:44:56.262+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:44:56.388+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:44:56.412+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.file(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.429+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:44:56.430+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.FilesController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.430+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:44:56.431+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.files(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.431+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:44:56.432+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.createFile(java.lang.String) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.432+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:44:56.433+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.filteredFiles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.433+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:44:56.434+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.lang.String com.goglotek.frauddetector.datastoreservice.controller.FilesController.testUrl()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.453+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:44:56.463+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:44:56.463+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.465+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:44:56.465+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.488+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:44:56.488+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.511+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:44:56.511+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.513+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:44:56.513+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:56.541+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:44:56.560+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:44:57.223+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:44:57.234+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:44:57.234+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.236+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:44:57.236+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.236+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:44:57.237+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.237+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:44:57.238+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.257+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:44:57.468+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:44:57.489+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:44:57.489+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.491+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:44:57.492+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.492+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:44:57.493+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.493+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:44:57.493+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.494+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:44:57.494+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.525+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:44:57.526+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.536+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:44:57.537+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.549+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:44:57.549+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.551+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:44:57.551+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.552+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:44:57.552+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:44:57.708+03:00  WARN 24156 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:44:59.003+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:44:59.066+03:00  INFO 24156 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:45:01.804+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x000002b701d462e0@9129ab1 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:45:01.834+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:45:02.632+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:45:02.639+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:45:02.642+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:45:02.755+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:45:02.756+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:45:02.759+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:45:02.942+03:00  INFO 24156 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:45:03.039+03:00  WARN 24156 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:45:03.331+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58445 (http) with context path '/'
2025-08-22T14:45:03.335+03:00  INFO 24156 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58445
2025-08-22T14:45:03.345+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:45:03.398+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:45:03.406+03:00  INFO 24156 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:45:03.424+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:45:03.425+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:45:03.425+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:45:03.425+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:45:03.425+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:45:03.425+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:45:03.425+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:45:03.866+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:45:03.870+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:45:03.875+03:00  INFO 24156 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:45:03.879+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755863103877 with initial instances count: 2
2025-08-22T14:45:03.888+03:00  INFO 24156 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:45:03.889+03:00  INFO 24156 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755863103889, current=UP, previous=STARTING]
2025-08-22T14:45:03.892+03:00  INFO 24156 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:45:03.974+03:00  INFO 24156 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:45:04.409+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 76ms, rows: 1
2025-08-22T14:45:04.443+03:00  INFO 24156 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    749100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    355000 nanoseconds spent preparing 1 JDBC statements;
    3934700 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    21328300 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    60100 nanoseconds spent executing 1 pre-partial-flushes;
    14700 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:45:04.449+03:00  INFO 24156 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.806 seconds (process running for 18.818)
2025-08-22T14:46:19.468+03:00  WARN 24156 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s581ms970µs500ns).
2025-08-22T14:46:19.641+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:46:19.712+03:00 TRACE 24156 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:46:19.733+03:00 TRACE 24156 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:46:23.972+03:00 TRACE 24156 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:46:23.973+03:00 TRACE 24156 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:46:23.981+03:00 TRACE 24156 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@20de2518
2025-08-22T14:46:23.999+03:00 TRACE 24156 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:46:24.002+03:00 TRACE 24156 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4006d0cb
2025-08-22T14:46:24.005+03:00 TRACE 24156 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:46:24.017+03:00 TRACE 24156 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:46:24.023+03:00 TRACE 24156 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:46:24.675+03:00 TRACE 24156 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:46:24.680+03:00 TRACE 24156 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:46:24.681+03:00 TRACE 24156 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:46:30.154+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:46:30.167+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost:58445/files/create
2025-08-22T14:46:30.169+03:00 DEBUG 24156 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:48:23.755+03:00  WARN 24156 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m4s287ms488µs200ns).
2025-08-22T14:48:23.818+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:48:23.818+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755863303818, current=DOWN, previous=UP]
2025-08-22T14:48:23.819+03:00  INFO 24156 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:48:23.823+03:00  INFO 24156 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:48:23.825+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:48:24.020+03:00  INFO 24156 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:48:24.035+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:48:24.036+03:00 TRACE 24156 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@63604641] for TypeConfiguration
2025-08-22T14:48:24.037+03:00 DEBUG 24156 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@310bc9d0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@63604641]
2025-08-22T14:48:24.038+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:48:24.049+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:48:24.054+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:48:27.070+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:48:27.090+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:48:27.091+03:00  INFO 24156 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T14:52:24.867+03:00  INFO 21404 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 21404 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T14:52:24.870+03:00  INFO 21404 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T14:52:26.355+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:52:26.359+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:52:26.419+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.421+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.424+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.427+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.429+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.432+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.434+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.437+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.439+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.442+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T14:52:26.443+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T14:52:26.457+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:52:26.458+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T14:52:26.470+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.471+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.472+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.473+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.474+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.474+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.475+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.476+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.477+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.478+03:00  INFO 21404 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T14:52:26.478+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T14:52:26.489+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T14:52:26.490+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T14:52:26.688+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 191 ms. Found 10 JPA repository interfaces.
2025-08-22T14:52:27.097+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T14:52:29.082+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T14:52:29.105+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T14:52:29.106+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T14:52:29.211+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T14:52:29.212+03:00  INFO 21404 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4323 ms
2025-08-22T14:52:29.703+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T14:52:29.780+03:00  INFO 21404 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T14:52:29.836+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T14:52:29.951+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:52:29.951+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:52:29.951+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T14:52:29.952+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:52:29.952+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T14:52:29.953+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T14:52:29.953+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T14:52:29.953+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:52:29.953+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T14:52:29.953+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:52:29.954+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:52:29.955+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T14:52:29.956+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:52:29.956+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:52:29.957+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T14:52:29.957+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:52:29.958+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T14:52:29.959+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T14:52:29.960+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:52:29.960+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T14:52:29.960+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T14:52:29.960+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T14:52:29.961+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:52:29.961+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:52:29.961+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T14:52:29.961+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:52:29.961+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:52:29.962+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T14:52:29.962+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:52:29.962+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:52:29.962+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T14:52:29.963+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:52:29.963+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:52:29.963+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T14:52:29.963+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:52:29.964+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:52:29.964+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T14:52:29.967+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:52:29.968+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T14:52:29.968+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:52:29.968+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T14:52:29.969+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:52:29.969+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:52:29.969+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T14:52:29.969+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T14:52:29.969+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:52:29.970+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T14:52:29.971+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T14:52:29.972+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:52:29.972+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:52:29.972+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T14:52:29.972+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T14:52:29.973+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T14:52:29.973+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T14:52:29.974+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:52:29.974+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T14:52:29.974+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:52:29.974+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T14:52:29.975+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T14:52:29.975+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T14:52:29.975+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T14:52:29.976+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T14:52:29.976+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T14:52:29.976+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T14:52:29.977+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:52:29.977+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T14:52:29.977+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:52:29.978+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T14:52:29.978+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:52:29.978+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T14:52:29.978+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:52:29.979+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T14:52:29.979+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:52:29.979+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T14:52:29.979+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T14:52:29.980+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T14:52:29.980+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:52:29.980+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T14:52:29.981+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T14:52:29.981+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T14:52:29.981+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T14:52:29.982+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:52:29.982+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T14:52:29.982+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T14:52:29.983+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T14:52:29.983+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:52:29.983+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T14:52:29.983+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:52:29.984+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T14:52:29.984+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:52:29.984+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:52:29.995+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T14:52:29.995+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:52:29.995+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:52:29.995+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T14:52:29.995+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T14:52:29.995+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T14:52:29.996+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:52:29.996+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T14:52:29.996+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:52:29.997+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:52:29.997+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T14:52:29.997+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T14:52:29.997+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T14:52:29.998+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:52:29.998+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T14:52:29.998+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:52:29.999+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:52:29.999+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T14:52:29.999+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:52:29.999+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5ec25b61
2025-08-22T14:52:29.999+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:52:30.000+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7da40bf4
2025-08-22T14:52:30.001+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:52:30.001+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@75708130
2025-08-22T14:52:30.001+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:52:30.002+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@c651286
2025-08-22T14:52:30.002+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@40304938
2025-08-22T14:52:30.002+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@40304938
2025-08-22T14:52:30.002+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1d160161
2025-08-22T14:52:30.002+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@6c9e7af2
2025-08-22T14:52:30.003+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@48cbb4c5
2025-08-22T14:52:30.003+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@af04d6d
2025-08-22T14:52:30.003+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2740585b
2025-08-22T14:52:30.014+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1dcc0bb8
2025-08-22T14:52:30.015+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1dcc0bb8
2025-08-22T14:52:30.016+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@401b7226
2025-08-22T14:52:30.017+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1b62ad1e
2025-08-22T14:52:30.017+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@714a4ba2
2025-08-22T14:52:30.018+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ddc817f
2025-08-22T14:52:30.018+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764d54a0
2025-08-22T14:52:30.018+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@78c91d2a
2025-08-22T14:52:30.018+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5b7d5eca
2025-08-22T14:52:30.019+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@52a3eba3
2025-08-22T14:52:30.019+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ed74d03
2025-08-22T14:52:30.089+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T14:52:30.138+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T14:52:30.458+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4505ec36
2025-08-22T14:52:30.462+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T14:52:30.570+03:00  INFO 21404 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T14:52:30.593+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f45be42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5c7876e1)
2025-08-22T14:52:30.593+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d9016fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f378d7e)
2025-08-22T14:52:30.599+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T14:52:30.599+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T14:52:30.619+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@44233014
2025-08-22T14:52:30.619+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@44233014
2025-08-22T14:52:30.619+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1dcc0bb8`
2025-08-22T14:52:30.628+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T14:52:30.629+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:52:30.629+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T14:52:30.635+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:52:30.635+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:52:30.635+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T14:52:30.635+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:52:30.635+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:52:30.635+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T14:52:30.637+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:52:30.637+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:52:30.638+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T14:52:30.640+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@311eb725] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a791e8b]
2025-08-22T14:52:32.129+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T14:52:32.130+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@311eb725] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@19e552a3]
2025-08-22T14:52:32.292+03:00 TRACE 21404 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@19e552a3] for TypeConfiguration
2025-08-22T14:52:32.292+03:00  INFO 21404 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:52:32.764+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T14:52:32.778+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:32.911+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:52:32.938+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.file(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:32.955+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:52:32.955+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.FilesController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:32.956+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:52:32.956+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.files(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:32.956+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:52:32.957+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.createFile(java.lang.String) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:32.958+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:52:32.958+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.filteredFiles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:32.959+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T14:52:32.959+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.lang.String com.goglotek.frauddetector.datastoreservice.controller.FilesController.testUrl()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:32.980+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:32.994+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:52:32.994+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:32.996+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T14:52:32.997+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:33.033+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T14:52:33.034+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:33.085+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:52:33.086+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:33.089+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:52:33.090+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:33.090+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T14:52:33.090+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:33.126+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:33.149+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T14:52:34.105+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:34.122+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:52:34.122+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.124+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:52:34.124+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.125+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:52:34.125+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.125+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T14:52:34.126+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.182+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:34.346+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:34.371+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:52:34.372+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.373+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:52:34.374+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.374+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:52:34.375+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.375+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:52:34.376+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.376+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T14:52:34.377+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.407+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T14:52:34.408+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.418+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T14:52:34.419+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.431+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T14:52:34.432+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.433+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T14:52:34.434+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.434+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T14:52:34.434+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T14:52:34.570+03:00  WARN 21404 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T14:52:35.875+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T14:52:35.944+03:00  INFO 21404 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T14:52:38.503+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x000002d701d4ab48@16727a8c with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T14:52:38.530+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T14:52:39.418+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:39.426+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:39.458+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:39.584+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T14:52:39.584+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T14:52:39.587+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T14:52:39.774+03:00  INFO 21404 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T14:52:39.859+03:00  WARN 21404 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T14:52:40.185+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58494 (http) with context path '/'
2025-08-22T14:52:40.190+03:00  INFO 21404 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58494
2025-08-22T14:52:40.204+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T14:52:40.263+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T14:52:40.270+03:00  INFO 21404 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T14:52:40.291+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T14:52:40.291+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T14:52:40.292+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T14:52:40.292+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T14:52:40.292+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T14:52:40.292+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T14:52:40.292+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T14:52:40.751+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T14:52:40.755+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T14:52:40.759+03:00  INFO 21404 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T14:52:40.763+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755863560761 with initial instances count: 2
2025-08-22T14:52:40.772+03:00  INFO 21404 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T14:52:40.774+03:00  INFO 21404 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755863560774, current=UP, previous=STARTING]
2025-08-22T14:52:40.777+03:00  INFO 21404 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:52:40.852+03:00  INFO 21404 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:52:41.145+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.email,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 64ms, rows: 1
2025-08-22T14:52:41.187+03:00  INFO 21404 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    699100 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    291900 nanoseconds spent preparing 1 JDBC statements;
    4601500 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    27948000 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    34800 nanoseconds spent executing 1 pre-partial-flushes;
    13400 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T14:52:41.194+03:00  INFO 21404 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 16.886 seconds (process running for 18.921)
2025-08-22T14:52:41.418+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T14:52:41.440+03:00 TRACE 21404 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T14:52:41.446+03:00 TRACE 21404 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T14:52:41.862+03:00 TRACE 21404 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T14:52:41.862+03:00 TRACE 21404 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T14:52:41.865+03:00 TRACE 21404 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@7c80dfd
2025-08-22T14:52:41.870+03:00 TRACE 21404 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T14:52:41.872+03:00 TRACE 21404 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@61b33ef7
2025-08-22T14:52:41.874+03:00 TRACE 21404 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T14:52:41.878+03:00 TRACE 21404 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T14:52:41.880+03:00 TRACE 21404 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T14:52:42.003+03:00 TRACE 21404 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T14:52:42.006+03:00 TRACE 21404 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T14:52:42.006+03:00 TRACE 21404 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T14:52:55.210+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T14:52:55.223+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost:58494/files/create
2025-08-22T14:52:55.224+03:00 DEBUG 21404 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T14:53:54.854+03:00  WARN 21404 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m24s288ms330µs900ns).
2025-08-22T14:53:59.754+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T14:53:59.755+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755863639755, current=DOWN, previous=UP]
2025-08-22T14:53:59.755+03:00  INFO 21404 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T14:53:59.761+03:00  INFO 21404 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T14:53:59.763+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T14:53:59.941+03:00  INFO 21404 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T14:53:59.952+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T14:53:59.954+03:00 TRACE 21404 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@19e552a3] for TypeConfiguration
2025-08-22T14:53:59.954+03:00 DEBUG 21404 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@46dd0812] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@19e552a3]
2025-08-22T14:53:59.956+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T14:53:59.970+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T14:53:59.971+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T14:54:02.984+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T14:54:03.001+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T14:54:03.002+03:00  INFO 21404 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T15:49:02.555+03:00  INFO 20720 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 20720 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T15:49:02.563+03:00  INFO 20720 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T15:49:04.238+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T15:49:04.241+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T15:49:04.307+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.310+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.313+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.315+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.318+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.321+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.324+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.326+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.329+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.332+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T15:49:04.333+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T15:49:04.340+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T15:49:04.341+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T15:49:04.352+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.353+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.354+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.354+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.355+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.355+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.356+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.356+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.357+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.358+03:00  INFO 20720 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T15:49:04.358+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T15:49:04.369+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T15:49:04.371+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T15:49:04.563+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 186 ms. Found 10 JPA repository interfaces.
2025-08-22T15:49:05.017+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T15:49:07.284+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T15:49:07.318+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T15:49:07.319+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T15:49:07.533+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T15:49:07.534+03:00  INFO 20720 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4947 ms
2025-08-22T15:49:08.404+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T15:49:08.546+03:00  INFO 20720 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T15:49:08.685+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T15:49:08.909+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@d827673
2025-08-22T15:49:08.910+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@d827673
2025-08-22T15:49:08.910+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@d827673
2025-08-22T15:49:08.911+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@d695f9d
2025-08-22T15:49:08.912+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@d695f9d
2025-08-22T15:49:08.912+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7daf167
2025-08-22T15:49:08.913+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7daf167
2025-08-22T15:49:08.913+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6df4d8f1
2025-08-22T15:49:08.914+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6df4d8f1
2025-08-22T15:49:08.915+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@735b1ad2
2025-08-22T15:49:08.915+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@735b1ad2
2025-08-22T15:49:08.916+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@735b1ad2
2025-08-22T15:49:08.917+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@34893693
2025-08-22T15:49:08.917+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@34893693
2025-08-22T15:49:08.918+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@34893693
2025-08-22T15:49:08.918+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@456c53a
2025-08-22T15:49:08.919+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@456c53a
2025-08-22T15:49:08.919+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7916568d
2025-08-22T15:49:08.919+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@58fadccb
2025-08-22T15:49:08.920+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@58fadccb
2025-08-22T15:49:08.920+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@711fbcef
2025-08-22T15:49:08.921+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@43d2c8e3
2025-08-22T15:49:08.921+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@8bb5c2a
2025-08-22T15:49:08.922+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@8bb5c2a
2025-08-22T15:49:08.922+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@8bb5c2a
2025-08-22T15:49:08.923+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6a9d572
2025-08-22T15:49:08.924+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6a9d572
2025-08-22T15:49:08.924+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6a9d572
2025-08-22T15:49:08.925+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@a5df98c
2025-08-22T15:49:08.925+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@a5df98c
2025-08-22T15:49:08.925+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@a5df98c
2025-08-22T15:49:08.926+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5f1dadf4
2025-08-22T15:49:08.926+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5f1dadf4
2025-08-22T15:49:08.927+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5f1dadf4
2025-08-22T15:49:08.928+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@d15f031
2025-08-22T15:49:08.928+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@d15f031
2025-08-22T15:49:08.929+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@d15f031
2025-08-22T15:49:08.929+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@45dfb6a4
2025-08-22T15:49:08.930+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@45dfb6a4
2025-08-22T15:49:08.930+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@202ba60a
2025-08-22T15:49:08.930+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@202ba60a
2025-08-22T15:49:08.931+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@12ebcdf6
2025-08-22T15:49:08.931+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@12ebcdf6
2025-08-22T15:49:08.932+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12ebcdf6
2025-08-22T15:49:08.932+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@30dd23e2
2025-08-22T15:49:08.932+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@88fc9cb
2025-08-22T15:49:08.933+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@88fc9cb
2025-08-22T15:49:08.933+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@75693526
2025-08-22T15:49:08.934+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@39a1c200
2025-08-22T15:49:08.934+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@39a1c200
2025-08-22T15:49:08.934+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@39a1c200
2025-08-22T15:49:08.935+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@603a34e5
2025-08-22T15:49:08.935+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@160d68b8
2025-08-22T15:49:08.936+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2af1bf5a
2025-08-22T15:49:08.936+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@1d77d9c6
2025-08-22T15:49:08.937+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1d77d9c6
2025-08-22T15:49:08.937+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2c5b4b91
2025-08-22T15:49:08.938+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2c5b4b91
2025-08-22T15:49:08.938+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@51eeae0a
2025-08-22T15:49:08.938+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@76c2d002
2025-08-22T15:49:08.939+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@55589ef5
2025-08-22T15:49:08.939+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@23a9400c
2025-08-22T15:49:08.939+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@793248d
2025-08-22T15:49:08.940+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6731b6bd
2025-08-22T15:49:08.940+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@768f2398
2025-08-22T15:49:08.940+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@768f2398
2025-08-22T15:49:08.941+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1f4fa465
2025-08-22T15:49:08.941+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1f4fa465
2025-08-22T15:49:08.941+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1e65c4d
2025-08-22T15:49:08.942+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1e65c4d
2025-08-22T15:49:08.942+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b888692
2025-08-22T15:49:08.942+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b888692
2025-08-22T15:49:08.943+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6414eb98
2025-08-22T15:49:08.943+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6414eb98
2025-08-22T15:49:08.944+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61a17f3
2025-08-22T15:49:08.944+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@352d3749
2025-08-22T15:49:08.944+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1a3e8b68
2025-08-22T15:49:08.945+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1a3e8b68
2025-08-22T15:49:08.945+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5935eb9c
2025-08-22T15:49:08.945+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@fc6cac6
2025-08-22T15:49:08.946+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@538d2308
2025-08-22T15:49:08.946+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3d0697da
2025-08-22T15:49:08.946+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3d0697da
2025-08-22T15:49:08.947+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b99f2ed
2025-08-22T15:49:08.947+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@723081a2
2025-08-22T15:49:08.947+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@481f698f
2025-08-22T15:49:08.948+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@481f698f
2025-08-22T15:49:08.948+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@41ae9f11
2025-08-22T15:49:08.949+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@41ae9f11
2025-08-22T15:49:08.949+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@45a40353
2025-08-22T15:49:08.949+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@45a40353
2025-08-22T15:49:08.950+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@45a40353
2025-08-22T15:49:08.950+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@33efa7d4
2025-08-22T15:49:08.950+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@33efa7d4
2025-08-22T15:49:08.950+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@33efa7d4
2025-08-22T15:49:08.951+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@fe337
2025-08-22T15:49:08.951+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@356cb230
2025-08-22T15:49:08.952+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@50b78155
2025-08-22T15:49:08.952+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@50b78155
2025-08-22T15:49:08.952+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1e284d90
2025-08-22T15:49:08.953+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1e284d90
2025-08-22T15:49:08.953+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1e284d90
2025-08-22T15:49:08.953+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@61c11339
2025-08-22T15:49:08.954+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@31ecd003
2025-08-22T15:49:08.954+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5d3d5242
2025-08-22T15:49:08.954+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5d3d5242
2025-08-22T15:49:08.955+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1a5c0b8
2025-08-22T15:49:08.955+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1a5c0b8
2025-08-22T15:49:08.956+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1a5c0b8
2025-08-22T15:49:08.956+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6894436e
2025-08-22T15:49:08.957+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6894436e
2025-08-22T15:49:08.958+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3f2feab7
2025-08-22T15:49:08.958+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3f2feab7
2025-08-22T15:49:08.959+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@8b71052
2025-08-22T15:49:08.959+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@8b71052
2025-08-22T15:49:08.960+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2738a1fc
2025-08-22T15:49:08.960+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2738a1fc
2025-08-22T15:49:08.960+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@6d7d0946
2025-08-22T15:49:08.961+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6d7d0946
2025-08-22T15:49:08.962+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2dc72c0c
2025-08-22T15:49:08.962+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@1dc28c66
2025-08-22T15:49:08.962+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@7f97e963
2025-08-22T15:49:08.962+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@7a25f8ee
2025-08-22T15:49:08.963+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e161cea
2025-08-22T15:49:08.974+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@6cb2b947
2025-08-22T15:49:08.974+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6cb2b947
2025-08-22T15:49:08.976+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6b8a9e1
2025-08-22T15:49:08.977+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4c51fc9a
2025-08-22T15:49:08.977+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@425376cc
2025-08-22T15:49:08.978+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@28705150
2025-08-22T15:49:08.978+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6b44121e
2025-08-22T15:49:08.978+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@28b286c0
2025-08-22T15:49:08.978+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@718e700c
2025-08-22T15:49:08.979+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5b5e45bc
2025-08-22T15:49:08.979+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@10c1682b
2025-08-22T15:49:09.099+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T15:49:09.175+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T15:49:09.577+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7bc239db
2025-08-22T15:49:09.581+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T15:49:09.770+03:00  INFO 20720 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T15:49:09.789+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@740530b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3dd8b40e)
2025-08-22T15:49:09.789+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4101e146) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7104b117)
2025-08-22T15:49:09.795+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T15:49:09.796+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T15:49:09.817+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56a6aadb
2025-08-22T15:49:09.817+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56a6aadb
2025-08-22T15:49:09.818+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6cb2b947`
2025-08-22T15:49:09.829+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T15:49:09.829+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T15:49:09.829+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T15:49:09.844+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T15:49:09.844+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T15:49:09.845+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T15:49:09.845+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T15:49:09.846+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T15:49:09.846+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T15:49:09.848+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T15:49:09.848+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T15:49:09.848+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T15:49:09.852+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@786de0a3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@472dc215]
2025-08-22T15:49:12.151+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T15:49:12.153+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@786de0a3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@731819a0]
2025-08-22T15:49:12.286+03:00  WARN 20720 --- [DataStoreService] [Test worker] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists users 
       add column account_not_expired boolean not null" via JDBC [ERROR: column "account_not_expired" of relation "users" contains null values]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists users 
       add column account_not_expired boolean not null" via JDBC [ERROR: column "account_not_expired" of relation "users" contains null values]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:99) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:70) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.postgresql.util.PSQLException: ERROR: column "account_not_expired" of relation "users" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279) ~[postgresql-42.2.18.jar:42.2.18]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.1.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	... 136 common frames omitted

2025-08-22T15:49:12.308+03:00  WARN 20720 --- [DataStoreService] [Test worker] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists users 
       add column account_not_locked boolean not null" via JDBC [ERROR: column "account_not_locked" of relation "users" contains null values]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists users 
       add column account_not_locked boolean not null" via JDBC [ERROR: column "account_not_locked" of relation "users" contains null values]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:99) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:70) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.postgresql.util.PSQLException: ERROR: column "account_not_locked" of relation "users" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279) ~[postgresql-42.2.18.jar:42.2.18]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.1.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	... 136 common frames omitted

2025-08-22T15:49:12.323+03:00  WARN 20720 --- [DataStoreService] [Test worker] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists users 
       add column credentials_not_expired boolean not null" via JDBC [ERROR: column "credentials_not_expired" of relation "users" contains null values]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists users 
       add column credentials_not_expired boolean not null" via JDBC [ERROR: column "credentials_not_expired" of relation "users" contains null values]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:99) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:70) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.postgresql.util.PSQLException: ERROR: column "credentials_not_expired" of relation "users" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279) ~[postgresql-42.2.18.jar:42.2.18]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.1.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	... 136 common frames omitted

2025-08-22T15:49:12.339+03:00  WARN 20720 --- [DataStoreService] [Test worker] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists users 
       add column enabled boolean not null" via JDBC [ERROR: column "enabled" of relation "users" contains null values]

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists users 
       add column enabled boolean not null" via JDBC [ERROR: column "enabled" of relation "users" contains null values]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1421) ~[na:na]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:99) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:70) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.postgresql.util.PSQLException: ERROR: column "enabled" of relation "users" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279) ~[postgresql-42.2.18.jar:42.2.18]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.1.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	... 136 common frames omitted

2025-08-22T15:49:12.524+03:00 TRACE 20720 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@731819a0] for TypeConfiguration
2025-08-22T15:49:12.525+03:00  INFO 20720 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T15:49:13.224+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T15:49:13.239+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:13.451+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T15:49:13.487+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.file(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.511+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T15:49:13.512+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.FilesController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.513+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T15:49:13.514+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.files(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.515+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T15:49:13.516+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.createFile(java.lang.String) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.516+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T15:49:13.516+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.lang.String com.goglotek.frauddetector.datastoreservice.controller.FilesController.testUrl()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.517+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T15:49:13.518+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.filteredFiles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.551+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:13.571+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T15:49:13.572+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.573+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T15:49:13.574+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.610+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T15:49:13.611+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.645+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T15:49:13.646+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.648+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T15:49:13.649+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:13.689+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:13.713+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T15:49:14.749+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:14.785+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T15:49:14.786+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:14.787+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T15:49:14.788+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:14.788+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T15:49:14.788+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:14.789+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T15:49:14.789+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:14.828+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:15.067+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:15.097+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T15:49:15.098+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.099+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T15:49:15.100+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.100+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T15:49:15.101+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.101+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T15:49:15.101+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.102+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T15:49:15.103+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.139+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T15:49:15.140+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.152+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T15:49:15.152+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.164+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T15:49:15.165+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.166+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T15:49:15.167+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.167+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T15:49:15.168+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T15:49:15.332+03:00  WARN 20720 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T15:49:16.987+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T15:49:17.054+03:00  INFO 20720 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T15:49:19.695+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2238/0x00000296cdcc15a0@75f25013 with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T15:49:19.720+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T15:49:20.677+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:20.684+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:20.686+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:20.788+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T15:49:20.789+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T15:49:20.792+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T15:49:20.969+03:00  INFO 20720 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T15:49:21.051+03:00  WARN 20720 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T15:49:21.405+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58664 (http) with context path '/'
2025-08-22T15:49:21.408+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58664
2025-08-22T15:49:21.419+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T15:49:21.478+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T15:49:21.487+03:00  INFO 20720 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T15:49:21.501+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T15:49:21.501+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T15:49:21.501+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T15:49:21.502+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T15:49:21.502+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T15:49:21.502+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T15:49:21.502+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T15:49:21.902+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T15:49:21.905+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T15:49:21.908+03:00  INFO 20720 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T15:49:21.910+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755866961909 with initial instances count: 2
2025-08-22T15:49:21.916+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T15:49:21.917+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755866961917, current=UP, previous=STARTING]
2025-08-22T15:49:21.920+03:00  INFO 20720 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T15:49:22.007+03:00  INFO 20720 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T15:49:22.227+03:00  WARN 20720 --- [DataStoreService] [Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 0, SQLState: 42703
2025-08-22T15:49:22.227+03:00 ERROR 20720 --- [DataStoreService] [Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : ERROR: column u1_0.account_not_expired does not exist
  Position: 21
2025-08-22T15:49:22.244+03:00  INFO 20720 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    689900 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    274700 nanoseconds spent preparing 1 JDBC statements;
    10286000 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    30200 nanoseconds spent executing 1 pre-partial-flushes;
    13700 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T15:49:22.245+03:00  WARN 20720 --- [DataStoreService] [Test worker] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select u1_0.user_id,u1_0.account_not_expired,u1_0.account_not_locked,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.credentials_not_expired,u1_0.email,u1_0.enabled,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?] [ERROR: column u1_0.account_not_expired does not exist
  Position: 21] [n/a]; SQL [n/a]
2025-08-22T15:49:22.256+03:00  INFO 20720 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T15:49:22.258+03:00 TRACE 20720 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@731819a0] for TypeConfiguration
2025-08-22T15:49:22.258+03:00 DEBUG 20720 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@292e8d0a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@731819a0]
2025-08-22T15:49:22.262+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T15:49:22.269+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T15:49:22.271+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T15:49:25.285+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T15:49:25.303+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T15:49:25.303+03:00  INFO 20720 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-08-22T15:49:25.439+03:00  INFO 20720 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-08-22T15:49:25.479+03:00  INFO 20720 --- [DataStoreService] [Test worker] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-22T15:49:25.536+03:00 ERROR 20720 --- [DataStoreService] [Test worker] o.s.boot.SpringApplication               : Application run failed

org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select u1_0.user_id,u1_0.account_not_expired,u1_0.account_not_locked,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.credentials_not_expired,u1_0.email,u1_0.enabled,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?] [ERROR: column u1_0.account_not_expired does not exist
  Position: 21] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:281) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.9.jar:6.2.9]
	at jdk.proxy3/jdk.proxy3.$Proxy204.findByEmail(Unknown Source) ~[na:na]
	at com.goglotek.frauddetector.datastoreservice.service.impl.UsersServiceImpl.findByEmail(UsersServiceImpl.java:42) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.9.jar:6.2.9]
	at com.goglotek.frauddetector.datastoreservice.service.impl.UsersServiceImpl$$SpringCGLIB$$0.findByEmail(<generated>) ~[main/:na]
	at com.goglotek.frauddetector.datastoreservice.SetupDataLoader.onApplicationEvent(SetupDataLoader.java:40) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.9.jar:6.2.9]
	at com.goglotek.frauddetector.datastoreservice.SetupDataLoader$$SpringCGLIB$$0.onApplicationEvent(<generated>) ~[main/:na]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1009) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:99) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:70) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select u1_0.user_id,u1_0.account_not_expired,u1_0.account_not_locked,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.credentials_not_expired,u1_0.email,u1_0.enabled,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?] [ERROR: column u1_0.account_not_expired does not exist
  Position: 21] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:91) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:269) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:172) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:149) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:439) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:359) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.9.jar:6.2.9]
	... 139 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: column u1_0.account_not_expired does not exist
  Position: 21
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114) ~[postgresql-42.2.18.jar:42.2.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-6.3.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.1.jar:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:251) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	... 167 common frames omitted

2025-08-22T15:49:25.555+03:00  WARN 20720 --- [DataStoreService] [Test worker] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests@70d36074]

java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7c671bcb testClass = com.goglotek.frauddetector.datastoreservice.controller.FilesControllerTests, locations = [], classes = [com.goglotek.frauddetector.datastoreservice.DataStoreServiceApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@24b6b8f6, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4fbda97b, [ImportsContextCustomizer@362f5054 key = [org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientWebSecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@37bd68c3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@45cff11c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@50fe837a, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@3829ac1, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@249b9f3a, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@53156849], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:99) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:70) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159) ~[spring-test-6.2.9.jar:6.2.9]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94) ~[na:na]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89) ~[na:na]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[na:na]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[na:na]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[na:na]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[na:na]
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[na:na]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[na:na]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113) ~[na:na]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65) ~[na:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:na]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:na]
Caused by: org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select u1_0.user_id,u1_0.account_not_expired,u1_0.account_not_locked,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.credentials_not_expired,u1_0.email,u1_0.enabled,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?] [ERROR: column u1_0.account_not_expired does not exist
  Position: 21] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:281) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.9.jar:6.2.9]
	at jdk.proxy3/jdk.proxy3.$Proxy204.findByEmail(Unknown Source) ~[na:na]
	at com.goglotek.frauddetector.datastoreservice.service.impl.UsersServiceImpl.findByEmail(UsersServiceImpl.java:42) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:724) ~[spring-aop-6.2.9.jar:6.2.9]
	at com.goglotek.frauddetector.datastoreservice.service.impl.UsersServiceImpl$$SpringCGLIB$$0.findByEmail(<generated>) ~[main/:na]
	at com.goglotek.frauddetector.datastoreservice.SetupDataLoader.onApplicationEvent(SetupDataLoader.java:40) ~[main/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.9.jar:6.2.9]
	at com.goglotek.frauddetector.datastoreservice.SetupDataLoader$$SpringCGLIB$$0.onApplicationEvent(<generated>) ~[main/:na]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1009) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630) ~[spring-context-6.2.9.jar:6.2.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46) ~[spring-core-6.2.9.jar:6.2.9]
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461) ~[spring-boot-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110) ~[spring-boot-test-3.5.4.jar:3.5.4]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152) ~[spring-test-6.2.9.jar:6.2.9]
	... 93 common frames omitted
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select u1_0.user_id,u1_0.account_not_expired,u1_0.account_not_locked,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.credentials_not_expired,u1_0.email,u1_0.enabled,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?] [ERROR: column u1_0.account_not_expired does not exist
  Position: 21] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:91) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:269) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:172) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:149) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:439) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:359) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:160) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:148) ~[spring-data-jpa-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.5.2.jar:3.5.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.9.jar:6.2.9]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.9.jar:6.2.9]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.9.jar:6.2.9]
	... 139 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: column u1_0.account_not_expired does not exist
  Position: 21
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164) ~[postgresql-42.2.18.jar:42.2.18]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114) ~[postgresql-42.2.18.jar:42.2.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-6.3.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.1.jar:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:251) ~[hibernate-core-6.6.22.Final.jar:6.6.22.Final]
	... 167 common frames omitted

2025-08-22T16:06:06.580+03:00  INFO 19804 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Starting FilesControllerTests using Java 17.0.12 with PID 19804 (started by Admin in D:\Goglotek\Projects\fraud-detector\microservices\data-store-service)
2025-08-22T16:06:06.583+03:00  INFO 19804 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : No active profile set, falling back to 1 default profile: "default"
2025-08-22T16:06:08.098+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T16:06:08.101+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-08-22T16:06:08.160+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.162+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.165+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.168+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.171+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.173+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.176+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.179+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.182+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.185+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2025-08-22T16:06:08.187+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76 ms. Found 0 Elasticsearch repository interfaces.
2025-08-22T16:06:08.194+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T16:06:08.195+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-08-22T16:06:08.204+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.FilesRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.205+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.GroupAccountsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.205+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.LocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.206+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.PermissionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.207+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProcessingRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.207+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderLocalTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.208+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.ProviderTransactionsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.209+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.RoleRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.209+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.SettingsRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.210+03:00  INFO 19804 --- [DataStoreService] [Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.goglotek.frauddetector.datastoreservice.repository.UsersRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2025-08-22T16:06:08.210+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-08-22T16:06:08.219+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-22T16:06:08.220+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-22T16:06:08.425+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 198 ms. Found 10 JPA repository interfaces.
2025-08-22T16:06:08.827+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=20806616-5fef-34b9-9a7f-9f3950f74222
2025-08-22T16:06:10.803+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 0 (http)
2025-08-22T16:06:10.825+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-22T16:06:10.827+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-22T16:06:10.950+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-22T16:06:10.951+03:00  INFO 19804 --- [DataStoreService] [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4347 ms
2025-08-22T16:06:11.506+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-22T16:06:11.586+03:00  INFO 19804 --- [DataStoreService] [Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-22T16:06:11.638+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-22T16:06:11.775+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2df7766b
2025-08-22T16:06:11.775+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2df7766b
2025-08-22T16:06:11.775+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2df7766b
2025-08-22T16:06:11.776+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@235d46b2
2025-08-22T16:06:11.776+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@235d46b2
2025-08-22T16:06:11.776+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1644cc2d
2025-08-22T16:06:11.776+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1644cc2d
2025-08-22T16:06:11.776+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T16:06:11.777+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@f83616
2025-08-22T16:06:11.777+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T16:06:11.777+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T16:06:11.777+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@162a5c4c
2025-08-22T16:06:11.778+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T16:06:11.778+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T16:06:11.779+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5f0bf0ed
2025-08-22T16:06:11.779+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T16:06:11.779+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6a1b4854
2025-08-22T16:06:11.780+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6a175162
2025-08-22T16:06:11.780+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T16:06:11.780+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7641c4e7
2025-08-22T16:06:11.780+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@650a0b50
2025-08-22T16:06:11.780+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@55e3b64d
2025-08-22T16:06:11.781+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T16:06:11.781+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T16:06:11.781+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@52f71d2
2025-08-22T16:06:11.781+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T16:06:11.782+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T16:06:11.782+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d31fb6c
2025-08-22T16:06:11.782+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T16:06:11.782+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T16:06:11.783+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@48543f11
2025-08-22T16:06:11.783+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T16:06:11.783+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T16:06:11.783+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@cda988
2025-08-22T16:06:11.783+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T16:06:11.784+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T16:06:11.784+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e92e9a2
2025-08-22T16:06:11.784+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T16:06:11.784+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@c0a8787
2025-08-22T16:06:11.784+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T16:06:11.785+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@65cf8da0
2025-08-22T16:06:11.785+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T16:06:11.785+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T16:06:11.785+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@823f978
2025-08-22T16:06:11.786+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6195ce27
2025-08-22T16:06:11.786+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T16:06:11.786+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@397b5b2d
2025-08-22T16:06:11.786+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2040732f
2025-08-22T16:06:11.787+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T16:06:11.787+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T16:06:11.788+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@373fb666
2025-08-22T16:06:11.788+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7894a250
2025-08-22T16:06:11.788+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1bd53c5c
2025-08-22T16:06:11.788+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@38affd02
2025-08-22T16:06:11.789+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T16:06:11.789+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@72e9f0f7
2025-08-22T16:06:11.789+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T16:06:11.789+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2fb24ad8
2025-08-22T16:06:11.790+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1db7a4ae
2025-08-22T16:06:11.790+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5ab70df7
2025-08-22T16:06:11.790+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6764201e
2025-08-22T16:06:11.791+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5a3d52a0
2025-08-22T16:06:11.792+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7a0f1f9d
2025-08-22T16:06:11.792+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@18356d9e
2025-08-22T16:06:11.792+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T16:06:11.793+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5e97da56
2025-08-22T16:06:11.793+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T16:06:11.794+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e8f3b76
2025-08-22T16:06:11.794+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T16:06:11.794+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6cfe32cd
2025-08-22T16:06:11.795+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T16:06:11.795+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5f14eb51
2025-08-22T16:06:11.795+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T16:06:11.796+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3f31cf8f
2025-08-22T16:06:11.796+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@28721794
2025-08-22T16:06:11.796+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3507200d
2025-08-22T16:06:11.797+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T16:06:11.797+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4db10b9f
2025-08-22T16:06:11.797+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c4de811
2025-08-22T16:06:11.797+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@443b9ebb
2025-08-22T16:06:11.798+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4830c979
2025-08-22T16:06:11.798+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T16:06:11.798+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@d98ce13
2025-08-22T16:06:11.798+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86b2d1
2025-08-22T16:06:11.798+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65029fc
2025-08-22T16:06:11.798+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T16:06:11.798+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4865434e
2025-08-22T16:06:11.799+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T16:06:11.799+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3c6e407
2025-08-22T16:06:11.799+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T16:06:11.799+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T16:06:11.799+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@287dde94
2025-08-22T16:06:11.799+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T16:06:11.800+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T16:06:11.800+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2f650dae
2025-08-22T16:06:11.800+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4df8443f
2025-08-22T16:06:11.800+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79aa675b
2025-08-22T16:06:11.800+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T16:06:11.800+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3fe59f84
2025-08-22T16:06:11.800+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T16:06:11.801+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T16:06:11.801+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@38eafdab
2025-08-22T16:06:11.801+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@373c8f35
2025-08-22T16:06:11.801+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1d86b636
2025-08-22T16:06:11.801+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T16:06:11.801+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@e0c03bd
2025-08-22T16:06:11.802+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T16:06:11.802+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T16:06:11.802+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@61e4a072
2025-08-22T16:06:11.802+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T16:06:11.803+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@32f2de5c
2025-08-22T16:06:11.803+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T16:06:11.803+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1a6df932
2025-08-22T16:06:11.803+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T16:06:11.804+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@74120029
2025-08-22T16:06:11.804+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T16:06:11.804+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3031d9e9
2025-08-22T16:06:11.804+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T16:06:11.805+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1415f18d
2025-08-22T16:06:11.805+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@61c42e54
2025-08-22T16:06:11.805+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@533690d
2025-08-22T16:06:11.805+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@3bf306d3
2025-08-22T16:06:11.806+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@5101b9
2025-08-22T16:06:11.806+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@40273969
2025-08-22T16:06:11.817+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@455cb6d9
2025-08-22T16:06:11.817+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@455cb6d9
2025-08-22T16:06:11.819+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@29767156
2025-08-22T16:06:11.820+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6f6998b6
2025-08-22T16:06:11.820+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@60493524
2025-08-22T16:06:11.820+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1da5635e
2025-08-22T16:06:11.820+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c35d7d
2025-08-22T16:06:11.821+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24ccc91b
2025-08-22T16:06:11.821+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@d0538b3
2025-08-22T16:06:11.821+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3b8c15de
2025-08-22T16:06:11.821+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@26398f67
2025-08-22T16:06:11.902+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-22T16:06:11.953+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-22T16:06:12.280+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4c7d19bf
2025-08-22T16:06:12.283+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-22T16:06:12.401+03:00  INFO 19804 --- [DataStoreService] [Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-22T16:06:12.416+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@118d7e0e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@39ff4421)
2025-08-22T16:06:12.417+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a59780b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5205b3e2)
2025-08-22T16:06:12.422+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-08-22T16:06:12.422+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-22T16:06:12.437+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@60fc4450
2025-08-22T16:06:12.437+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60fc4450
2025-08-22T16:06:12.437+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@455cb6d9`
2025-08-22T16:06:12.445+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-22T16:06:12.445+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T16:06:12.445+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-22T16:06:12.451+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T16:06:12.452+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T16:06:12.452+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-22T16:06:12.452+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T16:06:12.453+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T16:06:12.453+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-22T16:06:12.455+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T16:06:12.455+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T16:06:12.455+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-22T16:06:12.460+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@490dfe25] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7aff1db3]
2025-08-22T16:06:14.510+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-22T16:06:14.513+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@490dfe25] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25ee6683]
2025-08-22T16:06:14.750+03:00 TRACE 19804 --- [DataStoreService] [Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@25ee6683] for TypeConfiguration
2025-08-22T16:06:14.751+03:00  INFO 19804 --- [DataStoreService] [Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T16:06:15.326+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=true]
2025-08-22T16:06:15.350+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:15.487+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T16:06:15.520+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.file(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.542+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T16:06:15.542+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.FilesController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.543+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T16:06:15.544+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.files(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.544+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T16:06:15.545+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.model.Files com.goglotek.frauddetector.datastoreservice.controller.FilesController.createFile(java.lang.String) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.545+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T16:06:15.546+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public java.lang.String com.goglotek.frauddetector.datastoreservice.controller.FilesController.testUrl()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.546+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.FilesController
2025-08-22T16:06:15.547+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.FilesController; public com.goglotek.frauddetector.datastoreservice.dto.FilesDto com.goglotek.frauddetector.datastoreservice.controller.FilesController.filteredFiles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.581+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:15.598+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T16:06:15.599+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.accounts()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.602+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController
2025-08-22T16:06:15.602+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController; public com.goglotek.frauddetector.datastoreservice.dto.GroupAccountsDto com.goglotek.frauddetector.datastoreservice.controller.GroupAccountsController.filteredAccounts(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.646+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController
2025-08-22T16:06:15.647+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.LocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.LocalTransactionsController.filteredMainTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.690+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T16:06:15.691+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; private static com.goglotek.frauddetector.datastoreservice.exception.ProcessingNotFoundException com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.lambda$processings$0(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.693+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T16:06:15.694+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Integer,java.lang.Integer,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.694+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProcessingController
2025-08-22T16:06:15.694+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProcessingController; public com.goglotek.frauddetector.datastoreservice.model.Processing com.goglotek.frauddetector.datastoreservice.controller.ProcessingController.processings(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:15.742+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:15.785+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-22T16:06:16.698+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:16.711+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T16:06:16.712+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.714+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T16:06:16.714+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.715+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T16:06:16.716+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderLocalTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.providerLocalTransactions(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.716+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController
2025-08-22T16:06:16.717+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderLocalTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderLocalTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.741+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:16.961+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:16.985+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T16:06:16.986+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public java.util.List com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.search(java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.987+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T16:06:16.988+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.filteredTransactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.988+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T16:06:16.989+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.GenericSuccessResponse com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.createTransactions(java.lang.String,java.util.List) throws com.goglotek.frauddetector.datastoreservice.exception.GoglotekException]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.989+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T16:06:16.990+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.dto.ProviderTransactionsDto com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transactions(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:16.990+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController
2025-08-22T16:06:16.991+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController; public com.goglotek.frauddetector.datastoreservice.model.ProviderTransactions com.goglotek.frauddetector.datastoreservice.controller.ProviderTransactionsController.transction(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:17.028+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.RoleController
2025-08-22T16:06:17.029+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.RoleController; public com.goglotek.frauddetector.datastoreservice.dto.RoleDto com.goglotek.frauddetector.datastoreservice.controller.RoleController.filteredRoles(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:17.039+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on: com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController
2025-08-22T16:06:17.040+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController; public com.goglotek.frauddetector.datastoreservice.exception.ErrorResponse com.goglotek.frauddetector.datastoreservice.controller.ServiceTesterController.testLoadBalancing()]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:17.052+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)
2025-08-22T16:06:17.053+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.model.Users com.goglotek.frauddetector.datastoreservice.controller.UsersController.updateUser(com.goglotek.frauddetector.datastoreservice.dto.CreateUserDto,java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:17.054+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)
2025-08-22T16:06:17.055+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public void com.goglotek.frauddetector.datastoreservice.controller.UsersController.deleteUser(java.lang.Long)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:17.055+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAuthority(\'ROLE_USER\')") found on specific method: public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
2025-08-22T16:06:17.055+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.goglotek.frauddetector.datastoreservice.controller.UsersController; public com.goglotek.frauddetector.datastoreservice.dto.UserDto com.goglotek.frauddetector.datastoreservice.controller.UsersController.filteredUsers(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.util.List)]] with attributes [[authorize: 'hasAuthority('ROLE_USER')', filter: 'null', filterTarget: 'null']]
2025-08-22T16:06:17.209+03:00  WARN 19804 --- [DataStoreService] [Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-22T16:06:18.612+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-08-22T16:06:18.669+03:00  INFO 19804 --- [DataStoreService] [Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name usersServiceImpl
2025-08-22T16:06:21.112+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure org.springframework.security.oauth2.server.authorization.config.annotation.web.configurers.OAuth2AuthorizationServerConfigurer$$Lambda$2240/0x0000014259d4a928@56d20e8d with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, AuthorizationServerContextFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, OAuth2AuthorizationServerMetadataEndpointFilter, OAuth2AuthorizationEndpointFilter, OAuth2DeviceVerificationEndpointFilter, NimbusJwkSetEndpointFilter, OAuth2ClientAuthenticationFilter, BearerTokenAuthenticationFilter, AuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter, OAuth2TokenEndpointFilter, OAuth2TokenIntrospectionEndpointFilter, OAuth2TokenRevocationEndpointFilter, OAuth2DeviceAuthorizationEndpointFilter
2025-08-22T16:06:21.142+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter
2025-08-22T16:06:22.004+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:22.012+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:22.016+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    0 nanoseconds spent acquiring 0 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    0 nanoseconds spent preparing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 pre-partial-flushes;
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:22.136+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring TestDispatcherServlet ''
2025-08-22T16:06:22.136+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-08-22T16:06:22.139+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2025-08-22T16:06:22.335+03:00  INFO 19804 --- [DataStoreService] [Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-08-22T16:06:22.418+03:00  WARN 19804 --- [DataStoreService] [Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-08-22T16:06:22.729+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 58915 (http) with context path '/'
2025-08-22T16:06:22.733+03:00  INFO 19804 --- [DataStoreService] [Test worker] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 58915
2025-08-22T16:06:22.746+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-08-22T16:06:22.802+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-08-22T16:06:22.808+03:00  INFO 19804 --- [DataStoreService] [Test worker] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-08-22T16:06:22.839+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-08-22T16:06:22.839+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-08-22T16:06:22.839+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-08-22T16:06:22.839+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-08-22T16:06:22.840+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-08-22T16:06:22.840+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-08-22T16:06:22.840+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-08-22T16:06:23.223+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-08-22T16:06:23.228+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-08-22T16:06:23.233+03:00  INFO 19804 --- [DataStoreService] [Test worker] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-08-22T16:06:23.237+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1755867983236 with initial instances count: 2
2025-08-22T16:06:23.246+03:00  INFO 19804 --- [DataStoreService] [Test worker] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATASTORESERVICE with eureka with status UP
2025-08-22T16:06:23.247+03:00  INFO 19804 --- [DataStoreService] [Test worker] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755867983247, current=UP, previous=STARTING]
2025-08-22T16:06:23.257+03:00  INFO 19804 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T16:06:23.356+03:00  INFO 19804 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T16:06:23.757+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.h.stat.internal.StatisticsImpl         : HHH000117: HQL: [CRITERIA] select u1_0.user_id,u1_0.account_not_expired,u1_0.account_not_locked,u1_0.account_verified,u1_0.active,u1_0.created_on,u1_0.credentials_not_expired,u1_0.email,u1_0.enabled,u1_0.failed_login_attempts,u1_0.firstname,u1_0.lastname,u1_0.login_disabled,u1_0.password,u1_0.updated_on,u1_0.username from users u1_0 where u1_0.email=?, time: 75ms, rows: 1
2025-08-22T16:06:23.797+03:00  INFO 19804 --- [DataStoreService] [Test worker] i.StatisticalLoggingSessionEventListener : Session Metrics {
    871400 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    637800 nanoseconds spent preparing 1 JDBC statements;
    5080800 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    23853400 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 1 collections);
    34100 nanoseconds spent executing 1 pre-partial-flushes;
    22200 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2025-08-22T16:06:23.807+03:00  INFO 19804 --- [DataStoreService] [Test worker] c.g.f.d.controller.FilesControllerTests  : Started FilesControllerTests in 17.789 seconds (process running for 19.826)
2025-08-22T16:06:24.033+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /oauth2/token
2025-08-22T16:06:24.061+03:00 TRACE 19804 --- [DataStoreService] [Test worker] o.s.s.w.a.logout.LogoutFilter            : Did not match request to Ant [pattern='/logout', POST]
2025-08-22T16:06:24.067+03:00 TRACE 19804 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Retrieved registered client
2025-08-22T16:06:24.445+03:00 TRACE 19804 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Validated client authentication parameters
2025-08-22T16:06:24.446+03:00 TRACE 19804 --- [DataStoreService] [Test worker] s.a.a.ClientSecretAuthenticationProvider : Authenticated client secret
2025-08-22T16:06:24.448+03:00 TRACE 19804 --- [DataStoreService] [Test worker] o.s.s.w.a.AuthenticationFilter           : Did not match request to org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.DPoPAuthenticationConfigurer$DPoPRequestMatcher@21707082
2025-08-22T16:06:24.453+03:00 TRACE 19804 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Authorizing POST /oauth2/token
2025-08-22T16:06:24.453+03:00 TRACE 19804 --- [DataStoreService] [Test worker] estMatcherDelegatingAuthorizationManager : Checking authorization on POST /oauth2/token using org.springframework.security.authorization.AuthenticatedAuthorizationManager@13ea5530
2025-08-22T16:06:24.454+03:00 TRACE 19804 --- [DataStoreService] [Test worker] o.s.s.w.a.AnonymousAuthenticationFilter  : Did not set SecurityContextHolder since already authenticated OAuth2ClientAuthenticationToken [Principal=test, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[]]
2025-08-22T16:06:24.457+03:00 TRACE 19804 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Retrieved registered client
2025-08-22T16:06:24.459+03:00 TRACE 19804 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Validated token request parameters
2025-08-22T16:06:24.582+03:00 TRACE 19804 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Generated access token
2025-08-22T16:06:24.584+03:00 TRACE 19804 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Saved authorization
2025-08-22T16:06:24.584+03:00 TRACE 19804 --- [DataStoreService] [Test worker] 2ClientCredentialsAuthenticationProvider : Authenticated token request
2025-08-22T16:06:30.770+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.s.security.web.FilterChainProxy        : Securing POST /files/create
2025-08-22T16:06:30.784+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.s.security.web.csrf.CsrfFilter         : Invalid CSRF token found for http://localhost:58915/files/create
2025-08-22T16:06:30.785+03:00 DEBUG 19804 --- [DataStoreService] [Test worker] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-08-22T16:08:20.210+03:00  WARN 19804 --- [DataStoreService] [HikariPool-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m7s817ms806µs100ns).
2025-08-22T16:08:20.367+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application DATASTORESERVICE with eureka with status DOWN
2025-08-22T16:08:20.368+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1755868100368, current=DOWN, previous=UP]
2025-08-22T16:08:20.368+03:00  INFO 19804 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0: registering service...
2025-08-22T16:08:20.373+03:00  INFO 19804 --- [DataStoreService] [DiscoveryClient-InstanceInfoReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - registration status: 204
2025-08-22T16:08:20.374+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-22T16:08:20.553+03:00  INFO 19804 --- [DataStoreService] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-22T16:08:20.569+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-22T16:08:20.571+03:00 TRACE 19804 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@25ee6683] for TypeConfiguration
2025-08-22T16:08:20.571+03:00 DEBUG 19804 --- [DataStoreService] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@eda3c08] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25ee6683]
2025-08-22T16:08:20.573+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-22T16:08:20.578+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-08-22T16:08:20.583+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-08-22T16:08:23.591+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-08-22T16:08:23.610+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATASTORESERVICE/Admin:DataStoreService:0 - deregister  status: 200
2025-08-22T16:08:23.610+03:00  INFO 19804 --- [DataStoreService] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
